COMMENT TAGS
for open items, search on //[^ -=>] as reg expr

//& is commented/uncommented to determine what is included in a build
//> is an internal constant that can be changed to alter behavior
//* is for immediate implementation
//? is probably for deletion (also /*? ... ?*/)
//x is for deletion (also /*x ... x*/)
//b is a basic call enhancement             13
//c is a code tools enhancement             16
//d is a decoupling enhancement              9
//e is an unclassified enhancement          18
//L is a swerr that should be a log          0
//p is a POTS enhancement                    4
//r is a restart enhancement                10
//s is a socket enhancement                 11
//t is a template enhancement                0
//u is a workaround for an unexplained bug   1
--------------------------------------------------------------------------------
v identifier cleanup:
  v decide which identifiers can be created dynamically rather than defined
    statically (none: all are potentially used in interprocessor messages)
	                   _Id Id MaxId RCell
	Class                -  x     x     x  ClassId, MaxClassId
	CliAppData           -  x     x     -
	CliIncrement         -  -     o     x  CliRegistry::MaxIncrements
	CliParm              -  -     o     x  subclasses define maximum
	Module               -  x     x     x
	Object               -  x     x     -  InstanceId, MaxInstanceId
	Object               -  x     o     -  ObjectId (=ClassId + InstanceId)
	ObjectPool           x  -     x     x
	PooledObject         x  -     o     -  BlockId (256 1K segments: 18 bits)
	PosixSignal          -  -     x     x
	RCell                -  x     o     -  uword
	Statistics           -  -     o     x  StatisticsRegistry::MaxStats
	StatisticsGroup      -  -     o     x  StatisticsRegistry::MaxGroups
	SysThread            -  x     o     -  uint32_t
	Thread               x  x     x     x
	TraceRecord          -  x     o     -  uint8_t
	Event                x  x     x     -
	EventHandler         x  x     x     -  multiple registration
	Factory              x  x     x     x
	InvokerPool          -  -     o     x  Thread::MaxFaction
	InvokerThread        -  -     o     x  InvokerPool::MaxInvokers
	Parameter            x  x     x     x
	Protocol             x  x     x     x
	ProtocolSM           -  -     x     -
	Service              x  x     x     x
	ServicePort          -  x     x     -  PortId, MaxPortId; service specific
	Signal               x  x     x     x
	State                x  x     x     x
	Timer                x  -     -     -  service specific
	Trigger              x  x     x     -  multiple registration
	Circuit              -  -     o     x  Switch::PortId
	Switch               -  x     x     -  PortId, MaxPortId
	Tone                 -  x     x     x
	BcRouting            -  x     o     -  factory specific, uint32_t
	Cause                -  x     x     -  Ind, NilInd, MaxInd
	Progress             -  x     x     -  Ind, NilInd, MaxInd
	Facility             -  x     x     -  Ind, NilInd, MaxInd
	PotsFeature          -  x     x     x
	PotsProfile          -  -     o     x  Address::DN
	PotsStats            -  x     x     -
	PotsTreatmentQueue   -  x     x     x  QId
	RegistryItem         -  -     -     x  testing class
	TestSession          x  -     x     -
--------------------------------------------------------------------------------
v users of dynamic memory:
  v CliAppData
    v NtTestData
	v StTestData
	v CliThread
  v MsgBuffer
    v invoke Cleanup to free StreamRequest and FileRequest unique_ptr resources
    v IpBuffer
  v Statistic
    v IpPort.stats_
    v ObjectPool.stats_
    v Thread.stats_
    v ThreadAdmin.stats_
    v Factory.stats_
    v InvokerPool.stats_
    v PotsStats.basicCalls_
    v PotsStats.treatments_
  v StatisticsGroup
    v IpPortRegistry.statsGroup_
    v ObjectPoolRegistry.statsGroup_
    v ThreadAdmin.statsGroup_
    v ThreadRegistry.statsGroup_
    v FactoryRegistry.statsGroup_
    v InvokerPoolRegistry.statsGroup_
	v PotsStats
  v StatisticsRegistry
  v Symbol
  v SymbolRegistry
  v SysSocket
    v SysTcpSocket
      v TcpIoThread (IpPort and sockets_)
	v SysUdpSocket
      v UdpIoThread (IpPort)
  v Context
  v Event
  v InvokerPool
    v InvokerWork
  v InvokerPoolRegistry
  v Message
  v ProtocolSM
  v SbIpBuffer
  v ServiceSM
  v TestSession
  v Timer
  v TimerRegistry
  v MediaEndpt
  v BcSsm.StateCount_
  v Switch
  v Circuit
    v Tone
    v PotsCircuit, PotsCircuit.StateCount_
      v PotsProfile.state_, circuit_ and objAddr_
  v ToneRegistry
  v TrafficCall
    v TrafficCall, TrafficCall.StateCount_
  v TrafficCallPool
--------------------------------------------------------------------------------
v users of temporary memory:
  * most items in CodeTools library
  v FunctionProfiler none                                NtSaveCommand (stack)
  v FunctionStats    none                                FunctionProfiler
  v LbcPool          singleton                           NtIncrement.cpp
  v MscAddress       none                                MscBuilder.addressq_
  v MscBuilder       row_ ([string*])                    StSaveCommand (stack)
  v MscContext       none                                MscBuilder.contextq_
  v MscContextPair   none                                MscBuilder.pairq_
  v Q1WayPool        singleton                           NtIncrement.cpp
  v Q1WayItem        none                                Q1WayPool
  v Q2WayPool        singleton                           NtIncrement.cpp
  v Q2WayItem        none                                Q2WayPool
  v RegistryPool     singleton                           NtIncrement.cpp
  v RegistryItem     none                                RegistryPool
  v SysTimePool      singleton                           NtIncrement.cpp
--------------------------------------------------------------------------------
CWT TESTING
A=original/active call (make A originator to allow immediate release)
B=waiting/held call
Other testcases:
x Disconnect service progressing to lockout: 18
x CWT denied because original call is not in acceptable state: 17
x CWT denied because original call has CCW active: 16
x CWT initiated when multiplexer is in Passive state: 19
x CWT denied when multiplexer is in Passive state: 20
x CWT denied when multiplexer is in Active state: 21
o CWT chaining

STATE           #  Abbr                                                     Tmr  ExB  ExC  ExA  Fls  Off  Oth
CwtNull         0   Nu0  waiting for A to disconnect                         4B   2I   4C   5D        5B   2K  (Tmr: C AnswerTimeout; Oth: Sus)
CwtNull         1   Nu1  only a basic call remains                                --   5C   1E
CwtInitiating   2   In2  Facility signals between waiting and active call    --                            1A  (Oth: Ack)
CwtPending      2   Pe2  expecting waiting call to apply ringing                                           1B  (Oth: Ring)
CwtDenied       2   De2  expecting waiting call to release: 15 (active call has CCW), 16 (active call is alerting)
CwtNotifying    2   Nf2  applying first burst of CWT tone                    1C   9A   --   --   --
CwtNotified     2   Nd2  waiting to apply second burst of CWT tone           2A   3A   1D   5A   --
CwtRenotifying  2   Rf2  applying second burst of CWT tone                   2B   --  10A   --   --
CwtRenotified   2   Rd2  waiting call unanswered                             4A   --   --   --   2C
CwtUnanswered   2   Ud2  expecting waiting call to release
CwtAnswering    2   Ag2  expecting waiting call to stop ringing                                            --  (Oth: !Ring)
CwtAnswered     2   AdH  waiting call answered and held                          11A   --   2H   2E
CwtAnswered     2   AdA  waiting call answered and active                         7A   8A   --   2D       2FG  (Oth: Sus/Res)
CwtNotifying    1   Nf1  applying first burst of CWT tone                    --        --   --   --
CwtNotified     1   Nd1  waiting to apply second burst of CWT tone           3B        --  15A   --
CwtRenotifying  1   Rf1  applying second burst of CWT tone                   3C        --   --   --
CwtRenotified   1   Rd1  waiting call unanswered                             6A        --   --   3D
CwtUnanswered   1   Ud1  expecting waiting call to release                   6B
CwtAnswering    1   Ag1  expecting waiting call to stop ringing                                            3E  (Oth: !Ring)
CwtRinging      1   Rg1  unanswered and ringing                          (semi-transient: to Nu1 after Alerting)
CwtHolding      1   Hg1  answered and on hold                               11B   --  12A   8B   9B
CwtReringing    1   Re1  answered and reringing CWT subscriber              13A   --  14A            8C/2J