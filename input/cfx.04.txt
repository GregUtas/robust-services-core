subscribe &dn.B cwt
subscribe &dn.B cfb &dn.E
tests begin cfx.04

/ A-B: ANSWER
read bc.AB
delay 2

/ D-B: CWT
inject PS B &port.D
delay 1
inject PS D &port.D &dn.B
delay 2
verify PS S &port.D s=d m=&port.dial
verify PS S &port.D s=x m=&port.silence
verify PM F &port.B f &service.cwm &facility.req
verify PC F &port.B f &service.cwa &facility.req
verify PM F &port.B f &service.cwm &facility.ack
verify PC F &port.B f &service.cwb &facility.ack
verify PM S &port.B r=t
verify PS S &port.B s=f m=&port.cwt
verify PC A &port.B
verify PS S &port.D m=&port.ringback

/ C-B(CFB)-E: RINGBACK
inject PS B &port.C
delay 1
inject PS D &port.C &dn.B
delay 5
/ VERIFY C-E ALERTING AFTER B(CWT) FAILS
verify PS S &port.C s=d m=&port.dial
verify PS S &port.C s=x m=&port.silence
verify PM F &port.B f &service.cwm &facility.req
verify PC F &port.B f &service.cwb &facility.nack
verify PM R &port.B &cause.callredirected
verify PS S &port.E r=t
verify PS S &port.C m=&port.ringback
/ VERIFY A-B RECONNECTED (END OF CWT TONE)
verify PS S &port.B m=&port.A

/ C-E ANSWER; RELEASE
inject PS B &port.E
delay 2
inject PS E &port.C
delay 2
inject PS E &port.E
delay 2
/* ADD VERIFICATION

/ RELEASE A, B, D
inject PS E &port.A
inject PS E &port.D
inject PS E &port.B
delay 2
contexts c
if &cli.result != 0 tests failed &cli.result "Context(s) not idled"

tests end
unsubscribe &dn.B cfb
unsubscribe &dn.B cwt