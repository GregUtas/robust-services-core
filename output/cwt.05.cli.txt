pots>start
  OK.
pots>/ 5A
pots>read cwt.Nd2ExA
pots>/ RENOTIFIED 2: ONHOOK A (RING)
pots>inject PS E &port.A
  OK.
pots>delay 2
  OK.
pots>verify PC E &port.A
  OK.
pots>verify PM R &port.A &cause.normal
  OK.
pots>verify PS S &port.A r=t m=&port.silence
  OK.
pots>verify PC P &port.A &prog.media m=&port.A
  OK.
pots>verify PS S &port.B m=&port.silence c=&cause.normal
  OK.
pots>/ verify PC A &port.A [sent by shelf, so marked injected]
pots>verify PS S &port.A s=x
  OK.
pots>verify PC F &port.A f &service.cwb &facility.cwt.alerted
  OK.
pots>/ IDLE B
pots>read cwt.Nu0ExB
pots>/ NULL 0: IDLE B
pots>inject PS E &port.B
  OK.
pots>delay 2
  OK.
pots>verify PS R &port.B &cause.normal
  OK.
pots>/ 5B
pots>read cwt.Nu1Off
pots>/ NULL: C RINGING A; ANSWER
pots>inject PS B &port.A
  OK.
pots>delay 2
  OK.
pots>verify PC B &port.A
  OK.
pots>verify PM S &port.A r=f m=&port.C
  OK.
pots>verify PS S &port.A r=f m=&port.C
  OK.
pots>verify PS S &port.C m=&port.A
  OK.
pots>/ 5C
pots>read cwt.Nu1ExC
pots>/ NULL 1: IDLE C
pots>inject PS E &port.C
  OK.
pots>delay 2
  OK.
pots>verify PS R &port.C &cause.normal
  OK.
pots>verify PM S &port.A m=&port.silence c=&cause.normal
  OK.
pots>verify PS S &port.A m=&port.silence c=&cause.normal
  OK.
pots>/ 5D
pots>read cwt.Nu0ExA
pots>/ NULL 0: IDLE A
pots>inject PS E &port.A
  OK.
pots>delay 2
  OK.
pots>verify PC E &port.A
  OK.
pots>verify PM R &port.A &cause.normal
  OK.
pots>verify PS R &port.A &cause.normal
  OK.
pots>delay 2
  OK.
pots>testcase end
  OK.
read test.cp.epilog
pots>stop
  OK.
pots>contexts c
  0
pots>if &cli.result != 0 testcase failed &cli.result "Context(s) not idled"
  Result is false.
pots>save funcs &testcase.name
  OK.
pots>/ save trace &testcase.name
pots>/ save msc &testcase.name
pots>clear buffer
  OK.
pots>send cout
  OK.
