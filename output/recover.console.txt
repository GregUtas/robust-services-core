
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               684    14:15:22.358
NodeBase.NbModule...                    14:15:23.042
...initialized                    87
NodeTools.NtModule...                   14:15:23.139
...initialized                    25
CodeTools.CtModule...                   14:15:23.172
...initialized                    17
NetworkBase.NwModule...                 14:15:23.196

    NET500 24-Oct-2019 14:15:23.211 on Reigi {1}
...initialized                   131
SessionBase.SbModule...                 14:15:23.337
...initialized                    95
SessionTools.StModule...                14:15:23.440
...initialized                    22
MediaBase.MbModule...                   14:15:23.481
...initialized                    13
CallBase.CbModule...                    14:15:23.504
...initialized                    24
PotsBase.PbModule...                    14:15:23.538
...initialized                    25
OperationsNode.OnModule...              14:15:23.575
...initialized                    10
ControlNode.CnModule...                 14:15:23.599
...initialized                    14
RoutingNode.RnModule...                 14:15:23.628
...initialized                    13
ServiceNode.SnModule...                 14:15:23.655
...initialized                    48
AccessNode.AnModule...                  14:15:23.718
...initialized                    19
                               -----
total initialization time       1394

    NODE500 24-Oct-2019 14:15:23.766 on Reigi {2}
nb>read test.trap.all
nb>/ MAKE RECOVERY TEST THREAD CRITICAL
nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>sb exclude timers
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>swflags set &flag.criticalthread on
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 24-Oct-2019 14:15:28.600 on Reigi {3}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000ece0)
    signal=0 (Unknown Signal)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 24-Oct-2019 14:15:32.269 on Reigi {4}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 1
    type=Software Abort
    errstr : 9
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 197[61]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3600[25]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:15:35.412 on Reigi {5}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:15:35.417 on Reigi {6}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=48
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 24-Oct-2019 14:15:35.587 on Reigi {7}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3582[0]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 24-Oct-2019 14:15:38.869 on Reigi {8}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 3
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 24-Oct-2019 14:15:42.177 on Reigi {9}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 4
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3593[15]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:15:45.296 on Reigi {10}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:15:45.314 on Reigi {11}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=37
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 24-Oct-2019 14:15:45.465 on Reigi {12}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 5
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Trap limit exceeded.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3593[15]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 03D1C18C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03D947F0
        NodeBase.SysThread
        this : 03D947F0
        patchArea : 0x0
        nthread  : 000003F8
        nid      : ed40
        status   : 000
        event    : 000003DC
        guard    : 000003D8
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AEDA78
        patchArea : 0x0
        stackBase  : 06FCFA94
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AEDA88
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654470598935
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AEDAA8
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654602865468
          limit    : 4
          count    : 0
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 122
        vector     : 0
        prevUsecs  : 2826
        currUsecs  : 19
        currStart  : 9654602832187
        currEnd    : 9654617632187
      test   : 0
      signal : 4
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 24-Oct-2019 14:15:48.804 on Reigi {13}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 6
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3593[15]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:15:51.946 on Reigi {14}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:15:51.952 on Reigi {15}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=47
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 24-Oct-2019 14:15:52.107 on Reigi {16}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 7
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3593[15]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 24-Oct-2019 14:16:00.872 on Reigi {17}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 8
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3575[8]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:04.063 on Reigi {18}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:04.158 on Reigi {19}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=158
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 24-Oct-2019 14:16:08.665 on Reigi {20}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1785[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2841[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3603[8]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:11.834 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:11.880 on Reigi {22}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=88
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 24-Oct-2019 14:16:12.048 on Reigi {23}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40): trap number 10
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2257[17]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3607[0]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 03D1C18C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03D947F0
        NodeBase.SysThread
        this : 03D947F0
        patchArea : 0x0
        nthread  : 000003F8
        nid      : ed40
        status   : 000
        event    : 000003DC
        guard    : 000003D8
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AEDA78
        patchArea : 0x0
        stackBase  : 06FCFA94
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AEDA88
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654470598935
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AEDAA8
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654786257300
          limit    : 4
          count    : 4
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 3327568
        currUsecs  : 98
        currStart  : 9654868667308
        currEnd    : 9654883467308
      test   : 0
      signal : 126
delay 3

    THR901 24-Oct-2019 14:16:12.048 on Reigi {24}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000ed40)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 24-Oct-2019 14:16:15.348 on Reigi {25}
    by NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000f9bc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 24-Oct-2019 14:16:15.353 on Reigi {26}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000f9bc): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1623[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3369[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1746[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.Thread.RunningThread @ thread.cpp + 2641[11]
      NodeBase.Thread.Trace @ thread.cpp + 3320[13]
      NodeBase.Thread.Pause @ thread.cpp + 2143[20]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3614[10]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 03D1C2C4
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03AF2078
        NodeBase.SysThread
        this : 03AF2078
        patchArea : 0x0
        nthread  : 0000031C
        nid      : f9bc
        status   : 000
        event    : 00000318
        guard    : 000003E4
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AED328
        patchArea : 0x0
        stackBase  : 0984FA98
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AED338
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654901683847
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AED358
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654901748225
          limit    : 4
          count    : 1
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        currStart  : 9654901704067
        currEnd    : 9654954904067
      test   : 0
      signal : 0
delay 3

    THR901 24-Oct-2019 14:16:15.354 on Reigi {27}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000f9bc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:18.478 on Reigi {28}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:18.517 on Reigi {29}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=59
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 24-Oct-2019 14:16:24.958 on Reigi {30}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000d744)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 24-Oct-2019 14:16:24.983 on Reigi {31}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000d744): trap number 12
    type=Signal
    signal : 121 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1623[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3369[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1746[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.LoopForever @ ntincrement.cpp + 3644[12]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3588[0]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:28.209 on Reigi {32}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:28.224 on Reigi {33}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=117
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 24-Oct-2019 14:16:29.447 on Reigi {34}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000d744): trap number 13
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 2879[14]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1754[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3667[11]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      ...1997 functions omitted.
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3669[12]
delay 3
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.TrapDuringRecovery
symbols set testcase.name recover.TrapDuringRecovery
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recoverytrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 24-Oct-2019 14:16:34.832 on Reigi {35}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000d744): trap number 14
    type=Software Abort
    errstr : 9
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 197[61]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3600[25]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 3
nt>swflags set &flag.recoverytrap off
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:37.969 on Reigi {36}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:38.018 on Reigi {37}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=69
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapDuringRecovery completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>recover delete f
nt>
    THR900 24-Oct-2019 14:16:43.163 on Reigi {38}
    thread=NodeBase.Thread (tid=15, nid=0x0000d744)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1077[16]
      NodeTools.RecoveryTestThread.~RecoveryTestThread @ ntincrement.cpp + 3521[15]
      NodeTools.RecoveryTestThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Destroy @ singleton.h + 103[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 3942[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 1985[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 1985[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03D1C3FC
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03AF1208
        NodeBase.SysThread
        this : 03AF1208
        patchArea : 0x0
        nthread  : 0000048C
        nid      : d744
        status   : 000
        event    : 0000031C
        guard    : 000003D8
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : slp
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AEDEF8
        patchArea : 0x0
        stackBase  : 0984FA94
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AEDF08
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654997996029
          limit    : 6
          count    : 1
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AEDF28
          patchArea : 0x0
          interval : 600000000
          lastTime : 9654998044123
          limit    : 4
          count    : 3
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 89
        currUsecs  : 76
        currStart  : 9655156551394
        currEnd    : 0
delay 3

    SW900 24-Oct-2019 14:16:43.835 on Reigi {39}
    in Orphans.ExitNow
    errval=orphan exited  offset=0xd744
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 96[22]
      NodeBase.Debug.SwLog @ debug.cpp + 209[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 619[41]
      NodeBase.Thread.RunningThread @ thread.cpp + 2670[12]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1589[7]
      NodeBase.Thread.Pause @ thread.cpp + 2162[12]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3614[10]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:16:46.392 on Reigi {40}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:16:46.402 on Reigi {41}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=91
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    THR900 24-Oct-2019 14:16:51.562 on Reigi {42}
    thread=NodeBase.Thread (tid=15, nid=0x0000fabc)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1077[16]
      NodeTools.RecoveryTestThread.~RecoveryTestThread @ ntincrement.cpp + 3521[15]
      NodeTools.RecoveryTestThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Destroy @ singleton.h + 103[34]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3579[0]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03D1C534
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03AF1320
        NodeBase.SysThread
        this : 03AF1320
        patchArea : 0x0
        nthread  : 0000048C
        nid      : fabc
        status   : 000
        event    : 00000298
        guard    : 000003B8
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AEDA78
        patchArea : 0x0
        stackBase  : 0984FB48
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AEDA88
          patchArea : 0x0
          interval : 600000000
          lastTime : 9655213802377
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AEDAA8
          patchArea : 0x0
          interval : 600000000
          lastTime : 9655213802380
          limit    : 4
          count    : 0
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 415
        currUsecs  : 0
        currStart  : 9655263837413
        currEnd    : 9655276637413
delay 3

    SW900 24-Oct-2019 14:16:51.564 on Reigi {43}
    in Orphans.ExitNow
    errval=orphan exited  offset=0xfabc
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 96[22]
      NodeBase.Debug.SwLog @ debug.cpp + 209[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 619[41]
      NodeBase.Thread.RunningThread @ thread.cpp + 2670[12]
      NodeBase.Thread.Pause @ thread.cpp + 2146[7]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3614[10]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ Exit the recovery thread so that it has to be recreated, and then
nt>/ set the flag that causes a trap in its constructor before doing so.
nt>/ This also causes a trap in the CLI thread, because it is the thread
nt>/ that attempts to create the recovery thread.
nt>recover return
nt>
    THR901 24-Oct-2019 14:16:54.909 on Reigi {44}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000da28)
    signal=0 (Unknown Signal)
delay 3
nt>swflags set &flag.threadctortrap on
nt>include faction &faction.admin
nt>delay 1
nt>recover return
nt>
    THR900 24-Oct-2019 14:16:58.955 on Reigi {45}
    thread=NodeBase.Thread (tid=15, nid=0x0000e9f0)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1077[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 3903[5]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 1985[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 1985[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03D1C7A4
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03D95158
        NodeBase.SysThread
        this : 03D95158
        patchArea : 0x0
        nthread  : 000003A0
        nid      : e9f0
        status   : 000
        event    : 000003D8
        guard    : 0000031C
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 5
      blocked   : rdy
      status    : unspecified
      waiting   : true
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 9655337716583
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 03AED4D8
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03AED4E8
          patchArea : 0x0
          interval : 600000000
          lastTime : 9655337688765
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03AED508
          patchArea : 0x0
          interval : 600000000
          lastTime : 9655337688768
          limit    : 4
          count    : 0
        entered    : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        currStart  : 0
        currEnd    : 0
swflags set &flag.threadctortrap off

    THR902 24-Oct-2019 14:16:58.957 on Reigi {46}
    in NodeBase.CliThread (tid=9, nid=0x0000f0b8): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.SysThread.Suspend @ systhread.win.cpp + 316[11]
      NodeBase.SysThread.Wait @ systhread.cpp + 156[0]
      NodeBase.Thread.Ready @ thread.cpp + 2357[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1512[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
nt>delay 3
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 24-Oct-2019 14:17:02.137 on Reigi {47}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-Oct-2019 14:17:02.235 on Reigi {48}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=138
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>/ testcase begin recover.Ctrl-Break  equivalent to trap.18
nt>/ read trap.19
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 24-Oct-2019 14:17:07.981 on Reigi {49}
    for NodeBase.CliThread (tid=9, nid=0x0000f0b8)
    signal=2 (SIGINT: Terminal Interrupt)

    THR903 24-Oct-2019 14:17:09.695 on Reigi {50}
    by NodeBase.InitThread (tid=2, nid=0x0000edc4)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000e288)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 24-Oct-2019 14:17:09.814 on Reigi {51}
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000e288)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 24-Oct-2019 14:17:09.848 on Reigi {52}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000e288): trap number 16
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1623[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3369[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1746[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.LoopForever @ ntincrement.cpp + 3644[12]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3588[0]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 24-Oct-2019 14:17:09.849 on Reigi {53}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000e288) extra msecs=76
nt>
    THR902 24-Oct-2019 14:17:09.876 on Reigi {54}
    in NodeBase.CliThread (tid=9, nid=0x0000f0b8): trap number 17
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1623[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3369[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1746[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.Q1Way<NodeBase.Pooled>.Deq @ q1way.h + 151[11]
      NodeBase.ObjectPool.DeqBlock @ objectpool.cpp + 543[14]
      NodeBase.MsgBuffer.operator new @ msgbuffer.cpp + 87[27]
      NodeBase.FileThread.Spool @ filethread.cpp + 328[7]
      NodeBase.FileThread.Spool @ filethread.cpp + 368[19]
      NodeBase.FileThread.Record @ filethread.cpp + 283[18]
      NodeBase.CoutThread.Spool @ coutthread.cpp + 118[46]
      NodeBase.CliBuffer.GetLine @ clibuffer.cpp + 364[9]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 665[22]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 1985[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 2992[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1525[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR905 24-Oct-2019 14:17:10.062 on Reigi {55}
    thread=NodeBase.CliThread (tid=9, nid=0x0000f0b8) extra msecs=84
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase query
  Current test session:
    Passed: 19
    Failed: 0
  Testcase database:
    unreported: 0  failed: 0  re-execute: 0  passed: 108
nt>