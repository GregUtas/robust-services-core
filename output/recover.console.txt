
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               159    09:14:11.906
NodeBase.NbModule...                    09:14:12.066
...initialized                   140
NodeTools.NtModule...                   09:14:12.214
...initialized                    52
CodeTools.CtModule...                   09:14:12.275
...initialized                    28
NetworkBase.NwModule...                 09:14:12.312

    NET500 3-May-2020 09:14:12.336 on Reigi {1}
...initialized                   217
SessionBase.SbModule...                 09:14:12.538
...initialized                   138
ControlNode.CnModule...                 09:14:12.686
...initialized                     8
SessionTools.StModule...                09:14:12.708
...initialized                    40
MediaBase.MbModule...                   09:14:12.762
...initialized                    26
CallBase.CbModule...                    09:14:12.809
...initialized                    43
PotsBase.PbModule...                    09:14:12.866
...initialized                    52
OperationsNode.OnModule...              09:14:12.934
...initialized                    19
RoutingNode.RnModule...                 09:14:12.967
...initialized                    16
ServiceNode.SnModule...                 09:14:12.997
...initialized                    66
AccessNode.AnModule...                  09:14:13.075
...initialized                    24
                               -----
total initialization time       1206

    NODE500 3-May-2020 09:14:13.127 on Reigi {2}
nb>read test.trap.all
nb>/ MAKE RECOVERY TEST THREAD CRITICAL
nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>include faction &faction.system
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>swflags set &flag.disablerootthread on
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 3-May-2020 09:14:22.536 on Reigi {3}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00009518)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 3-May-2020 09:14:25.168 on Reigi {4}
    in NodeTools.RecoveryThread (tid=15, nid=0x000060e0): trap number 1
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 204[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 4098[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4184[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:26.285 on Reigi {5}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:26.304 on Reigi {6}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=40
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtrExit
symbols set testcase.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr
nt>
    THR902 3-May-2020 09:14:27.618 on Reigi {7}
    in NodeTools.RecoveryThread (tid=15, nid=0x000060e0): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4153[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 3-May-2020 09:14:27.618 on Reigi {8}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000060e0)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 1
nt>swflags set &flag.reenterthread on
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name

    THR903 3-May-2020 09:14:29.942 on Reigi {9}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:30.010 on Reigi {10}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=68
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtrExit completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 3-May-2020 09:14:30.238 on Reigi {11}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007fa4): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4153[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>
    THR903 3-May-2020 09:14:31.587 on Reigi {12}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:31.742 on Reigi {13}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=176
read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 3-May-2020 09:14:31.826 on Reigi {14}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007fa4): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4156[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 3-May-2020 09:14:33.171 on Reigi {15}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007fa4): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4087[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4177[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:34.376 on Reigi {16}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:34.384 on Reigi {17}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=70
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 3-May-2020 09:14:34.542 on Reigi {18}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007fa4): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4087[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4177[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 3-May-2020 09:14:35.887 on Reigi {19}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007fa4): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4087[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4177[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR906 3-May-2020 09:14:35.887 on Reigi {20}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00007fa4)
    signal=15 (SIGTERM: Termination Request)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:37.088 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:37.094 on Reigi {22}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=70
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 3-May-2020 09:14:37.272 on Reigi {23}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007548): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4087[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4177[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name

    THR903 3-May-2020 09:14:38.530 on Reigi {24}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:38.623 on Reigi {25}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=155
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 3-May-2020 09:14:43.406 on Reigi {26}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007548): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ ntincrement.cpp + 4053[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4144[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:45.576 on Reigi {27}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:45.783 on Reigi {28}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=248
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 3-May-2020 09:14:50.373 on Reigi {29}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007548): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3226[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ ntincrement.cpp + 4109[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4187[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:52.548 on Reigi {30}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:52.777 on Reigi {31}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=250
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 3-May-2020 09:14:53.004 on Reigi {32}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007548): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2697[17]
      NodeTools.RecoveryThread.DoTrap @ ntincrement.cpp + 4120[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4190[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 02CF79D0
      patchArea : 0x0
      systhrd : 06B24308
        NodeBase.SysThread
        this : 06B24308
        patchArea : 0x0
        nthread  : 00000338
        nid      : 7548
        status   : 000
        event    : 00000350
        guard    : 00000340
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BE838
        patchArea : 0x0
        stackBase  : 0755F94C
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BE850
          patchArea : 0x0
          interval : 600000000
          lastTime : 5267949082659
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BE870
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268112929906
          limit    : 4
          count    : 3
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 3223300
        currUsecs  : 0
        readyTime  : 5268120209828
        currStart  : 5268120213478
        currEnd    : 5268122613478
      test   : 0
      signal : 126
testcase end

    THR901 3-May-2020 09:14:53.005 on Reigi {33}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00007548)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:54.177 on Reigi {34}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:54.203 on Reigi {35}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=67
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 3-May-2020 09:14:54.606 on Reigi {36}
    by NodeBase.CliThread (tid=9, nid=0x00008820)
    for NodeTools.RecoveryThread (tid=15, nid=0x000091bc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 3-May-2020 09:14:54.611 on Reigi {37}
    in NodeTools.RecoveryThread (tid=15, nid=0x000091bc): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1921[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3758[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2026[0]
      NodeBase.Debug.ft @ debug.cpp + 71[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1861[11]
      NodeBase.Thread.Pause @ thread.cpp + 2582[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4199[10]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 034C9DD0
      patchArea : 0x0
      systhrd : 06B243C8
        NodeBase.SysThread
        this : 06B243C8
        patchArea : 0x0
        nthread  : 000004DC
        nid      : 91bc
        status   : 000
        event    : 000004F0
        guard    : 000002B4
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BEA18
        patchArea : 0x0
        stackBase  : 0943F964
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BEA30
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268120265679
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BEA50
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268136315526
          limit    : 4
          count    : 1
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 26
        readyTime  : 5268120288309
        currStart  : 5268136275735
        currEnd    : 2000000
      test   : 0
      signal : 0
testcase end

    THR901 3-May-2020 09:14:54.612 on Reigi {38}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000091bc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:55.723 on Reigi {39}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:55.767 on Reigi {40}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=44
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 3-May-2020 09:14:57.174 on Reigi {41}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeTools.RecoveryThread (tid=15, nid=0x00007c10)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 3-May-2020 09:14:57.195 on Reigi {42}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007c10): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1921[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3758[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2026[0]
      NodeBase.Debug.ft @ debug.cpp + 71[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4218[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4159[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:14:59.431 on Reigi {43}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:59.502 on Reigi {44}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=153
save funcs &testcase.name

    THR903 3-May-2020 09:14:59.627 on Reigi {45}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:14:59.632 on Reigi {46}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=66
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 3-May-2020 09:15:00.914 on Reigi {47}
    in NodeTools.RecoveryThread (tid=15, nid=0x00007c10): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 3273[14]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2034[0]
      NodeBase.Debug.ft @ debug.cpp + 71[9]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4240[11]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4242[12]
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:03.261 on Reigi {48}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:03.506 on Reigi {49}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=369
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock
nt>
    SW900 3-May-2020 09:15:03.731 on Reigi {50}
    in Thread.EnterBlockingOperation
    errval=mutex holder  offset=0x1
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1756[55]
      NodeBase.Thread.Pause @ thread.cpp + 2579[14]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4162[7]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:04.915 on Reigi {51}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:04.932 on Reigi {52}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=60
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit
nt>
    THR907 3-May-2020 09:15:05.344 on Reigi {53}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00007c10)
    mutexes=1

    THR901 3-May-2020 09:15:05.345 on Reigi {54}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00007c10)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:06.458 on Reigi {55}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:06.501 on Reigi {56}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=43
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap
nt>
    THR907 3-May-2020 09:15:06.657 on Reigi {57}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00009160)
    mutexes=1

    THR902 3-May-2020 09:15:06.657 on Reigi {58}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009160): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4171[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.TrapInRecover
symbols set testcase.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 3-May-2020 09:15:09.035 on Reigi {59}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009160): trap number 16
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 204[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 4098[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4184[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-May-2020 09:15:09.038 on Reigi {60}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009160): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.Recover @ ntincrement.cpp + 4231[0]
      NodeBase.Thread.Start @ thread.cpp + 3330[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>swflags set &flag.recovertrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:11.183 on Reigi {61}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:11.261 on Reigi {62}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=98
save funcs &testcase.name

    THR903 3-May-2020 09:15:11.386 on Reigi {63}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:11.393 on Reigi {64}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=69
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapInRecover completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ InitThread will trap when it invokes RecoveryDaemon.CreateThread
nt>/ to recreate the recovery thread.
nt>recover ctortrap
nt>
    THR901 3-May-2020 09:15:11.610 on Reigi {65}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00009160)
    signal=0 (Normal Exit)

    THR900 3-May-2020 09:15:11.634 on Reigi {66}
    thread=NodeBase.Thread (tid=15, nid=0x0000919c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1331[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 034C9F50
      patchArea : 0x0
      systhrd : 06B24308
        NodeBase.SysThread
        this : 06B24308
        patchArea : 0x0
        nthread  : 00000410
        nid      : 919c
        status   : 000
        event    : 0000046C
        guard    : 000004E8
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BE8D8
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BE8F0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268306307545
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BE910
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268306307604
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0
testcase end

    SW900 3-May-2020 09:15:11.643 on Reigi {67}
    in Threads.GetState
    errval=orphan exited  offset=0x919c
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Threads.GetState @ thread.cpp + 839[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1801[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-May-2020 09:15:11.644 on Reigi {68}
    in NodeBase.InitThread (tid=2, nid=0x00002db4): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3985[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>
    THR903 3-May-2020 09:15:13.026 on Reigi {69}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:13.109 on Reigi {70}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=146
testcase begin recover.DaemonReenable
symbols set testcase.name recover.DaemonReenable
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.25
nt>/ RECOVER disable daemon; kill thread; enable daemon; thread recreated
nt>daemons set 9 off
nt>delay 1
nt>sched kill 15
nt>
    THR903 3-May-2020 09:15:14.279 on Reigi {71}
    by NodeBase.CliThread (tid=9, nid=0x00008820)
    for NodeTools.RecoveryThread (tid=15, nid=0x0000492c)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
delay 2

    THR902 3-May-2020 09:15:14.291 on Reigi {72}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000492c): trap number 19
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1921[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3758[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2026[0]
      NodeBase.Debug.ft @ debug.cpp + 71[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1861[11]
      NodeBase.Thread.Pause @ thread.cpp + 2582[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4199[10]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 034CA2D0
      patchArea : 0x0
      systhrd : 06B24158
        NodeBase.SysThread
        this : 06B24158
        patchArea : 0x0
        nthread  : 000004AC
        nid      : 492c
        status   : 000
        event    : 000004B0
        guard    : 000004C4
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BE798
        patchArea : 0x0
        stackBase  : 093FFCA0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BE7B0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268306665813
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BE7D0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268333123094
          limit    : 4
          count    : 1
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 35
        readyTime  : 5268306686473
        currStart  : 5268333031717
        currEnd    : 2000000
      test   : 0
      signal : 0

    THR901 3-May-2020 09:15:14.294 on Reigi {73}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000492c)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

  * THR300 3-May-2020 09:15:14.296 on Reigi {74}
    Alarm ON: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 3-May-2020 09:15:16.341 on Reigi {75}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:18.525 on Reigi {76}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:18.644 on Reigi {77}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=160
save funcs &testcase.name

    THR903 3-May-2020 09:15:18.752 on Reigi {78}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:18.771 on Reigi {79}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=41
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonReenable completed.
nt>testcase begin recover.DaemonRetrap
symbols set testcase.name recover.DaemonRetrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.26
nt>/ RECOVER daemon retraps trying to recreate thread; reenable to create thread
nt>swflags set &flag.threadctorretrap on
nt>delay 1
nt>recover ctortrap
nt>
    THR901 3-May-2020 09:15:20.000 on Reigi {80}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000080e8)
    signal=0 (Normal Exit)

    THR900 3-May-2020 09:15:20.007 on Reigi {81}
    thread=NodeBase.Thread (tid=15, nid=0x00004d88)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1331[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 034CA290
      patchArea : 0x0
      systhrd : 06B24158
        NodeBase.SysThread
        this : 06B24158
        patchArea : 0x0
        nthread  : 000004B8
        nid      : 4d88
        status   : 000
        event    : 000001EC
        guard    : 00000394
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BEE78
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BEE90
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268390210023
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BEEB0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268390210060
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0
delay 1

    SW900 3-May-2020 09:15:20.009 on Reigi {82}
    in Threads.GetState
    errval=orphan exited  offset=0x4d88
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Threads.GetState @ thread.cpp + 839[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1801[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-May-2020 09:15:20.010 on Reigi {83}
    in NodeBase.InitThread (tid=2, nid=0x00002db4): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3985[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR900 3-May-2020 09:15:20.017 on Reigi {84}
    thread=NodeBase.Thread (tid=15, nid=0x00007d04)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1331[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 217[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 034CA0D0
      patchArea : 0x0
      systhrd : 06B24158
        NodeBase.SysThread
        this : 06B24158
        patchArea : 0x0
        nthread  : 0000047C
        nid      : 7d04
        status   : 000
        event    : 00000404
        guard    : 000004E0
        priority : 1
        signal   : 0
      daemon  : 034C1D70 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 034BEC98
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 034BECB0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268390317272
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 034BECD0
          patchArea : 0x0
          interval : 600000000
          lastTime : 5268390317295
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0

    SW900 3-May-2020 09:15:20.019 on Reigi {85}
    in Threads.GetState
    errval=orphan exited  offset=0x7d04
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Threads.GetState @ thread.cpp + 839[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1801[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-May-2020 09:15:20.020 on Reigi {86}
    in NodeBase.InitThread (tid=2, nid=0x00002db4): trap number 21
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3991[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3955[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 135[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 217[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

  * THR300 3-May-2020 09:15:20.021 on Reigi {87}
    Alarm ON: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 3-May-2020 09:15:21.062 on Reigi {88}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:23.324 on Reigi {89}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:23.357 on Reigi {90}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=154
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonRetrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f
nt>delay 5

    SW900 3-May-2020 09:15:26.065 on Reigi {91}
    in Threads.GetState
    errval=orphan exited  offset=0x2c18
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Threads.GetState @ thread.cpp + 839[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 3035[12]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1863[7]
      NodeBase.Thread.Pause @ thread.cpp + 2582[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4199[10]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:29.864 on Reigi {92}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:29.924 on Reigi {93}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=141
save funcs &testcase.name

    THR903 3-May-2020 09:15:30.050 on Reigi {94}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:30.197 on Reigi {95}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=210
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    SW900 3-May-2020 09:15:30.412 on Reigi {96}
    in Threads.GetState
    errval=orphan exited  offset=0x9474
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 104[22]
      NodeBase.Debug.SwLog @ debug.cpp + 216[25]
      NodeBase.Threads.GetState @ thread.cpp + 839[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 3035[12]
      NodeBase.Thread.Pause @ thread.cpp + 2567[7]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4199[10]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>
    THR903 3-May-2020 09:15:31.789 on Reigi {97}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:31.907 on Reigi {98}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=182
sched start
nt>start s
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 3-May-2020 09:15:34.228 on Reigi {99}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeTools.RecoveryThread (tid=15, nid=0x00009024)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 3-May-2020 09:15:35.692 on Reigi {100}
    for NodeTools.RecoveryThread (tid=15, nid=0x00009024)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 3-May-2020 09:15:35.701 on Reigi {101}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009024): trap number 22
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1921[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3758[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2026[0]
      NodeBase.Debug.ft @ debug.cpp + 71[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4218[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4159[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 3-May-2020 09:15:35.701 on Reigi {102}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00009024) extra msecs=1396
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-May-2020 09:15:37.843 on Reigi {103}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:37.958 on Reigi {104}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=135
save funcs &testcase.name

    THR903 3-May-2020 09:15:38.042 on Reigi {105}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:38.062 on Reigi {106}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=41
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr
nt>
    THR902 3-May-2020 09:15:39.318 on Reigi {107}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009024): trap number 23
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4254[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4153[0]
      NodeBase.Thread.Start @ thread.cpp + 3368[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-May-2020 09:15:39.329 on Reigi {108}
    in NodeTools.RecoveryThread (tid=15, nid=0x00009024): trap number 24
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2079[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ thread.cpp + 3848[0]
      NodeBase.Thread.Start @ thread.cpp + 3415[46]
      NodeBase.Thread.EnterThread @ thread.cpp + 1815[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1

    THR906 3-May-2020 09:15:39.335 on Reigi {109}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00009024)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>swflags set &flag.threadretrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name

    THR903 3-May-2020 09:15:41.682 on Reigi {110}
    by NodeBase.InitThread (tid=2, nid=0x00002db4)
    for NodeBase.CliThread (tid=9, nid=0x00008820)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-May-2020 09:15:41.732 on Reigi {111}
    thread=NodeBase.CliThread (tid=9, nid=0x00008820) extra msecs=71
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>testcase query
  Current test session:
    Passed: 26
    Failed: 0
  Testcase database:
    unreported: 2  failed: 0  re-execute: 0  passed: 115
nt>