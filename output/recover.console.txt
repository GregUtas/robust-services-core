
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               323    18:39:28.993
NodeBase.NbModule...                    18:39:29.316
...initialized                    62
NodeTools.NtModule...                   18:39:29.387
...initialized                    22
CodeTools.CtModule...                   18:39:29.419
...initialized                    17
NetworkBase.NwModule...                 18:39:29.443

    NET500 30-Jan-2020 18:39:29.459 on Reigi {1}
...initialized                   108
SessionBase.SbModule...                 18:39:29.561
...initialized                    92
ControlNode.CnModule...                 18:39:29.663
...initialized                     8
SessionTools.StModule...                18:39:29.681
...initialized                    17
MediaBase.MbModule...                   18:39:29.710
...initialized                    14
CallBase.CbModule...                    18:39:29.734
...initialized                    29
PotsBase.PbModule...                    18:39:29.775
...initialized                    19
OperationsNode.OnModule...              18:39:29.806
...initialized                    10
RoutingNode.RnModule...                 18:39:29.830
...initialized                    13
ServiceNode.SnModule...                 18:39:29.858
...initialized                    36
AccessNode.AnModule...                  18:39:29.906
...initialized                    17
                               -----
total initialization time        943

    NODE500 30-Jan-2020 18:39:29.950 on Reigi {2}
nb>stop
  OK.
nb>clear buffer
  OK.
nb>read test.trap.all
nb>/ MAKE RECOVERY TEST THREAD CRITICAL
nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>include faction &faction.system
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>swflags set &flag.disablerootthread on
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 30-Jan-2020 18:39:43.042 on Reigi {3}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00005128)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 30-Jan-2020 18:39:44.721 on Reigi {4}
    in NodeTools.RecoveryThread (tid=15, nid=0x00005f80): trap number 1
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 202[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 3693[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3779[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:39:45.841 on Reigi {5}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:39:45.887 on Reigi {6}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=66
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtrExit
symbols set testcase.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr
nt>
    THR902 30-Jan-2020 18:39:47.057 on Reigi {7}
    in NodeTools.RecoveryThread (tid=15, nid=0x00005f80): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3748[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 30-Jan-2020 18:39:47.057 on Reigi {8}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00005f80)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 1
nt>swflags set &flag.reenterthread on
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:39:49.246 on Reigi {9}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:39:49.282 on Reigi {10}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=118
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtrExit completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 30-Jan-2020 18:39:49.414 on Reigi {11}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004528): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3748[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 30-Jan-2020 18:39:50.719 on Reigi {12}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004528): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3751[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:39:51.832 on Reigi {13}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:39:51.862 on Reigi {14}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=52
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 30-Jan-2020 18:39:52.006 on Reigi {15}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004528): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3682[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3772[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 30-Jan-2020 18:39:53.285 on Reigi {16}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004528): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3682[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3772[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:39:54.420 on Reigi {17}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:39:54.481 on Reigi {18}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=104
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 30-Jan-2020 18:39:54.605 on Reigi {19}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004528): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3682[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3772[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR906 30-Jan-2020 18:39:54.606 on Reigi {20}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00004528)
    signal=15 (SIGTERM: Termination Request)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:39:55.758 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:39:55.766 on Reigi {22}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=70
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 30-Jan-2020 18:39:55.891 on Reigi {23}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000502c): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3682[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3772[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 30-Jan-2020 18:40:01.693 on Reigi {24}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000502c): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ ntincrement.cpp + 3648[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3739[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:03.855 on Reigi {25}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:04.155 on Reigi {26}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=342
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 30-Jan-2020 18:40:08.376 on Reigi {27}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000502c): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3092[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ ntincrement.cpp + 3704[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3782[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:10.611 on Reigi {28}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:10.757 on Reigi {29}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=269
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 30-Jan-2020 18:40:10.887 on Reigi {30}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000502c): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2566[17]
      NodeTools.RecoveryThread.DoTrap @ ntincrement.cpp + 3715[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3785[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 030EA030
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03182878
        NodeBase.SysThread
        this : 03182878
        patchArea : 0x0
        nthread  : 000002E0
        nid      : 502c
        status   : 000
        event    : 00000344
        guard    : 00000300
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315DD08
        patchArea : 0x0
        stackBase  : 064BFE18
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315DD20
          patchArea : 0x0
          interval : 600000000
          lastTime : 1114834996954
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315DD40
          patchArea : 0x0
          interval : 600000000
          lastTime : 1114847850191
          limit    : 4
          count    : 4
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 21
        currUsecs  : 3061132
        readyTime  : 1114997770483
        currStart  : 1114997775431
        currEnd    : 1115000175431
      test   : 0
      signal : 126
testcase end

    THR901 30-Jan-2020 18:40:10.887 on Reigi {31}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000502c)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:12.120 on Reigi {32}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:12.157 on Reigi {33}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=160
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 30-Jan-2020 18:40:12.284 on Reigi {34}
    by NodeBase.CliThread (tid=9, nid=0x00000978)
    for NodeTools.RecoveryThread (tid=15, nid=0x00001cdc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 30-Jan-2020 18:40:12.289 on Reigi {35}
    in NodeTools.RecoveryThread (tid=15, nid=0x00001cdc): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1861[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3624[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1966[0]
      NodeBase.Debug.ft @ debug.cpp + 69[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1801[11]
      NodeBase.Thread.Pause @ thread.cpp + 2470[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3794[10]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 030EA15C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03211510
        NodeBase.SysThread
        this : 03211510
        patchArea : 0x0
        nthread  : 000004C4
        nid      : 1cdc
        status   : 000
        event    : 00000358
        guard    : 00000104
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315DE58
        patchArea : 0x0
        stackBase  : 08B8F808
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315DE70
          patchArea : 0x0
          interval : 600000000
          lastTime : 1114997814006
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315DE90
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115011824849
          limit    : 4
          count    : 1
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 17
        currUsecs  : 0
        readyTime  : 1114997840309
        currStart  : 1115011794266
        currEnd    : 2000000
      test   : 0
      signal : 0
testcase end

    THR901 30-Jan-2020 18:40:12.289 on Reigi {36}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00001cdc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 30-Jan-2020 18:40:14.780 on Reigi {37}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeTools.RecoveryThread (tid=15, nid=0x0000495c)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 30-Jan-2020 18:40:14.810 on Reigi {38}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000495c): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1861[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3624[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1966[0]
      NodeBase.Debug.ft @ debug.cpp + 69[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 3813[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:16.970 on Reigi {39}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:17.099 on Reigi {40}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=169
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 30-Jan-2020 18:40:18.274 on Reigi {41}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000495c): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 3139[14]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1974[0]
      NodeBase.Debug.ft @ debug.cpp + 69[9]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3835[11]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3837[12]
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:20.376 on Reigi {42}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:20.524 on Reigi {43}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=148
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock
nt>
    SW900 30-Jan-2020 18:40:20.656 on Reigi {44}
    in Thread.EnterBlockingOperation
    errval=mutex holder  offset=0x1
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1689[55]
      NodeBase.Thread.Pause @ thread.cpp + 2467[14]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3757[7]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit
nt>
    THR907 30-Jan-2020 18:40:21.950 on Reigi {45}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000495c)
    mutexes=1

    THR901 30-Jan-2020 18:40:21.950 on Reigi {46}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000495c)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:23.088 on Reigi {47}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:23.121 on Reigi {48}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=76
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap
nt>
    THR907 30-Jan-2020 18:40:23.249 on Reigi {49}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00000424)
    mutexes=1

    THR902 30-Jan-2020 18:40:23.249 on Reigi {50}
    in NodeTools.RecoveryThread (tid=15, nid=0x00000424): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3766[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.TrapInRecover
symbols set testcase.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 30-Jan-2020 18:40:25.553 on Reigi {51}
    in NodeTools.RecoveryThread (tid=15, nid=0x00000424): trap number 16
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 202[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 3693[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3779[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 30-Jan-2020 18:40:25.557 on Reigi {52}
    in NodeTools.RecoveryThread (tid=15, nid=0x00000424): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.Recover @ ntincrement.cpp + 3826[0]
      NodeBase.Thread.Start @ thread.cpp + 3196[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>swflags set &flag.recovertrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:27.681 on Reigi {53}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:27.770 on Reigi {54}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=112
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapInRecover completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ InitThread will trap when it invokes RecoveryDaemon.CreateThread
nt>/ to recreate the recovery thread.
nt>recover ctortrap
nt>
    THR901 30-Jan-2020 18:40:27.907 on Reigi {55}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00000424)
    signal=0 (Normal Exit)

    THR900 30-Jan-2020 18:40:27.923 on Reigi {56}
    thread=NodeBase.Thread (tid=15, nid=0x00005f50)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1261[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 030EA4E0
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03213068
        NodeBase.SysThread
        this : 03213068
        patchArea : 0x0
        nthread  : 000004E0
        nid      : 5f50
        status   : 000
        event    : 00000474
        guard    : 000004DC
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315E050
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315E068
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115168008407
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315E088
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115168008446
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0
testcase end

    SW900 30-Jan-2020 18:40:27.928 on Reigi {57}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x5f50
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 811[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1742[12]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 30-Jan-2020 18:40:27.929 on Reigi {58}
    in NodeBase.InitThread (tid=2, nid=0x000055fc): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3580[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:29.064 on Reigi {59}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:29.120 on Reigi {60}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=97
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>testcase begin recover.DaemonReenable
symbols set testcase.name recover.DaemonReenable
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.25
nt>/ RECOVER disable daemon; kill thread; enable daemon; thread recreated
nt>daemons set 9 off
nt>delay 1
nt>sched kill 15
nt>
    THR903 30-Jan-2020 18:40:30.263 on Reigi {61}
    by NodeBase.CliThread (tid=9, nid=0x00000978)
    for NodeTools.RecoveryThread (tid=15, nid=0x000028d0)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
delay 2

    THR902 30-Jan-2020 18:40:30.267 on Reigi {62}
    in NodeTools.RecoveryThread (tid=15, nid=0x000028d0): trap number 19
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1861[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3624[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1966[0]
      NodeBase.Debug.ft @ debug.cpp + 69[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1801[11]
      NodeBase.Thread.Pause @ thread.cpp + 2470[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3794[10]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 030EA60C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03210DA0
        NodeBase.SysThread
        this : 03210DA0
        patchArea : 0x0
        nthread  : 000004EC
        nid      : 28d0
        status   : 000
        event    : 000004E4
        guard    : 000004E8
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315DDB0
        patchArea : 0x0
        stackBase  : 08B8F854
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315DDC8
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115168234377
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315DDE8
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115191606001
          limit    : 4
          count    : 1
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 25
        currUsecs  : 0
        readyTime  : 1115168249746
        currStart  : 1115191573446
        currEnd    : 2000000
      test   : 0
      signal : 0

    THR901 30-Jan-2020 18:40:30.268 on Reigi {63}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000028d0)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

  * THR300 30-Jan-2020 18:40:30.268 on Reigi {64}
    Alarm ON: DAEMON9 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 30-Jan-2020 18:40:32.285 on Reigi {65}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:34.461 on Reigi {66}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:34.548 on Reigi {67}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=169
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonReenable completed.
nt>testcase begin recover.DaemonRetrap
symbols set testcase.name recover.DaemonRetrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.26
nt>/ RECOVER daemon retraps trying to recreate thread; reenable to create thread
nt>swflags set &flag.threadctorretrap on
nt>delay 1
nt>recover ctortrap
nt>
    THR901 30-Jan-2020 18:40:35.708 on Reigi {68}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00004e78)
    signal=0 (Normal Exit)

    THR900 30-Jan-2020 18:40:35.717 on Reigi {69}
    thread=NodeBase.Thread (tid=15, nid=0x00005f40)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1261[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 030EA864
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03213FF0
        NodeBase.SysThread
        this : 03213FF0
        patchArea : 0x0
        nthread  : 000004E8
        nid      : 5f40
        status   : 000
        event    : 000004CC
        guard    : 000004EC
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315E050
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315E068
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115246025232
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315E088
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115246025468
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0
delay 1

    SW900 30-Jan-2020 18:40:35.720 on Reigi {70}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x5f40
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 811[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1742[12]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 30-Jan-2020 18:40:35.720 on Reigi {71}
    in NodeBase.InitThread (tid=2, nid=0x000055fc): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3580[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 240[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR900 30-Jan-2020 18:40:35.728 on Reigi {72}
    thread=NodeBase.Thread (tid=15, nid=0x00005d2c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1261[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 217[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 030EA990
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03213FF0
        NodeBase.SysThread
        this : 03213FF0
        patchArea : 0x0
        nthread  : 000002B4
        nid      : 5d2c
        status   : 000
        event    : 000004E4
        guard    : 000004F0
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315DA68
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315DA80
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115246157365
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315DAA0
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115246157387
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0

    SW900 30-Jan-2020 18:40:35.730 on Reigi {73}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x5d2c
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 811[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1742[12]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 30-Jan-2020 18:40:35.731 on Reigi {74}
    in NodeBase.InitThread (tid=2, nid=0x000055fc): trap number 21
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3586[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3550[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 134[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 410[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 291[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 217[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

  * THR300 30-Jan-2020 18:40:35.732 on Reigi {75}
    Alarm ON: DAEMON9 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 30-Jan-2020 18:40:36.753 on Reigi {76}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:38.889 on Reigi {77}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:39.014 on Reigi {78}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=167
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonRetrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f
nt>
    THR900 30-Jan-2020 18:40:39.163 on Reigi {79}
    thread=NodeBase.Thread (tid=15, nid=0x000052f0)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1261[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3596[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 104[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4196[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 509[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 721[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2193[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 509[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 721[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2193[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 509[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 721[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 345[17]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 030EAABC
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03213EA0
        NodeBase.SysThread
        this : 03213EA0
        patchArea : 0x0
        nthread  : 000004A0
        nid      : 52f0
        status   : 000
        event    : 000004D4
        guard    : 0000036C
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315E440
        patchArea : 0x0
        stackBase  : 08B8FC38
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315E458
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115256442646
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315E478
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115256442653
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 18
        readyTime  : 1115256464229
        currStart  : 1115256476151
        currEnd    : 0
delay 5

    SW900 30-Jan-2020 18:40:41.754 on Reigi {80}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x52f0
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 811[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 2904[12]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1803[7]
      NodeBase.Thread.Pause @ thread.cpp + 2470[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3794[10]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:45.294 on Reigi {81}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:45.448 on Reigi {82}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=154
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    THR900 30-Jan-2020 18:40:45.573 on Reigi {83}
    thread=NodeBase.Thread (tid=15, nid=0x000024e4)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1261[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3596[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 104[34]
      NodeTools.RecoveryThread.DoDelete @ ntincrement.cpp + 3660[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3745[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 030EABE8
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03183E20
        NodeBase.SysThread
        this : 03183E20
        patchArea : 0x0
        nthread  : 000004F4
        nid      : 24e4
        status   : 000
        event    : 000004F0
        guard    : 000004E4
        priority : 1
        signal   : 0
      daemon  : 008B2D68 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 0315DA68
        patchArea : 0x0
        stackBase  : 0A45F82C
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 0315DA80
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115280708616
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 0315DAA0
          patchArea : 0x0
          interval : 600000000
          lastTime : 1115280708641
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 12
        currUsecs  : 0
        readyTime  : 1115344665596
        currStart  : 1115344668447
        currEnd    : 1115345068447
testcase end

    SW900 30-Jan-2020 18:40:45.575 on Reigi {84}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x24e4
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 102[22]
      NodeBase.Debug.SwLog @ debug.cpp + 214[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 811[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 2904[12]
      NodeBase.Thread.Pause @ thread.cpp + 2455[7]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3794[10]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 30-Jan-2020 18:40:49.070 on Reigi {85}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeTools.RecoveryThread (tid=15, nid=0x0000489c)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 30-Jan-2020 18:40:50.725 on Reigi {86}
    for NodeTools.RecoveryThread (tid=15, nid=0x0000489c)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 30-Jan-2020 18:40:50.746 on Reigi {87}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000489c): trap number 22
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1861[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3624[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1966[0]
      NodeBase.Debug.ft @ debug.cpp + 69[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 3813[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 30-Jan-2020 18:40:50.746 on Reigi {88}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000489c) extra msecs=1599
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:52.891 on Reigi {89}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:53.021 on Reigi {90}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=172
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start s
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr
nt>
    THR902 30-Jan-2020 18:40:54.178 on Reigi {91}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000489c): trap number 23
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3849[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3748[0]
      NodeBase.Thread.Start @ thread.cpp + 3234[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 30-Jan-2020 18:40:54.182 on Reigi {92}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000489c): trap number 24
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2019[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ thread.cpp + 3694[0]
      NodeBase.Thread.Start @ thread.cpp + 3281[46]
      NodeBase.Thread.EnterThread @ thread.cpp + 1755[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1

    THR906 30-Jan-2020 18:40:54.187 on Reigi {93}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000489c)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>swflags set &flag.threadretrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 30-Jan-2020 18:40:56.293 on Reigi {94}
    by NodeBase.InitThread (tid=2, nid=0x000055fc)
    for NodeBase.CliThread (tid=9, nid=0x00000978)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 30-Jan-2020 18:40:56.427 on Reigi {95}
    thread=NodeBase.CliThread (tid=9, nid=0x00000978) extra msecs=135
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>