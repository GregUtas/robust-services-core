
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               582    11:46:22.453
NodeBase.NbModule...                    11:46:23.035
...initialized                    84
NodeTools.NtModule...                   11:46:23.128
...initialized                    26
CodeTools.CtModule...                   11:46:23.164
...initialized                    24
NetworkBase.NwModule...                 11:46:23.199

    NET500 3-Nov-2019 11:46:23.214 on Reigi {1}
...initialized                   127
SessionBase.SbModule...                 11:46:23.339
...initialized                    96
SessionTools.StModule...                11:46:23.444
...initialized                    18
MediaBase.MbModule...                   11:46:23.472
...initialized                    16
CallBase.CbModule...                    11:46:23.499
...initialized                    25
PotsBase.PbModule...                    11:46:23.535
...initialized                    25
OperationsNode.OnModule...              11:46:23.572
...initialized                    11
ControlNode.CnModule...                 11:46:23.594
...initialized                    12
RoutingNode.RnModule...                 11:46:23.618
...initialized                    12
ServiceNode.SnModule...                 11:46:23.642
...initialized                    52
AccessNode.AnModule...                  11:46:23.705
...initialized                    18
                               -----
total initialization time       1282

    NODE500 3-Nov-2019 11:46:23.748 on Reigi {2}
nb>read saveinit
nb>stop
  OK.
nb>save trace init
  OK.
nb>nt
nt>save funcs init
  OK.
nt>clear buffer
  OK.
nt>/ register as a testcase; the only logs should be NET500 and NODE500
nt>testcase begin init
symbols set testcase.name init
  OK.
nt>logs count
2
nt>if &cli.result != 2 testcase failed &cli.result "logs during system initialization"
  Result is false.
nt>testcase end
  OK.
nt>testcase reset
  OK.
nt>read savehelp
nt>quit all
nb>send help
  OK.
nb>help
nb>incrs
nb>help full
nb>nt
nt>help full
nt>quit
nb>nw
nw>help full
nw>quit
nb>sb
sb>help full
sb>quit
nb>st
st>help full
st>quit
nb>pots
pots>help full
pots>quit
nb>an
an>help full
an>quit
nb>sn
sn>help full
sn>quit
nb>ct
ct>help full
ct>quit
nb>send cout
nb>read test.trap.all
nb>/ MAKE RECOVERY TEST THREAD CRITICAL
nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>sb exclude timers
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>swflags set &flag.disablerootthread on
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 3-Nov-2019 11:50:05.879 on Reigi {3}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000a9b0)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 3-Nov-2019 11:50:07.155 on Reigi {4}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000c900): trap number 1
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 207[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 3675[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3761[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtrExit
symbols set testcase.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr
nt>
    THR902 3-Nov-2019 11:50:09.411 on Reigi {5}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000c900): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3831[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3730[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 3-Nov-2019 11:50:09.412 on Reigi {6}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000c900)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 2
nt>swflags set &flag.reenterthread on
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtrExit completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 3-Nov-2019 11:50:12.683 on Reigi {7}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001057c): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3831[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3730[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 3-Nov-2019 11:50:13.958 on Reigi {8}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001057c): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3733[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 3-Nov-2019 11:50:15.187 on Reigi {9}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001057c): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3664[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 3-Nov-2019 11:50:16.411 on Reigi {10}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001057c): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3664[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 3-Nov-2019 11:50:17.641 on Reigi {11}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001057c): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3664[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR906 3-Nov-2019 11:50:17.641 on Reigi {12}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0001057c)
    signal=15 (SIGTERM: Termination Request)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 3-Nov-2019 11:50:18.899 on Reigi {13}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015ddc): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3664[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3754[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 3-Nov-2019 11:50:24.347 on Reigi {14}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015ddc): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ ntincrement.cpp + 3630[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3721[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-Nov-2019 11:50:27.490 on Reigi {15}
    by NodeBase.InitThread (tid=2, nid=0x000157e4)
    for NodeBase.CliThread (tid=9, nid=0x00014c1c)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-Nov-2019 11:50:27.544 on Reigi {16}
    thread=NodeBase.CliThread (tid=9, nid=0x00014c1c) extra msecs=96
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 3-Nov-2019 11:50:31.127 on Reigi {17}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015ddc): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2892[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ ntincrement.cpp + 3686[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3764[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 3-Nov-2019 11:50:34.404 on Reigi {18}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015ddc): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2365[17]
      NodeTools.RecoveryThread.DoTrap @ ntincrement.cpp + 3697[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3767[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 035859F8
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 035EC5C8
        NodeBase.SysThread
        this : 035EC5C8
        patchArea : 0x0
        nthread  : 000002A4
        nid      : 15ddc
        status   : 000
        event    : 00000338
        guard    : 0000036C
        priority : 1
        signal   : 0
      daemon  : 035FD580 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 035E7320
        patchArea : 0x0
        stackBase  : 075EFB14
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 035E7338
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243250216460
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 035E7358
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243412793555
          limit    : 4
          count    : 3
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 2407654
        currUsecs  : 0
        readyTime  : 18243417811567
        currStart  : 18243417815272
        currEnd    : 18243432615272
      test   : 0
      signal : 126
testcase end

    THR901 3-Nov-2019 11:50:34.405 on Reigi {19}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015ddc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 3-Nov-2019 11:50:35.655 on Reigi {20}
    by NodeBase.CliThread (tid=9, nid=0x00014c1c)
    for NodeTools.RecoveryThread (tid=15, nid=0x00015580)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 3-Nov-2019 11:50:35.659 on Reigi {21}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015580): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x1
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1659[27]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1639[0]
      NodeBase.Thread.Pause @ thread.cpp + 2267[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3776[10]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 03585B24
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 035EC8A0
        NodeBase.SysThread
        this : 035EC8A0
        patchArea : 0x0
        nthread  : 000003EC
        nid      : 15580
        status   : 000
        event    : 00000468
        guard    : 000003E8
        priority : 1
        signal   : 0
      daemon  : 035FD580 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 035E7278
        patchArea : 0x0
        stackBase  : 08FCFE0C
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 035E7290
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243417854295
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 035E72B0
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243430394323
          limit    : 4
          count    : 1
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 30
        currUsecs  : 0
        readyTime  : 18243417876231
        currStart  : 18243418004579
        currEnd    : 2000000
      test   : 0
      signal : 0
testcase end

    THR901 3-Nov-2019 11:50:35.661 on Reigi {22}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015580)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 3-Nov-2019 11:50:39.344 on Reigi {23}
    by NodeBase.InitThread (tid=2, nid=0x000157e4)
    for NodeTools.RecoveryThread (tid=15, nid=0x00003518)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 3-Nov-2019 11:50:39.366 on Reigi {24}
    in NodeTools.RecoveryThread (tid=15, nid=0x00003518): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1659[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3397[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1758[0]
      NodeBase.Debug.ft @ debug.cpp + 65[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 3795[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3736[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 3-Nov-2019 11:50:43.702 on Reigi {25}
    in NodeTools.RecoveryThread (tid=15, nid=0x00003518): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f42
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 2930[14]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1766[0]
      NodeBase.Debug.ft @ debug.cpp + 65[9]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3817[11]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 3819[12]
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-Nov-2019 11:50:46.817 on Reigi {26}
    by NodeBase.InitThread (tid=2, nid=0x000157e4)
    for NodeBase.CliThread (tid=9, nid=0x00014c1c)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-Nov-2019 11:50:46.833 on Reigi {27}
    thread=NodeBase.CliThread (tid=9, nid=0x00014c1c) extra msecs=38
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock
nt>
    SW900 3-Nov-2019 11:50:48.073 on Reigi {28}
    in Thread.EnterBlockingOperation
    errval=mutex holder  offset=0x1
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 99[22]
      NodeBase.Debug.SwLog @ debug.cpp + 219[25]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1505[55]
      NodeBase.Thread.Pause @ thread.cpp + 2264[14]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3739[7]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit
nt>
    THR907 3-Nov-2019 11:50:49.269 on Reigi {29}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00003518)
    mutexes=1

    THR901 3-Nov-2019 11:50:49.269 on Reigi {30}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00003518)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap
nt>
    THR907 3-Nov-2019 11:50:50.501 on Reigi {31}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015d8c)
    mutexes=1

    THR902 3-Nov-2019 11:50:50.502 on Reigi {32}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015d8c): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3831[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3748[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.TrapInRecover
symbols set testcase.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 3-Nov-2019 11:50:52.722 on Reigi {33}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015d8c): trap number 16
    type=Software Error
    errstr : 0xe
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 207[65]
      NodeTools.RecoveryThread.DoSwerr @ ntincrement.cpp + 3675[22]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3761[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-Nov-2019 11:50:52.727 on Reigi {34}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015d8c): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3831[0]
      NodeTools.RecoveryThread.Recover @ ntincrement.cpp + 3808[0]
      NodeBase.Thread.Start @ thread.cpp + 2987[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>swflags set &flag.recovertrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapInRecover completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ This also causes a trap in InitThread, because it invokes
nt>/ RecoveryDaemon.CreateThread to recreate the recovery thread.
nt>recover ctortrap
nt>
    THR901 3-Nov-2019 11:50:56.017 on Reigi {35}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015d8c)
    signal=0 (Normal Exit)

    THR900 3-Nov-2019 11:50:56.022 on Reigi {36}
    thread=NodeBase.Thread (tid=15, nid=0x00015854)
    Function Traceback:
      NodeBase.SysThreadStack.FuncDepth @ systhreadstack.win.cpp + 271[5]
      NodeBase.FunctionTrace.Capture @ functiontrace.cpp + 161[5]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1747[9]
      NodeBase.Debug.ft @ debug.cpp + 65[9]
      NodeBase.Debug.noop @ debug.cpp + 124[11]
      NodeBase.Thread.EnterThread @ thread.cpp + 1550[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
    Thread Data:
      NodeBase.Thread
      this : 03585EA8
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 035EE7E8
        NodeBase.SysThread
        this : 035EE7E8
        patchArea : 0x0
        nthread  : 00000480
        nid      : 15854
        status   : 000
        event    : 000004A0
        guard    : 0000036C
        priority : 1
        signal   : 0
      daemon  : 035FD580 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 035E6D38
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 035E6D50
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243633978166
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 035E6D70
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243633978168
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : false
        waiting    : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        readyTime  : 18446744073709551615
        currStart  : 0
        currEnd    : 0
testcase end

    THR902 3-Nov-2019 11:50:56.031 on Reigi {37}
    in NodeBase.InitThread (tid=2, nid=0x000157e4): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1747[9]
      NodeBase.Debug.ft @ debug.cpp + 65[9]
      NodeBase.Debug.noop @ debug.cpp + 124[11]
      NodeBase.Thread.EnterThread @ thread.cpp + 1550[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)

    SW900 3-Nov-2019 11:50:56.031 on Reigi {38}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x15854
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 99[22]
      NodeBase.Debug.SwLog @ debug.cpp + 219[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 626[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1557[12]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f
nt>
    THR900 3-Nov-2019 11:50:57.511 on Reigi {39}
    thread=NodeBase.Thread (tid=15, nid=0x000139d8)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1098[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3577[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 104[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4178[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 464[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 676[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2123[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 464[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 676[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2123[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 464[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 676[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 345[17]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03585FD4
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 035EE2A8
        NodeBase.SysThread
        this : 035EE2A8
        patchArea : 0x0
        nthread  : 000002A4
        nid      : 139d8
        status   : 000
        event    : 00000454
        guard    : 00000450
        priority : 1
        signal   : 0
      daemon  : 035FD580 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 035E7278
        patchArea : 0x0
        stackBase  : 090EFB3C
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 035E7290
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243634121515
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 035E72B0
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243634121555
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : sleeping
        entered    : true
        waiting    : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 76
        readyTime  : 18243634140741
        currStart  : 18243634152276
        currEnd    : 0
delay 8

    SW900 3-Nov-2019 11:51:01.037 on Reigi {40}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x139d8
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 99[22]
      NodeBase.Debug.SwLog @ debug.cpp + 219[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 626[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 2703[12]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1618[7]
      NodeBase.Thread.Pause @ thread.cpp + 2267[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3776[10]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 3-Nov-2019 11:51:06.681 on Reigi {41}
    by NodeBase.InitThread (tid=2, nid=0x000157e4)
    for NodeBase.CliThread (tid=9, nid=0x00014c1c)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 3-Nov-2019 11:51:06.683 on Reigi {42}
    thread=NodeBase.CliThread (tid=9, nid=0x00014c1c) extra msecs=43
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    THR900 3-Nov-2019 11:51:06.817 on Reigi {43}
    thread=NodeBase.Thread (tid=15, nid=0x00012b6c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1098[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3577[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 104[34]
      NodeTools.RecoveryThread.DoDelete @ ntincrement.cpp + 3642[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3727[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03586100
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd : 03615050
        NodeBase.SysThread
        this : 03615050
        patchArea : 0x0
        nthread  : 0000033C
        nid      : 12b6c
        status   : 000
        event    : 00000338
        guard    : 00000468
        priority : 1
        signal   : 0
      daemon  : 035FD580 NodeTools.RecoveryDaemon
      tid     : 15
      faction : 6
      deleted : false
      msgq    : 
        tail : 00000000
        diff : 8
      priv    : 
        NodeBase.ThreadPriv
        this : 035E7710
        patchArea : 0x0
        stackBase  : 0941FCE0
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  : 00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 035E7728
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243649054967
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 035E7748
          patchArea : 0x0
          interval : 600000000
          lastTime : 18243649054970
          limit    : 4
          count    : 0
        status     : unspecified
        blocked    : ready
        entered    : true
        waiting    : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 7
        currUsecs  : 0
        readyTime  : 18243741966112
        currStart  : 18243741969665
        currEnd    : 18243754769665
testcase end

    SW900 3-Nov-2019 11:51:06.821 on Reigi {44}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x12b6c
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 99[22]
      NodeBase.Debug.SwLog @ debug.cpp + 219[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 626[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 2703[12]
      NodeBase.Thread.Pause @ thread.cpp + 2252[7]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3776[10]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 3-Nov-2019 11:51:11.500 on Reigi {45}
    by NodeBase.InitThread (tid=2, nid=0x000157e4)
    for NodeTools.RecoveryThread (tid=15, nid=0x00015e10)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 3-Nov-2019 11:51:11.724 on Reigi {46}
    for NodeTools.RecoveryThread (tid=15, nid=0x00015e10)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 3-Nov-2019 11:51:11.757 on Reigi {47}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015e10): trap number 19
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1659[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3397[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1758[0]
      NodeBase.Debug.ft @ debug.cpp + 65[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 3795[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3736[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 3-Nov-2019 11:51:11.758 on Reigi {48}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015e10) extra msecs=183
delay 2
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr
nt>
    THR902 3-Nov-2019 11:51:16.088 on Reigi {49}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015e10): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 3831[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 3730[0]
      NodeBase.Thread.Start @ thread.cpp + 3025[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 3-Nov-2019 11:51:16.092 on Reigi {50}
    in NodeTools.RecoveryThread (tid=15, nid=0x00015e10): trap number 21
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1811[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ thread.cpp + 3467[0]
      NodeBase.Thread.Start @ thread.cpp + 3072[46]
      NodeBase.Thread.EnterThread @ thread.cpp + 1570[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2

    THR906 3-Nov-2019 11:51:16.097 on Reigi {51}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00015e10)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>swflags set &flag.threadretrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>