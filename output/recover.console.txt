
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               273    18:03:18.738
NodeBase.NbModule...                    18:03:19.011
...initialized                    42
NodeTools.NtModule...                   18:03:19.066
...initialized                    18
CodeTools.CtModule...                   18:03:19.096
...initialized                    13
NetworkBase.NwModule...                 18:03:19.123

    NET500 29-Nov-2020 18:03:19.134 on Reigi {1}
...initialized                    72
SessionBase.SbModule...                 18:03:19.205
...initialized                    56
ControlNode.CnModule...                 18:03:19.270
...initialized                     8
SessionTools.StModule...                18:03:19.293
...initialized                    13
MediaBase.MbModule...                   18:03:19.317
...initialized                    12
CallBase.CbModule...                    18:03:19.339
...initialized                    14
PotsBase.PbModule...                    18:03:19.364
...initialized                    17
OperationsNode.OnModule...              18:03:19.392
...initialized                    10
RoutingNode.RnModule...                 18:03:19.415
...initialized                    12
ServiceNode.SnModule...                 18:03:19.438
...initialized                    20
AccessNode.AnModule...                  18:03:19.469
...initialized                    17
                               -----
total initialization time        761

    NODE500 29-Nov-2020 18:03:19.511 on Reigi {2}
nt>read test.trap.all

nt>read test.trap.setup
nt>quit all
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>/ This only leaves LoadTestFaction, to which RecoveryThread belongs,
nt>/ traced. Including SystemFaction (InitThread) would show Daemon work
nt>/ but would also make the traces much longer, because InitThread runs
nt>/ well before, and after, RecoveryThread.
nt>/
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>exclude faction &faction.system
  OK.
nt>exclude faction &faction.watchdog
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return

    THR901 29-Nov-2020 18:05:08.458 on Reigi {3}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00010508)
    signal=0 (Normal Exit)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr

    THR902 29-Nov-2020 18:05:10.275 on Reigi {4}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000ebe4): trap number 1
    type=Software Error
    errstr : software error test
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ softwareexception.cpp + 46[15]
      NodeBase.Debug.SwErr @ debug.cpp + 146[22]
      NodeTools.RecoveryThread.DoSwErr @ ntincrement.cpp + 3965[33]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4050[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtrExit
symbols set testcase.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr

    THR902 29-Nov-2020 18:05:12.716 on Reigi {5}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000ebe4): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4016[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 29-Nov-2020 18:05:12.717 on Reigi {6}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000ebe4)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>delay 1
nt>swflags set &flag.reenterthread on
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.BadPtrExit completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr

    THR902 29-Nov-2020 18:05:15.153 on Reigi {7}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001153c): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4016[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide

    THR902 29-Nov-2020 18:05:16.528 on Reigi {8}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001153c): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4019[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT

    THR902 29-Nov-2020 18:05:17.878 on Reigi {9}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001153c): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3956[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4043[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL

    THR902 29-Nov-2020 18:05:19.236 on Reigi {10}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001153c): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3956[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4043[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM

    THR902 29-Nov-2020 18:05:20.588 on Reigi {11}
    in NodeTools.RecoveryThread (tid=15, nid=0x0001153c): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3956[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4043[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR906 29-Nov-2020 18:05:20.588 on Reigi {12}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0001153c)
    signal=15 (SIGTERM: Termination Request)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK

    THR902 29-Nov-2020 18:05:21.929 on Reigi {13}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010534): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 3956[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4043[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort

    THR902 29-Nov-2020 18:05:24.316 on Reigi {14}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010534): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ ntincrement.cpp + 3929[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4007[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate

    THR902 29-Nov-2020 18:05:27.811 on Reigi {15}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010534): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2918[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ ntincrement.cpp + 3975[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4053[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE

    THR902 29-Nov-2020 18:05:30.231 on Reigi {16}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010534): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.Raise @ thread.cpp + 2467[19]
      NodeTools.RecoveryThread.DoTrap @ ntincrement.cpp + 3983[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4056[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 03FEBF50
      patchArea : 0x0
      systhrd  : 040C2B78
        NodeBase.SysThread
        this : 040C2B78
        patchArea : 0x0
        nthread  : 000003BC
        nid      : 10534
        status   : 000
        event    : 00000304
        guard    : 00000380
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04086CD0
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 126
        stackBase  : 0186FDC8
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04086CF8
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14223778395080
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04086D18
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14223791797250
          limit    : 4
          count    : 4
        vector     : 0
        prevTime   : 83601
        currTime   : 0
        readyTime  : 14223874801501
        currStart  : 14223874802620
        currEnd    : 14223876602620
      test   : 0
      signal : 126
nt>
    THR901 29-Nov-2020 18:05:30.232 on Reigi {17}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00010534)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE

    THR903 29-Nov-2020 18:05:31.637 on Reigi {18}
    by NodeBase.CliThread (tid=9, nid=0x000116f8)
    for NodeTools.RecoveryThread (tid=15, nid=0x000114c4)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
nt>
    THR902 29-Nov-2020 18:05:31.640 on Reigi {19}
    in NodeTools.RecoveryThread (tid=15, nid=0x000114c4): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1674[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3495[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1799[0]
      NodeBase.Debug.ft @ debug.cpp + 74[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1615[10]
      NodeBase.Thread.Pause @ thread.cpp + 2357[11]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4065[26]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 03FEB8D0
      patchArea : 0x0
      systhrd  : 040C2E78
        NodeBase.SysThread
        this : 040C2E78
        patchArea : 0x0
        nthread  : 000002FC
        nid      : 114c4
        status   : 000
        event    : 000002F4
        guard    : 0000039C
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04085D30
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 07F5FA3C
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04085D58
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14223874827652
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04085D78
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14223888908966
          limit    : 4
          count    : 1
        vector     : 0
        prevTime   : 0
        currTime   : 208
        readyTime  : 14223874840798
        currStart  : 14223888890568
        currEnd    : 200000
      test   : 0
      signal : 0
testcase end

    THR901 29-Nov-2020 18:05:31.640 on Reigi {20}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000114c4)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop

    THR903 29-Nov-2020 18:05:34.324 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x0000e65c)
    for NodeTools.RecoveryThread (tid=15, nid=0x0000eaa8)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 29-Nov-2020 18:05:34.354 on Reigi {22}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000eaa8): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1674[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3495[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1799[0]
      NodeBase.Debug.ft @ debug.cpp + 74[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4084[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4025[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack

    THR902 29-Nov-2020 18:05:37.862 on Reigi {23}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000eaa8): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f42
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 2965[16]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1807[0]
      NodeBase.Debug.ft @ debug.cpp + 74[9]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4102[10]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4104[12]
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock

    SW900 29-Nov-2020 18:05:40.908 on Reigi {24}
    in Thread.EnterBlockingOperation
    expl=mutex holder  errval=0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1535[56]
      NodeBase.Thread.Pause @ thread.cpp + 2354[14]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4028[26]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit

    THR907 29-Nov-2020 18:05:42.240 on Reigi {25}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000eaa8)
    mutexes=1

    THR901 29-Nov-2020 18:05:42.240 on Reigi {26}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000eaa8)
    signal=0 (Normal Exit)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap

    THR907 29-Nov-2020 18:05:43.591 on Reigi {27}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00011490)
    mutexes=1

    THR902 29-Nov-2020 18:05:43.591 on Reigi {28}
    in NodeTools.RecoveryThread (tid=15, nid=0x00011490): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4037[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.TrapInRecover
symbols set testcase.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover swerr

    THR902 29-Nov-2020 18:05:45.924 on Reigi {29}
    in NodeTools.RecoveryThread (tid=15, nid=0x00011490): trap number 16
    type=Software Error
    errstr : software error test
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ softwareexception.cpp + 46[15]
      NodeBase.Debug.SwErr @ debug.cpp + 146[22]
      NodeTools.RecoveryThread.DoSwErr @ ntincrement.cpp + 3965[33]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4050[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 29-Nov-2020 18:05:45.927 on Reigi {30}
    in NodeTools.RecoveryThread (tid=15, nid=0x00011490): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.Recover @ ntincrement.cpp + 4095[0]
      NodeBase.Thread.Start @ thread.cpp + 3053[19]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>delay 1
nt>swflags set &flag.recovertrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.TrapInRecover completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ InitThread will trap when it invokes RecoveryDaemon.CreateThread
nt>/ to recreate the recovery thread.
nt>recover ctortrap

    THR901 29-Nov-2020 18:05:48.372 on Reigi {31}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00011490)
    signal=0 (Normal Exit)

    THR900 29-Nov-2020 18:05:48.378 on Reigi {32}
    thread=NodeBase.Thread (tid=15, nid=0x00011750)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 185[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1142[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3832[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 125[13]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 405[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 294[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 245[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03FEBCD0
      patchArea : 0x0
      systhrd  : 040C2F38
        NodeBase.SysThread
        this : 040C2F38
        patchArea : 0x0
        nthread  : 000003D8
        nid      : 11750
        status   : 000
        event    : 000002C0
        guard    : 000003BC
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 040855B0
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 1
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : ThreadsLock
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 040855D8
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224056233379
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 040855F8
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224056233401
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
nt>
    SW900 29-Nov-2020 18:05:48.379 on Reigi {33}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x11750
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeBase.ThreadRegistry.GetState @ threadregistry.cpp + 299[41]
      NodeBase.Thread.Start @ thread.cpp + 2999[11]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 29-Nov-2020 18:05:48.379 on Reigi {34}
    in NodeBase.InitThread (tid=2, nid=0x0000e65c): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3860[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3832[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 125[13]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 405[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 294[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 245[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>testcase begin recover.DaemonReenable
symbols set testcase.name recover.DaemonReenable
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.25
nt>/ RECOVER disable daemon; kill thread; enable daemon; thread recreated
nt>daemons set 9 off
nt>delay 1
nt>sched kill 15

    THR903 29-Nov-2020 18:05:50.793 on Reigi {35}
    by NodeBase.CliThread (tid=9, nid=0x000116f8)
    for NodeTools.RecoveryThread (tid=15, nid=0x0000bfd8)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 29-Nov-2020 18:05:50.797 on Reigi {36}
    in NodeTools.RecoveryThread (tid=15, nid=0x0000bfd8): trap number 19
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1674[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3495[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1799[0]
      NodeBase.Debug.ft @ debug.cpp + 74[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1615[10]
      NodeBase.Thread.Pause @ thread.cpp + 2357[11]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4065[26]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 03FEBAD0
      patchArea : 0x0
      systhrd  : 0403D1C8
        NodeBase.SysThread
        this : 0403D1C8
        patchArea : 0x0
        nthread  : 00000380
        nid      : bfd8
        status   : 000
        event    : 000002FC
        guard    : 000002C4
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04085D30
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 0186FD38
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04085D58
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224056307133
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04085D78
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224080475073
          limit    : 4
          count    : 1
        vector     : 0
        prevTime   : 287
        currTime   : 0
        readyTime  : 14224056315709
        currStart  : 14224080447936
        currEnd    : 200000
      test   : 0
      signal : 0
nt>
    THR901 29-Nov-2020 18:05:50.797 on Reigi {37}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0000bfd8)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

  * THR300 29-Nov-2020 18:05:50.797 on Reigi {38}
    Alarm ON: DAEMON10 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=0
delay 2
nt>daemons set 9 on
nt>delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.DaemonReenable completed.
nt>testcase begin recover.DaemonRetrap
symbols set testcase.name recover.DaemonRetrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.26
nt>/ RECOVER daemon retraps trying to recreate thread; reenable to create thread
nt>swflags set &flag.threadctorretrap on
nt>delay 1
nt>recover ctortrap

    THR900 29-Nov-2020 18:05:56.312 on Reigi {39}
    thread=NodeBase.Thread (tid=15, nid=0x00011624)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 185[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1142[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 82[34]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4415[5]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03FEC4D0
      patchArea : 0x0
      systhrd  : 0403CC88
        NodeBase.SysThread
        this : 0403CC88
        patchArea : 0x0
        nthread  : 000003E8
        nid      : 11624
        status   : 000
        event    : 00000304
        guard    : 000002D0
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04085B50
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04085B78
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224135562910
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04085B98
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224135562918
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
nt>
    SW900 29-Nov-2020 18:05:56.313 on Reigi {40}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x11624
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeBase.ThreadRegistry.GetState @ threadregistry.cpp + 299[41]
      NodeBase.Thread.Start @ thread.cpp + 2999[11]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 29-Nov-2020 18:05:56.314 on Reigi {41}
    in NodeBase.CliThread (tid=9, nid=0x000116f8): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3866[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 82[34]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4415[5]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>daemons set 9 on
nt>delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.DaemonRetrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f

    SW900 29-Nov-2020 18:05:59.824 on Reigi {42}
    in RecoverCommand.EnsureThread
    expl=recovery thread created  errval=0x0
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4418[42]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR900 29-Nov-2020 18:05:59.825 on Reigi {43}
    thread=NodeBase.Thread (tid=15, nid=0x00010934)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 185[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1142[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3880[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 106[32]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4476[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03FEC4D0
      patchArea : 0x0
      systhrd  : 04075F88
        NodeBase.SysThread
        this : 04075F88
        patchArea : 0x0
        nthread  : 00000378
        nid      : 10934
        status   : 000
        event    : 000003DC
        guard    : 000003D4
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03FEF620
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : false
        waiting    : true
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03FEF648
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224170741851
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03FEF668
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224170741859
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 14224170752642
        currStart  : 14224170752628
        currEnd    : 0
nt>delay 5
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t

    SW900 29-Nov-2020 18:06:06.228 on Reigi {44}
    in RecoverCommand.EnsureThread
    expl=recovery thread created  errval=0x0
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4418[42]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR900 29-Nov-2020 18:06:06.229 on Reigi {45}
    thread=NodeBase.Thread (tid=15, nid=0x000114ac)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 185[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1142[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 3880[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 106[32]
      NodeTools.RecoveryThread.DoDelete @ ntincrement.cpp + 3938[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4013[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03FEC4D0
      patchArea : 0x0
      systhrd  : 04075D18
        NodeBase.SysThread
        this : 04075D18
        patchArea : 0x0
        nthread  : 0000039C
        nid      : 114ac
        status   : 000
        event    : 000003A0
        guard    : 000002C0
        priority : 1
        signal   : 0
      daemon   : 040019B8 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 040858D0
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 07F5FE04
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 040858F8
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224234779225
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04085918
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 14224234779239
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 14224234790520
        currStart  : 14224234798522
        currEnd    : 14224241198522
nt>
    SW900 29-Nov-2020 18:06:06.230 on Reigi {46}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x114ac
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeBase.ThreadRegistry.GetState @ threadregistry.cpp + 299[41]
      NodeBase.Thread.RunningThread @ thread.cpp + 2777[12]
      NodeBase.Thread.Pause @ thread.cpp + 2342[5]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4065[26]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop

    SW900 29-Nov-2020 18:06:09.651 on Reigi {47}
    in RecoverCommand.EnsureThread
    expl=recovery thread created  errval=0x0
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4418[42]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR903 29-Nov-2020 18:06:10.415 on Reigi {48}
    by NodeBase.InitThread (tid=2, nid=0x0000e65c)
    for NodeTools.RecoveryThread (tid=15, nid=0x00010598)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 29-Nov-2020 18:06:11.231 on Reigi {49}
    for NodeTools.RecoveryThread (tid=15, nid=0x00010598)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 29-Nov-2020 18:06:11.264 on Reigi {50}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010598): trap number 21
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1674[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3495[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1799[0]
      NodeBase.Debug.ft @ debug.cpp + 74[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4084[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4025[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>
    THR905 29-Nov-2020 18:06:11.264 on Reigi {51}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00010598) overrun=951 msecs
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr

    THR902 29-Nov-2020 18:06:14.735 on Reigi {52}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010598): trap number 22
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4114[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4016[0]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 29-Nov-2020 18:06:14.738 on Reigi {53}
    in NodeTools.RecoveryThread (tid=15, nid=0x00010598): trap number 23
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1877[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 145[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ thread.cpp + 3587[0]
      NodeBase.Thread.Start @ thread.cpp + 3137[49]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>
    THR906 29-Nov-2020 18:06:14.742 on Reigi {54}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00010598)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 1
nt>swflags set &flag.threadretrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>testcase begin recover.ThreadDtorTrap
symbols set testcase.name recover.ThreadDtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.27
nt>/ RECOVER recovery thread exits and its destructor traps
nt>recover dtortrap

    SW900 29-Nov-2020 18:06:17.207 on Reigi {55}
    in RecoverCommand.EnsureThread
    expl=recovery thread created  errval=0x0
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 191[24]
      NodeTools.RecoverCommand.EnsureThread @ ntincrement.cpp + 4418[42]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4437[12]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 443[17]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 627[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 291[17]
      NodeBase.Thread.Start @ thread.cpp + 3092[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1571[0]
      o_iswdigit @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 29-Nov-2020 18:06:17.208 on Reigi {56}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x0001078c)
    signal=0 (Normal Exit)
nt>delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>echo Testcase &testcase.name completed.
Testcase recover.ThreadDtorTrap completed.
nt>testcase query

  Current test session:
    Passed: 27
    Failed: 0
  Testcase database:
    unreported: 0  failed: 0  re-execute: 0  passed: 118
nt>