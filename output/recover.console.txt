
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               337    11:46:42.440
NodeBase.NbModule...                    11:46:42.777
...initialized                    28
NodeTools.NtModule...                   11:46:42.806
...initialized                     9
CodeTools.CtModule...                   11:46:42.816
...initialized                     5
NetworkBase.NwModule...                 11:46:42.822
...initialized                    20
SessionBase.SbModule...                 11:46:42.843
...initialized                    46
ControlNode.CnModule...                 11:46:42.891
...initialized                     1
SessionTools.StModule...                11:46:42.893
...initialized                     3
MediaBase.MbModule...                   11:46:42.897
...initialized                     2
CallBase.CbModule...                    11:46:42.901
...initialized                     8
PotsBase.PbModule...                    11:46:42.910
...initialized                    10
OperationsNode.OnModule...              11:46:42.922
...initialized                     1
RoutingNode.RnModule...                 11:46:42.924
...initialized                     0
ServiceNode.SnModule...                 11:46:42.926
...initialized                    14
AccessNode.AnModule...                  11:46:42.942
...initialized                     3
                               -----
total initialization time        506

    NODE500 3-Mar-2022 11:46:42.948 on Reigi {1}
nb>read test.trap.all

nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>/ This only leaves LoadTestFaction, to which RecoveryThread belongs,
nt>/ traced. Including SystemFaction (InitThread) would show Daemon work
nt>/ but would also make the traces much longer, because InitThread runs
nt>/ well before, and after, RecoveryThread.
nt>/
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>exclude faction &faction.system
  OK.
nt>exclude faction &faction.watchdog
  OK.
nt>tests prolog test.trap.prolog
  OK.
nt>tests epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>tests begin recover.Return
symbols set test.name recover.Return
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.Return completed.
nt>tests begin recover.Exception
symbols set test.name recover.Exception
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER exception
nt>recover exception

    THR902 3-Mar-2022 11:47:16.857 on Reigi {2}
    in NodeTools.RecoveryThread (tid=19, nid=0x000033e0): trap number 1
    type=Software Error
    errstr : software exception test
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ SoftwareException.cpp + 46[15]
      NodeTools.RecoveryThread.DoException @ NtIncrement.cpp + 3648[38]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3717[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.Exception completed.
nt>tests begin recover.BadPtrExit
symbols set test.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr

    THR902 3-Mar-2022 11:47:18.985 on Reigi {3}
    in NodeTools.RecoveryThread (tid=19, nid=0x000033e0): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3708[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR901 3-Mar-2022 11:47:18.985 on Reigi {4}
    thread=NodeTools.RecoveryThread (tid=19, nid=0x000033e0)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>delay 1
nt>swflags set &flag.reenterthread on
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.BadPtrExit completed.
nt>tests begin recover.BadPtr
symbols set test.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr

    THR902 3-Mar-2022 11:47:21.162 on Reigi {5}
    in NodeTools.RecoveryThread (tid=19, nid=0x000069e0): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3708[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.BadPtr completed.
nt>tests begin recover.DivZero
symbols set test.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide

    THR902 3-Mar-2022 11:47:22.260 on Reigi {6}
    in NodeTools.RecoveryThread (tid=19, nid=0x000069e0): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3711[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.DivZero completed.
nt>tests begin recover.SIGINT
symbols set test.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT

    THR902 3-Mar-2022 11:47:23.384 on Reigi {7}
    in NodeTools.RecoveryThread (tid=19, nid=0x000069e0): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ NtIncrement.cpp + 3657[15]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3738[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.SIGINT completed.
nt>tests begin recover.SIGILL
symbols set test.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL

    THR902 3-Mar-2022 11:47:24.506 on Reigi {8}
    in NodeTools.RecoveryThread (tid=19, nid=0x000069e0): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ NtIncrement.cpp + 3657[15]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3738[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.SIGILL completed.
nt>tests begin recover.SIGTERM
symbols set test.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM

    THR902 3-Mar-2022 11:47:25.606 on Reigi {9}
    in NodeTools.RecoveryThread (tid=19, nid=0x000069e0): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ NtIncrement.cpp + 3657[15]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3738[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR906 3-Mar-2022 11:47:25.606 on Reigi {10}
    thread=NodeTools.RecoveryThread (tid=19, nid=0x000069e0)
    signal=15 (SIGTERM: Termination Request)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.SIGTERM completed.
nt>tests begin recover.SIGBREAK
symbols set test.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK

    THR902 3-Mar-2022 11:47:26.719 on Reigi {11}
    in NodeTools.RecoveryThread (tid=20, nid=0x000069a4): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ NtIncrement.cpp + 3657[15]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3738[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.SIGBREAK completed.
nt>tests begin recover.abort
symbols set test.name recover.abort
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort

    THR902 3-Mar-2022 11:47:32.993 on Reigi {12}
    in NodeTools.RecoveryThread (tid=20, nid=0x000069a4): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ NtIncrement.cpp + 3620[8]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3699[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.abort completed.
nt>tests begin recover.terminate
symbols set test.name recover.terminate
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate

    THR902 3-Mar-2022 11:47:38.066 on Reigi {13}
    in NodeTools.RecoveryThread (tid=20, nid=0x000069a4): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.Thread.SignalHandler @ Thread.cpp + 2989[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ NtIncrement.cpp + 3666[8]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3745[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.terminate completed.
nt>tests begin recover.KillLocal
symbols set test.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE

    THR902 3-Mar-2022 11:47:40.250 on Reigi {14}
    in NodeTools.RecoveryThread (tid=20, nid=0x000069a4): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.Raise @ Thread.cpp + 2567[19]
      NodeTools.RecoveryThread.DoTrap @ NtIncrement.cpp + 3675[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3748[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 094B6A28
      patchArea : 0x0
      systhrd  : 0950C948
        NodeBase.SysThread
        this : 0950C948
        patchArea : 0x0
        nthread  : 000002DC
        nid      : 69a4
        status   : 000
        event    : 000002E4
        guard    : 000002F8
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 20
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A949A0
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 126
        stackBase  : 0A54FA50
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A949D0
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4458824335512
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A949F0
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4458835461574
          limit    : 4
          count    : 4
        vector     : 0
        prevTime   : 259
        currTime   : 18605933
        readyTime  : 4458970752933
        currStart  : 4458970753932
        currEnd    : 4458971753932
      test   : 0
      signal : 126
nt>
    THR901 3-Mar-2022 11:47:40.250 on Reigi {15}
    thread=NodeTools.RecoveryThread (tid=20, nid=0x000069a4)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.KillLocal completed.
nt>tests begin recover.KillRemote
symbols set test.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE

    THR903 3-Mar-2022 11:47:41.379 on Reigi {16}
    by NodeBase.CliThread (tid=10, nid=0x0000684c)
    for NodeTools.RecoveryThread (tid=21, nid=0x00009288)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
nt>tests end

    THR902 3-Mar-2022 11:47:41.382 on Reigi {17}
    in NodeTools.RecoveryThread (tid=21, nid=0x00009288): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ Thread.cpp + 1748[31]
      NodeBase.Thread.TrapCheck @ Thread.cpp + 3568[0]
      NodeBase.Thread.FunctionInvoked @ Thread.cpp + 1858[0]
      NodeBase.Debug.ft @ Debug.cpp + 76[9]
      NodeBase.Thread.ExitBlockingOperation @ Thread.cpp + 1689[10]
      NodeBase.Thread.Pause @ Thread.cpp + 2424[11]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3757[26]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 094B6828
      patchArea : 0x0
      systhrd  : 0950DBD8
        NodeBase.SysThread
        this : 0950DBD8
        patchArea : 0x0
        nthread  : 000003F0
        nid      : 9288
        status   : 000
        event    : 00000408
        guard    : 000003E8
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 21
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A94E38
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 0E9FFD00
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94E68
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4458970773487
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94E88
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4458982084826
          limit    : 4
          count    : 1
        vector     : 0
        prevTime   : 171
        currTime   : 0
        readyTime  : 4458970783745
        currStart  : 4458982068439
        currEnd    : 200000
      test   : 0
      signal : 0

    THR901 3-Mar-2022 11:47:41.382 on Reigi {18}
    thread=NodeTools.RecoveryThread (tid=21, nid=0x00009288)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.KillRemote completed.
nt>tests begin recover.InfiniteLoop
symbols set test.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop

    THR903 3-Mar-2022 11:47:43.698 on Reigi {19}
    by NodeBase.InitThread (tid=2, nid=0x00006860)
    for NodeTools.RecoveryThread (tid=22, nid=0x000087c4)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 3-Mar-2022 11:47:43.706 on Reigi {20}
    in NodeTools.RecoveryThread (tid=22, nid=0x000087c4): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ Thread.cpp + 1748[31]
      NodeBase.Thread.TrapCheck @ Thread.cpp + 3568[0]
      NodeBase.Thread.FunctionInvoked @ Thread.cpp + 1858[0]
      NodeBase.Debug.ft @ Debug.cpp + 76[9]
      NodeTools.RecoveryThread.LoopForever @ NtIncrement.cpp + 3776[12]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3720[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.InfiniteLoop completed.
nt>tests begin recover.StackOverflow
symbols set test.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack

    THR902 3-Mar-2022 11:47:46.916 on Reigi {21}
    in NodeTools.RecoveryThread (tid=22, nid=0x000087c4): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.StackCheck @ Thread.cpp + 3036[16]
      NodeBase.Thread.FunctionInvoked @ Thread.cpp + 1865[0]
      NodeBase.Debug.ft @ Debug.cpp + 76[9]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3794[10]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
      NodeTools.RecoveryThread.RecurseForever @ NtIncrement.cpp + 3796[12]
nt>delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.StackOverflow completed.
nt>tests begin recover.MutexBlock
symbols set test.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock

    SW900 3-Mar-2022 11:47:49.559 on Reigi {22}
    in Thread.EnterBlockingOperation
    expl=mutex holder  errval=0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.Thread.EnterBlockingOperation @ Thread.cpp + 1607[56]
      NodeBase.Thread.Pause @ Thread.cpp + 2421[14]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3723[26]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.MutexBlock completed.
nt>tests begin recover.ThreadCtorTrap
symbols set test.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ InitThread will trap when it invokes RecoveryDaemon.CreateThread
nt>/ to recreate the recovery thread.
nt>recover ctortrap

    THR900 3-Mar-2022 11:47:50.666 on Reigi {23}
    thread=NodeBase.Thread (tid=23, nid=0x00003d54)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ SysThreadStack.win.cpp + 195[9]
      NodeBase.Thread.~Thread @ Thread.cpp + 1211[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 244[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 09618D20
      patchArea : 0x0
      systhrd  : 0950DBD8
        NodeBase.SysThread
        this : 0950DBD8
        patchArea : 0x0
        nthread  : 000002AC
        nid      : 3d54
        status   : 000
        event    : 0000034C
        guard    : 000003B4
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 23
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A948F8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 1
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94928
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459074885547
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94948
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459074885566
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
nt>
    SW900 3-Mar-2022 11:47:50.667 on Reigi {24}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x3d54
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.Start @ Thread.cpp + 3072[8]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR902 3-Mar-2022 11:47:50.668 on Reigi {25}
    in NodeBase.InitThread (tid=2, nid=0x00006860): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.RecoveryThread @ NtIncrement.cpp + 3552[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 244[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.ThreadCtorTrap completed.
nt>tests begin recover.MutexExit
symbols set test.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit

    THR907 3-Mar-2022 11:47:51.827 on Reigi {26}
    thread=NodeTools.RecoveryThread (tid=24, nid=0x000093b0)
    mutexes=1
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.MutexExit completed.
nt>tests begin recover.MutexTrap
symbols set test.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap

    THR907 3-Mar-2022 11:47:52.944 on Reigi {27}
    thread=NodeTools.RecoveryThread (tid=25, nid=0x00002f00)
    mutexes=1

    THR902 3-Mar-2022 11:47:52.944 on Reigi {28}
    in NodeTools.RecoveryThread (tid=25, nid=0x00002f00): trap number 16
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3732[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.MutexTrap completed.
nt>tests begin recover.TrapInRecover
symbols set test.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover exception

    THR902 3-Mar-2022 11:47:55.065 on Reigi {29}
    in NodeTools.RecoveryThread (tid=25, nid=0x00002f00): trap number 17
    type=Software Error
    errstr : software exception test
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ SoftwareException.cpp + 46[15]
      NodeTools.RecoveryThread.DoException @ NtIncrement.cpp + 3648[38]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3717[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR902 3-Mar-2022 11:47:55.068 on Reigi {30}
    in NodeTools.RecoveryThread (tid=25, nid=0x00002f00): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.Recover @ NtIncrement.cpp + 3787[0]
      NodeBase.Thread.Start @ Thread.cpp + 3126[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>delay 1
nt>swflags set &flag.recovertrap off
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.TrapInRecover completed.
nt>tests begin recover.DaemonReenable
symbols set test.name recover.DaemonReenable
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.25
nt>/ RECOVER disable daemon; kill thread; enable daemon; thread recreated
nt>daemons set &recovery.daemon off
nt>delay 1
nt>sched kill &recovery.thread

    THR903 3-Mar-2022 11:47:58.264 on Reigi {31}
    by NodeBase.CliThread (tid=10, nid=0x0000684c)
    for NodeTools.RecoveryThread (tid=25, nid=0x00002f00)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
nt>
    THR902 3-Mar-2022 11:47:58.265 on Reigi {32}
    in NodeTools.RecoveryThread (tid=25, nid=0x00002f00): trap number 19
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ Thread.cpp + 1748[31]
      NodeBase.Thread.TrapCheck @ Thread.cpp + 3568[0]
      NodeBase.Thread.FunctionInvoked @ Thread.cpp + 1858[0]
      NodeBase.Debug.ft @ Debug.cpp + 76[9]
      NodeBase.Thread.ExitBlockingOperation @ Thread.cpp + 1689[10]
      NodeBase.Thread.Pause @ Thread.cpp + 2424[11]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3757[26]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 096195E0
      patchArea : 0x0
      systhrd  : 09564808
        NodeBase.SysThread
        this : 09564808
        patchArea : 0x0
        nthread  : 00000424
        nid      : 2f00
        status   : 000
        event    : 000002C4
        guard    : 00000438
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 25
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A94CE8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 0E9FFA88
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94D18
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459086539942
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94D38
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459097711502
          limit    : 4
          count    : 4
        vector     : 0
        prevTime   : 23022
        currTime   : 63549
        readyTime  : 4459118952394
        currStart  : 4459150905428
        currEnd    : 200000
      test   : 0
      signal : 0
delay 2

    THR901 3-Mar-2022 11:47:58.266 on Reigi {33}
    thread=NodeTools.RecoveryThread (tid=25, nid=0x00002f00)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

  * THR300 3-Mar-2022 11:47:58.266 on Reigi {34}
    Alarm ON: DAEMON13 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=0
nt>daemons set &recovery.daemon on

    THR300 3-Mar-2022 11:48:00.292 on Reigi {35}
    Alarm OFF: DAEMON13 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=1
nt>delay 1
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.DaemonReenable completed.
nt>tests begin recover.DaemonRetrap
symbols set test.name recover.DaemonRetrap
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.26
nt>/ RECOVER daemon retraps trying to recreate thread; reenable to create thread
nt>swflags set &flag.threadctorretrap on
nt>delay 1
nt>recover ctortrap

    THR900 3-Mar-2022 11:48:03.523 on Reigi {36}
    thread=NodeBase.Thread (tid=27, nid=0x000091dc)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ SysThreadStack.win.cpp + 195[9]
      NodeBase.Thread.~Thread @ Thread.cpp + 1211[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 244[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 09619560
      patchArea : 0x0
      systhrd  : 095647D8
        NodeBase.SysThread
        this : 095647D8
        patchArea : 0x0
        nthread  : 00000480
        nid      : 91dc
        status   : 000
        event    : 00000350
        guard    : 0000047C
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 27
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A948F8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 1
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94928
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459203467710
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94948
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459203467739
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
nt>
    SW900 3-Mar-2022 11:48:03.524 on Reigi {37}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x91dc
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.Start @ Thread.cpp + 3072[8]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR902 3-Mar-2022 11:48:03.524 on Reigi {38}
    in NodeBase.InitThread (tid=2, nid=0x00006860): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.RecoveryThread @ NtIncrement.cpp + 3552[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 244[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
delay 1

    THR900 3-Mar-2022 11:48:03.527 on Reigi {39}
    thread=NodeBase.Thread (tid=28, nid=0x000046a0)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ SysThreadStack.win.cpp + 195[9]
      NodeBase.Thread.~Thread @ Thread.cpp + 1211[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 221[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 096196A0
      patchArea : 0x0
      systhrd  : 095647D8
        NodeBase.SysThread
        this : 095647D8
        patchArea : 0x0
        nthread  : 0000049C
        nid      : 46a0
        status   : 000
        event    : 00000408
        guard    : 00000498
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 28
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A943B8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A943E8
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459203511981
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94408
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459203511998
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0

    SW900 3-Mar-2022 11:48:03.527 on Reigi {40}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x46a0
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.Start @ Thread.cpp + 3072[8]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR902 3-Mar-2022 11:48:03.528 on Reigi {41}
    in NodeBase.InitThread (tid=2, nid=0x00006860): trap number 21
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.RecoveryThread @ NtIncrement.cpp + 3558[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ Singleton.h + 82[34]
      NodeTools.RecoveryDaemon.CreateThread @ NtIncrement.cpp + 3521[0]
      NodeBase.Daemon.CreateThreads @ Daemon.cpp + 126[15]
      NodeBase.InitThread.RecreateThreads @ InitThread.cpp + 401[0]
      NodeBase.InitThread.HandleInterrupt @ InitThread.cpp + 293[0]
      NodeBase.InitThread.Enter @ InitThread.cpp + 221[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

  * THR300 3-Mar-2022 11:48:03.528 on Reigi {42}
    Alarm ON: DAEMON13 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=0
nt>daemons set &recovery.daemon on

    THR300 3-Mar-2022 11:48:04.548 on Reigi {43}
    Alarm OFF: DAEMON13 (Thread(s) unavailable: recover)
    daemon=recover target=1 actual=1
nt>delay 1
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.DaemonRetrap completed.
nt>tests begin recover.DeleteRemote
symbols set test.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f

    THR900 3-Mar-2022 11:48:06.783 on Reigi {44}
    thread=NodeBase.Thread (tid=29, nid=0x00006fc4)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ SysThreadStack.win.cpp + 195[9]
      NodeBase.Thread.~Thread @ Thread.cpp + 1211[16]
      NodeTools.RecoveryThread.~RecoveryThread @ NtIncrement.cpp + 3572[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ Singleton.h + 106[28]
      NodeTools.RecoverCommand.ProcessCommand @ NtIncrement.cpp + 4065[0]
      NodeBase.CliThread.InvokeCommand @ CliThread.cpp + 466[19]
      NodeBase.CliThread.ReadCommands @ CliThread.cpp + 650[0]
      NodeBase.CliThread.Enter @ CliThread.cpp + 295[17]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 09619720
      patchArea : 0x0
      systhrd  : 095647D8
        NodeBase.SysThread
        this : 095647D8
        patchArea : 0x0
        nthread  : 000004A0
        nid      : 6fc4
        status   : 000
        event    : 000002C4
        guard    : 00000484
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 29
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A948F8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 0
        stackBase  : 0EAFFCD4
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94928
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459213726553
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94948
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459213726567
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 321
        currTime   : 0
        readyTime  : 4459213742132
        currStart  : 4459213744947
        currEnd    : 0
nt>delay 5

    SW900 3-Mar-2022 11:48:09.546 on Reigi {45}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x6fc4
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.RunningThread @ Thread.cpp + 2848[12]
      NodeBase.Thread.ExitBlockingOperation @ Thread.cpp + 1691[5]
      NodeBase.Thread.Pause @ Thread.cpp + 2424[11]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3757[26]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.DeleteRemote completed.
nt>tests begin recover.DeleteLocal
symbols set test.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t

    THR900 3-Mar-2022 11:48:12.974 on Reigi {46}
    thread=NodeBase.Thread (tid=30, nid=0x00006f5c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ SysThreadStack.win.cpp + 195[9]
      NodeBase.Thread.~Thread @ Thread.cpp + 1211[16]
      NodeTools.RecoveryThread.~RecoveryThread @ NtIncrement.cpp + 3572[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ Singleton.h + 106[28]
      NodeTools.RecoveryThread.DoDelete @ NtIncrement.cpp + 3630[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3705[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 09619660
      patchArea : 0x0
      systhrd  : 09564808
        NodeBase.SysThread
        this : 09564808
        patchArea : 0x0
        nthread  : 0000049C
        nid      : 6f5c
        status   : 000
        event    : 00000460
        guard    : 00000480
        priority : 1
        signal   : 0
      daemon   : 04A9F170 NodeTools.RecoveryDaemon
      tid      : 30
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 04A94508
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 0EBFFE14
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 04A94538
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459236112243
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 04A94558
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 4459236112271
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 169
        currTime   : 292
        readyTime  : 4459298010137
        currStart  : 4459298011146
        currEnd    : 4459298811146
nt>
    SW900 3-Mar-2022 11:48:12.976 on Reigi {47}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x6f5c
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.RunningThread @ Thread.cpp + 2848[12]
      NodeBase.Thread.Pause @ Thread.cpp + 2409[5]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3757[26]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.DeleteLocal completed.
nt>tests begin recover.Ctrl-C
symbols set test.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop

    THR903 3-Mar-2022 11:48:16.297 on Reigi {48}
    by NodeBase.InitThread (tid=2, nid=0x00006860)
    for NodeTools.RecoveryThread (tid=31, nid=0x000033b4)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 3-Mar-2022 11:48:17.304 on Reigi {49}
    for NodeTools.RecoveryThread (tid=31, nid=0x000033b4)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 3-Mar-2022 11:48:17.309 on Reigi {50}
    in NodeTools.RecoveryThread (tid=31, nid=0x000033b4): trap number 22
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.ExitIfSafe @ Thread.cpp + 1748[31]
      NodeBase.Thread.TrapCheck @ Thread.cpp + 3568[0]
      NodeBase.Thread.FunctionInvoked @ Thread.cpp + 1858[0]
      NodeBase.Debug.ft @ Debug.cpp + 76[9]
      NodeTools.RecoveryThread.LoopForever @ NtIncrement.cpp + 3776[12]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3720[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR905 3-Mar-2022 11:48:17.309 on Reigi {51}
    thread=NodeTools.RecoveryThread (tid=31, nid=0x000033b4) overrun=1088 msecs
nt>delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.Ctrl-C completed.
nt>tests begin recover.Retrap
symbols set test.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr

    THR902 3-Mar-2022 11:48:20.529 on Reigi {52}
    in NodeTools.RecoveryThread (tid=31, nid=0x000033b4): trap number 23
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ NtIncrement.cpp + 3806[0]
      NodeTools.RecoveryThread.Enter @ NtIncrement.cpp + 3708[0]
      NodeBase.Thread.Start @ Thread.cpp + 3164[15]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)

    THR902 3-Mar-2022 11:48:20.531 on Reigi {53}
    in NodeTools.RecoveryThread (tid=31, nid=0x000033b4): trap number 24
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ SignalException.cpp + 38[12]
      NodeBase.Thread.HandleSignal @ Thread.cpp + 1936[19]
      NodeBase.SE_Handler @ SysThread.win.cpp + 146[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ Thread.cpp + 3660[0]
      NodeBase.Thread.Start @ Thread.cpp + 3210[46]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
nt>
    THR906 3-Mar-2022 11:48:20.532 on Reigi {54}
    thread=NodeTools.RecoveryThread (tid=31, nid=0x000033b4)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 1
nt>swflags set &flag.threadretrap off
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.Retrap completed.
nt>tests begin recover.ThreadDtorTrap
symbols set test.name recover.ThreadDtorTrap
  OK.
read test.trap.prolog
nt>send &test.name
  OK.
nt>sched start
nt>start
nt>read trap.27
nt>/ RECOVER recovery thread exits and its destructor traps
nt>recover dtortrap
nt>
    SW900 3-Mar-2022 11:48:22.722 on Reigi {55}
    in ThreadRegistry.GetState
    expl=orphan exited  errval=0x6814
    Function Traceback:
      NodeBase.Debug.SwLog @ Debug.cpp + 188[24]
      NodeBase.ThreadRegistry.GetState @ ThreadRegistry.cpp + 340[42]
      NodeBase.Thread.TrapHandler @ Thread.cpp + 3603[12]
      NodeBase.Thread.Start @ Thread.cpp + 3210[46]
      NodeBase.Thread.EnterThread @ Thread.cpp + 1643[0]
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
      RtlGetFullPathName_UEx @ <unknown file> (err=487)
delay 1
nt>tests end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &test.name
nt>save funcs &test.name
nt>save trace &test.name
nt>clear buffer
nt>send cout
nt>echo Test &test.name completed.
Test recover.ThreadDtorTrap completed.
nt>