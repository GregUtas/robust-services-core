
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               306    10:09:37.203
NodeBase.NbModule...                    10:09:37.509
...initialized                   106
NodeTools.NtModule...                   10:09:37.626
...initialized                    60
CodeTools.CtModule...                   10:09:37.699
...initialized                    27
NetworkBase.NwModule...                 10:09:37.740

    NET500 24-May-2020 10:09:37.763 on Reigi {1}
...initialized                    94
SessionBase.SbModule...                 10:09:37.845
...initialized                   109
ControlNode.CnModule...                 10:09:37.967
...initialized                    10
SessionTools.StModule...                10:09:37.993
...initialized                    24
MediaBase.MbModule...                   10:09:38.033
...initialized                    23
CallBase.CbModule...                    10:09:38.068
...initialized                    25
PotsBase.PbModule...                    10:09:38.106
...initialized                    28
OperationsNode.OnModule...              10:09:38.149
...initialized                    13
RoutingNode.RnModule...                 10:09:38.177
...initialized                    13
ServiceNode.SnModule...                 10:09:38.206
...initialized                    54
AccessNode.AnModule...                  10:09:38.275
...initialized                    24
                               -----
total initialization time       1112

    NODE500 24-May-2020 10:09:38.333 on Reigi {2}
nb>read test.trap.all

nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>swflags set &flag.reenterthread on
  OK.
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>/ This only leaves LoadTestFaction, to which RecoveryThread belongs,
nt>/ traced. Including SystemFaction (InitThread) would show Daemon work
nt>/ but would also make the traces much longer, because InitThread runs
nt>/ well before, and after, RecoveryThread.
nt>/
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>exclude faction &faction.system
  OK.
nt>exclude faction &faction.watchdog
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>recover create
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 24-May-2020 10:09:52.313 on Reigi {3}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00005564)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 24-May-2020 10:09:54.921 on Reigi {4}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004fe0): trap number 1
    type=Software Error
    errstr : 0xf
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ softwareexception.cpp + 50[15]
      NodeBase.Debug.SwErr @ debug.cpp + 189[62]
      NodeTools.RecoveryThread.DoSwErr @ ntincrement.cpp + 4111[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4200[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtrExit
symbols set testcase.name recover.BadPtrExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.24
nt>/ RECOVER dereference bad pointer and exit thread
nt>swflags set &flag.reenterthread off
nt>delay 1
nt>recover badptr
nt>
    THR902 24-May-2020 10:09:57.735 on Reigi {5}
    in NodeTools.RecoveryThread (tid=15, nid=0x00004fe0): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4166[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR901 24-May-2020 10:09:57.736 on Reigi {6}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00004fe0)
    signal=11 (SIGSEGV: Invalid Memory Reference)
delay 1
nt>swflags set &flag.reenterthread on
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtrExit completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 24-May-2020 10:10:00.536 on Reigi {7}
    in NodeTools.RecoveryThread (tid=15, nid=0x000067f0): trap number 3
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4166[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 24-May-2020 10:10:02.242 on Reigi {8}
    in NodeTools.RecoveryThread (tid=15, nid=0x000067f0): trap number 4
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4169[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 24-May-2020 10:10:03.966 on Reigi {9}
    in NodeTools.RecoveryThread (tid=15, nid=0x000067f0): trap number 5
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4100[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4193[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 24-May-2020 10:10:05.683 on Reigi {10}
    in NodeTools.RecoveryThread (tid=15, nid=0x000067f0): trap number 6
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4100[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4193[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 24-May-2020 10:10:07.590 on Reigi {11}
    in NodeTools.RecoveryThread (tid=15, nid=0x000067f0): trap number 7
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    TRAP LIMIT EXCEEDED.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4100[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4193[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR906 24-May-2020 10:10:07.591 on Reigi {12}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000067f0)
    signal=15 (SIGTERM: Termination Request)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 24-May-2020 10:10:09.365 on Reigi {13}
    in NodeTools.RecoveryThread (tid=15, nid=0x000048a8): trap number 8
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoRaise @ ntincrement.cpp + 4100[15]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4193[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 24-May-2020 10:10:14.759 on Reigi {14}
    in NodeTools.RecoveryThread (tid=15, nid=0x000048a8): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoAbort @ ntincrement.cpp + 4066[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4157[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up dialog.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 24-May-2020 10:10:20.715 on Reigi {15}
    in NodeTools.RecoveryThread (tid=15, nid=0x000048a8): trap number 10
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.Thread.SignalHandler @ thread.cpp + 3343[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryThread.DoTerminate @ ntincrement.cpp + 4122[8]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4203[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 24-May-2020 10:10:23.545 on Reigi {16}
    in NodeTools.RecoveryThread (tid=15, nid=0x000048a8): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2807[19]
      NodeTools.RecoveryThread.DoTrap @ ntincrement.cpp + 4133[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4206[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 039A6B40
      patchArea : 0x0
      systhrd  : 039A2A60
        NodeBase.SysThread
        this : 039A2A60
        patchArea : 0x0
        nthread  : 000003C8
        nid      : 48a8
        status   : 000
        event    : 000003C4
        guard    : 000003D0
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758108
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 126
        stackBase  : 0791FAB4
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758130
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618166946290
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758150
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618184668272
          limit    : 4
          count    : 4
        vector     : 0
        prevTime   : 20252144
        currTime   : 0
        readyTime  : 1618326434368
        currStart  : 1618326441235
        currEnd    : 1618328241235
      test   : 0
      signal : 126
testcase end

    THR901 24-May-2020 10:10:23.546 on Reigi {17}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000048a8)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 24-May-2020 10:10:25.317 on Reigi {18}
    by NodeBase.CliThread (tid=9, nid=0x00006430)
    for NodeTools.RecoveryThread (tid=15, nid=0x000025dc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 24-May-2020 10:10:25.322 on Reigi {19}
    in NodeTools.RecoveryThread (tid=15, nid=0x000025dc): trap number 12
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1992[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3903[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2123[0]
      NodeBase.Debug.ft @ debug.cpp + 73[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1931[11]
      NodeBase.Thread.Pause @ thread.cpp + 2691[11]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4215[26]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 039A6880
      patchArea : 0x0
      systhrd  : 039A2BE0
        NodeBase.SysThread
        this : 039A2BE0
        patchArea : 0x0
        nthread  : 0000049C
        nid      : 25dc
        status   : 000
        event    : 00000474
        guard    : 00000488
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758428
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 0967F9AC
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758450
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618326486744
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758470
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618344239419
          limit    : 4
          count    : 1
        vector     : 0
        prevTime   : 715
        currTime   : 0
        readyTime  : 1618326510896
        currStart  : 1618344207138
        currEnd    : 200000
      test   : 0
      signal : 0
testcase end

    THR901 24-May-2020 10:10:25.323 on Reigi {20}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000025dc)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 24-May-2020 10:10:28.377 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x00006500)
    for NodeTools.RecoveryThread (tid=15, nid=0x000039e0)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 24-May-2020 10:10:28.405 on Reigi {22}
    in NodeTools.RecoveryThread (tid=15, nid=0x000039e0): trap number 13
    type=Signal
    signal : 123 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1992[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3903[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2123[0]
      NodeBase.Debug.ft @ debug.cpp + 73[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4234[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4175[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 24-May-2020 10:10:32.279 on Reigi {23}
    in NodeTools.RecoveryThread (tid=15, nid=0x000039e0): trap number 14
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 3390[16]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2131[0]
      NodeBase.Debug.ft @ debug.cpp + 73[9]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4256[11]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      ...1997 functions omitted.
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
      NodeTools.RecoveryThread.RecurseForever @ ntincrement.cpp + 4258[12]
delay 1
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock
nt>
    SW900 24-May-2020 10:10:36.676 on Reigi {24}
    in Thread.EnterBlockingOperation
    errval=mutex holder  offset=0x1
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1827[56]
      NodeBase.Thread.Pause @ thread.cpp + 2688[14]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4178[26]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit
nt>
    THR907 24-May-2020 10:10:38.496 on Reigi {25}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000039e0)
    mutexes=1

    THR901 24-May-2020 10:10:38.496 on Reigi {26}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000039e0)
    signal=0 (Normal Exit)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap
nt>
    THR907 24-May-2020 10:10:40.260 on Reigi {27}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00006590)
    mutexes=1

    THR902 24-May-2020 10:10:40.260 on Reigi {28}
    in NodeTools.RecoveryThread (tid=15, nid=0x00006590): trap number 15
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4187[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.TrapInRecover
symbols set testcase.name recover.TrapInRecover
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recovertrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 24-May-2020 10:10:42.985 on Reigi {29}
    in NodeTools.RecoveryThread (tid=15, nid=0x00006590): trap number 16
    type=Software Error
    errstr : 0xf
    offset : 0x1
    Function Traceback:
      NodeBase.SoftwareException.SoftwareException @ softwareexception.cpp + 50[15]
      NodeBase.Debug.SwErr @ debug.cpp + 189[62]
      NodeTools.RecoveryThread.DoSwErr @ ntincrement.cpp + 4111[13]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4200[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 24-May-2020 10:10:42.989 on Reigi {30}
    in NodeTools.RecoveryThread (tid=15, nid=0x00006590): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    TRAP DURING RECOVERY.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.Recover @ ntincrement.cpp + 4247[0]
      NodeBase.Thread.Start @ thread.cpp + 3447[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1
nt>swflags set &flag.recovertrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapInRecover completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ InitThread will trap when it invokes RecoveryDaemon.CreateThread
nt>/ to recreate the recovery thread.
nt>recover ctortrap
nt>
    THR901 24-May-2020 10:10:45.940 on Reigi {31}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00006590)
    signal=0 (Normal Exit)

    THR900 24-May-2020 10:10:45.962 on Reigi {32}
    thread=NodeBase.Thread (tid=15, nid=0x00001670)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 187[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1409[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 257[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 039A6800
      patchArea : 0x0
      systhrd  : 039A2A60
        NodeBase.SysThread
        this : 039A2A60
        patchArea : 0x0
        nthread  : 00000558
        nid      : 1670
        status   : 000
        event    : 0000052C
        guard    : 00000530
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758388
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 1
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 037583B0
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618550436634
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 037583D0
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618550436780
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
testcase end

    SW900 24-May-2020 10:10:45.970 on Reigi {33}
    in Threads.GetState
    errval=orphan exited  offset=0x1670
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Threads.GetState @ thread.cpp + 937[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1872[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 24-May-2020 10:10:45.971 on Reigi {34}
    in NodeBase.InitThread (tid=2, nid=0x00006500): trap number 18
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3992[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 257[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>testcase begin recover.DaemonReenable
symbols set testcase.name recover.DaemonReenable
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.25
nt>/ RECOVER disable daemon; kill thread; enable daemon; thread recreated
nt>daemons set 9 off
nt>delay 1
nt>sched kill 15
nt>
    THR903 24-May-2020 10:10:48.852 on Reigi {35}
    by NodeBase.CliThread (tid=9, nid=0x00006430)
    for NodeTools.RecoveryThread (tid=15, nid=0x000020b4)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 24-May-2020 10:10:48.919 on Reigi {36}
    in NodeTools.RecoveryThread (tid=15, nid=0x000020b4): trap number 19
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1992[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3903[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2123[0]
      NodeBase.Debug.ft @ debug.cpp + 73[9]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1931[11]
      NodeBase.Thread.Pause @ thread.cpp + 2691[11]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4215[26]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryThread
      this : 039A6AC0
      patchArea : 0x0
      systhrd  : 070A77A0
        NodeBase.SysThread
        this : 070A77A0
        patchArea : 0x0
        nthread  : 00000594
        nid      : 20b4
        status   : 000
        event    : 00000590
        guard    : 00000548
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758108
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 1
        recovering : false
        logged     : true
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 126
        stackBase  : 0791FD64
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758130
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618550746296
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758150
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618580212975
          limit    : 4
          count    : 1
        vector     : 0
        prevTime   : 0
        currTime   : 1104
        readyTime  : 1618550766515
        currStart  : 1618579552387
        currEnd    : 200000
      test   : 0
      signal : 0
delay 2

    THR901 24-May-2020 10:10:48.920 on Reigi {37}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x000020b4)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

  * THR300 24-May-2020 10:10:48.921 on Reigi {38}
    Alarm ON: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 24-May-2020 10:10:51.005 on Reigi {39}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonReenable completed.
nt>testcase begin recover.DaemonRetrap
symbols set testcase.name recover.DaemonRetrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>
    THR903 24-May-2020 10:10:53.901 on Reigi {40}
    by NodeBase.InitThread (tid=2, nid=0x00006500)
    for NodeBase.CliThread (tid=9, nid=0x00006430)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 24-May-2020 10:10:53.930 on Reigi {41}
    thread=NodeBase.CliThread (tid=9, nid=0x00006430) overrun=150 msecs
sched start
nt>start
nt>read trap.26
nt>/ RECOVER daemon retraps trying to recreate thread; reenable to create thread
nt>swflags set &flag.threadctorretrap on
nt>delay 1
nt>recover ctortrap
nt>
    THR901 24-May-2020 10:10:55.079 on Reigi {42}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00004678)
    signal=0 (Normal Exit)

    THR900 24-May-2020 10:10:55.102 on Reigi {43}
    thread=NodeBase.Thread (tid=15, nid=0x00005eec)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 187[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1409[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 257[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 039A6840
      patchArea : 0x0
      systhrd  : 070A77A0
        NodeBase.SysThread
        this : 070A77A0
        patchArea : 0x0
        nthread  : 000005B4
        nid      : 5eec
        status   : 000
        event    : 000005AC
        guard    : 000005B0
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758B08
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 1
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758B30
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618641854265
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758B50
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618641854565
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0
delay 1

    SW900 24-May-2020 10:10:55.108 on Reigi {44}
    in Threads.GetState
    errval=orphan exited  offset=0x5eec
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Threads.GetState @ thread.cpp + 937[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1872[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 24-May-2020 10:10:55.112 on Reigi {45}
    in NodeBase.InitThread (tid=2, nid=0x00006500): trap number 20
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3992[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 257[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR900 24-May-2020 10:10:55.130 on Reigi {46}
    thread=NodeBase.Thread (tid=15, nid=0x00002228)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 187[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1409[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 234[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 039A6840
      patchArea : 0x0
      systhrd  : 070A77A0
        NodeBase.SysThread
        this : 070A77A0
        patchArea : 0x0
        nthread  : 000004C0
        nid      : 2228
        status   : 000
        event    : 00000558
        guard    : 00000520
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758CE8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : false
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 00000000
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758D10
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618642183366
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758D30
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618642183647
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 0
        readyTime  : 0
        currStart  : 0
        currEnd    : 0

    SW900 24-May-2020 10:10:55.133 on Reigi {47}
    in Threads.GetState
    errval=orphan exited  offset=0x2228
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Threads.GetState @ thread.cpp + 937[42]
      NodeBase.Thread.EnterThread @ thread.cpp + 1872[8]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 24-May-2020 10:10:55.135 on Reigi {48}
    in NodeBase.InitThread (tid=2, nid=0x00006500): trap number 21
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.RecoveryThread @ ntincrement.cpp + 3998[0]
      NodeBase.Singleton<NodeTools.RecoveryThread>.Instance @ singleton.h + 77[34]
      NodeTools.RecoveryDaemon.CreateThread @ ntincrement.cpp + 3962[0]
      NodeBase.Daemon.CreateThreads @ daemon.cpp + 129[15]
      NodeBase.InitThread.RecreateThreads @ initthread.cpp + 427[0]
      NodeBase.InitThread.HandleInterrupt @ initthread.cpp + 308[0]
      NodeBase.InitThread.Enter @ initthread.cpp + 234[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

  * THR300 24-May-2020 10:10:55.137 on Reigi {49}
    Alarm ON: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=0
nt>daemons set 9 on
nt>
    THR300 24-May-2020 10:10:56.179 on Reigi {50}
    Alarm OFF: DAEMON9 (Thread(s) unavailable: DAEMON9)
    daemon=recover target=1 actual=1
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DaemonRetrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>/ After deleting the thread, give it time to wake up and exit.
nt>recover delete f
nt>
    THR900 24-May-2020 10:10:59.073 on Reigi {51}
    thread=NodeBase.Thread (tid=15, nid=0x000038a0)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 187[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1409[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 4014[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 101[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4632[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 474[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 673[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 309[17]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 039A6AC0
      patchArea : 0x0
      systhrd  : 070A77A0
        NodeBase.SysThread
        this : 070A77A0
        patchArea : 0x0
        nthread  : 00000514
        nid      : 38a0
        status   : 000
        event    : 000005B4
        guard    : 00000424
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 037584C8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : false
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : clock
        status     : unspecified
        signal     : 0
        stackBase  : 0791FD78
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 037584F0
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618652768328
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758510
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618652768433
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 0
        currTime   : 2138
        readyTime  : 1618652810063
        currStart  : 1618652838260
        currEnd    : 0
delay 5

    SW900 24-May-2020 10:11:01.185 on Reigi {52}
    in Threads.GetState
    errval=orphan exited  offset=0x38a0
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Threads.GetState @ thread.cpp + 937[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 3143[12]
      NodeBase.Thread.ExitBlockingOperation @ thread.cpp + 1933[5]
      NodeBase.Thread.Pause @ thread.cpp + 2691[11]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4215[26]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    THR900 24-May-2020 10:11:06.246 on Reigi {53}
    thread=NodeBase.Thread (tid=15, nid=0x000052a4)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 187[9]
      NodeBase.Thread.~Thread @ thread.cpp + 1409[16]
      NodeTools.RecoveryThread.~RecoveryThread @ ntincrement.cpp + 4014[15]
      NodeTools.RecoveryThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryThread>.Destroy @ singleton.h + 101[34]
      NodeTools.RecoveryThread.DoDelete @ ntincrement.cpp + 4078[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4163[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 039A67C0
      patchArea : 0x0
      systhrd  : 07063A98
        NodeBase.SysThread
        this : 07063A98
        patchArea : 0x0
        nthread  : 000005C0
        nid      : 52a4
        status   : 000
        event    : 000005B8
        guard    : 000005BC
        priority : 1
        signal   : 0
      daemon   : 03779530 NodeTools.RecoveryDaemon
      tid      : 15
      faction  : 6
      deleting : false
      msgq     : 
        tail : 00000000
        diff : 8
      priv     : 
        NodeBase.ThreadPriv
        this : 03758CE8
        patchArea : 0x0
        unpreempts : 1
        immUnprots : 0
        memUnprots : 0
        mutexes    : 0
        swlogs     : 0
        entered    : true
        waiting    : false
        locked     : true
        traceMsg   : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        traps      : 0
        recovering : false
        logged     : false
        exiting    : false
        action     : 0
        blocked    : ready
        status     : unspecified
        signal     : 0
        stackBase  : 098AF7A8
        acquiring  : 00000000
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 03758D10
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618681828529
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 03758D30
          patchArea : 0x0
          interval : 60000 msecs
          lastTime : 1618681828588
          limit    : 4
          count    : 0
        vector     : 0
        prevTime   : 2882
        currTime   : 0
        readyTime  : 1618753464424
        currStart  : 1618753473663
        currEnd    : 1618755073663
testcase end

    SW900 24-May-2020 10:11:06.251 on Reigi {54}
    in Threads.GetState
    errval=orphan exited  offset=0x52a4
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 109[24]
      NodeBase.Debug.SwLog @ debug.cpp + 240[26]
      NodeBase.Threads.GetState @ thread.cpp + 937[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 3143[12]
      NodeBase.Thread.Pause @ thread.cpp + 2676[5]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4215[26]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 24-May-2020 10:11:10.587 on Reigi {55}
    by NodeBase.InitThread (tid=2, nid=0x00006500)
    for NodeTools.RecoveryThread (tid=15, nid=0x00002598)
    signal=123 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 24-May-2020 10:11:11.104 on Reigi {56}
    for NodeTools.RecoveryThread (tid=15, nid=0x00002598)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 24-May-2020 10:11:11.129 on Reigi {57}
    in NodeTools.RecoveryThread (tid=15, nid=0x00002598): trap number 22
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1992[31]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3903[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 2123[0]
      NodeBase.Debug.ft @ debug.cpp + 73[9]
      NodeTools.RecoveryThread.LoopForever @ ntincrement.cpp + 4234[12]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4175[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 24-May-2020 10:11:11.129 on Reigi {58}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00002598) overrun=646 msecs
delay 1
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>swflags set &flag.threadretrap on
nt>delay 1
nt>recover badptr
nt>
    THR902 24-May-2020 10:11:14.916 on Reigi {59}
    in NodeTools.RecoveryThread (tid=15, nid=0x00002598): trap number 23
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryThread.UseBadPointer @ ntincrement.cpp + 4270[0]
      NodeTools.RecoveryThread.Enter @ ntincrement.cpp + 4166[0]
      NodeBase.Thread.Start @ thread.cpp + 3485[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR902 24-May-2020 10:11:14.921 on Reigi {60}
    in NodeTools.RecoveryThread (tid=15, nid=0x00002598): trap number 24
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 2203[19]
      NodeBase.SE_Handler @ systhread.win.cpp + 147[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeBase.Thread.TrapHandler @ thread.cpp + 3995[0]
      NodeBase.Thread.Start @ thread.cpp + 3531[46]
      NodeBase.Thread.EnterThread @ thread.cpp + 1885[0]
      register_onexit_function @ <unknown file> (err=487)
      register_onexit_function @ <unknown file> (err=487)
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 1

    THR906 24-May-2020 10:11:14.925 on Reigi {61}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00002598)
    signal=11 (SIGSEGV: Invalid Memory Reference)
nt>swflags set &flag.threadretrap off
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>testcase begin recover.ThreadDtorTrap
symbols set testcase.name recover.ThreadDtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.27
nt>/ RECOVER recovery thread exits and its destructor traps
nt>recover dtortrap
nt>
    THR901 24-May-2020 10:11:17.744 on Reigi {62}
    thread=NodeTools.RecoveryThread (tid=15, nid=0x00005bac)
    signal=0 (Normal Exit)
delay 1
nt>testcase end
read test.trap.epilog
nt>delay 1
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadDtorTrap completed.
nt>