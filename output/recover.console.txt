
MODULE INITIALIZATION          msecs      invoked at
pre-Module.Startup               351    16:31:39.163
NodeBase.NbModule...                    16:31:39.514
...initialized                    79
NodeTools.NtModule...                   16:31:39.603
...initialized                    38
CodeTools.CtModule...                   16:31:39.653
...initialized                    26
NetworkBase.NwModule...                 16:31:39.687

    NET500 27-Oct-2019 16:31:39.705 on Reigi {1}
...initialized                   121
SessionBase.SbModule...                 16:31:39.816
...initialized                    84
SessionTools.StModule...                16:31:39.911
...initialized                    18
MediaBase.MbModule...                   16:31:39.942
...initialized                    14
CallBase.CbModule...                    16:31:39.968
...initialized                    22
PotsBase.PbModule...                    16:31:40.000
...initialized                    18
OperationsNode.OnModule...              16:31:40.028
...initialized                    11
ControlNode.CnModule...                 16:31:40.050
...initialized                    10
RoutingNode.RnModule...                 16:31:40.070
...initialized                    11
ServiceNode.SnModule...                 16:31:40.092
...initialized                    37
AccessNode.AnModule...                  16:31:40.143
...initialized                    22
                               -----
total initialization time       1013

    NODE500 27-Oct-2019 16:31:40.187 on Reigi {2}
nb>read saveinit
nb>stop
  OK.
nb>save trace init
  OK.
nb>nt
nt>save funcs init
  OK.
nt>clear buffer
  OK.
nt>/ register as a testcase; the only logs should be NET500 and NODE500
nt>testcase begin init
symbols set testcase.name init
  OK.
nt>logs count
2
nt>if &cli.result != 2 testcase failed &cli.result "logs during system initialization"
  Result is false.
nt>testcase end
  OK.
nt>testcase reset
  OK.
nt>read savehelp
nt>quit all
nb>send help
  OK.
nb>help
nb>incrs
nb>help full
nb>nt
nt>help full
nt>quit
nb>nw
nw>help full
nw>quit
nb>sb
sb>help full
sb>quit
nb>st
st>help full
st>quit
nb>pots
pots>help full
pots>quit
nb>an
an>help full
an>quit
nb>sn
sn>help full
sn>quit
nb>ct
ct>help full
ct>quit
nb>send cout
nb>read test.trap.all
nb>/ MAKE RECOVERY TEST THREAD CRITICAL
nb>read test.trap.setup
nb>quit all
  Nothing to quit.
nb>nt
nt>read test.tools.setup
nt>stop
  OK.
nt>clear buffer
  OK.
nt>clear selections
  OK.
nt>clear tools
  OK.
nt>set tools f on
  f: OK.
  OK.
nt>/ set scope counts  / enables full function trace if commented out
nt>include all on
  OK.
nt>read test.trap.tools.setup
nt>exclude faction &faction.audit
  OK.
nt>exclude faction &faction.bkgd
  OK.
nt>exclude faction &faction.oper
  OK.
nt>exclude faction &faction.mtce
  OK.
nt>exclude faction &faction.payload
  OK.
nt>sb exclude timers
  OK.
nt>testcase prolog test.trap.prolog
  OK.
nt>testcase epilog test.trap.epilog
  OK.
nt>swflags set &flag.criticalthread on
  OK.
nt>testcase begin recover.Return
symbols set testcase.name recover.Return
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.01
nt>/ RECOVER return
nt>recover return
nt>
    THR901 27-Oct-2019 16:32:17.555 on Reigi {3}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x00010cf0)
    signal=0 (Unknown Signal)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Return completed.
nt>testcase begin recover.SwErr
symbols set testcase.name recover.SwErr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.02
nt>/ RECOVER swerr
nt>recover swerr
nt>
    THR902 27-Oct-2019 16:32:19.900 on Reigi {4}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08): trap number 1
    type=Software Abort
    errstr : 13
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 197[61]
      NodeTools.RecoveryTestThread.DoSwerr @ ntincrement.cpp + 3637[22]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3721[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SwErr completed.
nt>testcase begin recover.BadPtr
symbols set testcase.name recover.BadPtr
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.03
nt>/ RECOVER dereference bad pointer
nt>recover badptr
nt>
    THR902 27-Oct-2019 16:32:22.162 on Reigi {5}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08): trap number 2
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3688[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.BadPtr completed.
nt>testcase begin recover.DivZero
symbols set testcase.name recover.DivZero
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.04
nt>/ RECOVER divide by zero
nt>recover divide
nt>
    THR902 27-Oct-2019 16:32:24.417 on Reigi {6}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08): trap number 3
    type=Signal
    signal : 8 (SIGFPE: Erroneous Arithmetic Operation)
    errval : 0xc0000094
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3691[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DivZero completed.
nt>testcase begin recover.SIGINT
symbols set testcase.name recover.SIGINT
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.05
nt>/ RECOVER raise interrupt
nt>recover raise SIGINT
nt>
    THR902 27-Oct-2019 16:32:26.662 on Reigi {7}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08): trap number 4
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoRaise @ ntincrement.cpp + 3616[15]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3711[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGINT completed.
nt>testcase begin recover.SIGILL
symbols set testcase.name recover.SIGILL
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.06
nt>/ RECOVER raise illegal instruction
nt>recover raise SIGILL
nt>
    THR902 27-Oct-2019 16:32:28.912 on Reigi {8}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08): trap number 5
    type=Signal
    signal : 4 (SIGILL: Illegal Instruction)
    errval : 0x0
    Trap limit exceeded.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoRaise @ ntincrement.cpp + 3616[15]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3711[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 03364414
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 034148E0
        NodeBase.SysThread
        this : 034148E0
        patchArea : 0x0
        nthread  : 00000374
        nid      : 10d08
        status   : 000
        event    : 000003C0
        guard    : 00000390
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 06A5FEE0
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328546849733
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328637342057
          limit    : 4
          count    : 0
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 122
        vector     : 0
        prevUsecs  : 14514
        currUsecs  : 2825
        currStart  : 12328637318489
        currEnd    : 12328652118489
      test   : 0
      signal : 4
testcase end

    THR901 27-Oct-2019 16:32:28.921 on Reigi {9}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x00010d08)
    signal=122 (SIGTRAPS: Trap Threshold Exceeded)
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGILL completed.
nt>testcase begin recover.SIGTERM
symbols set testcase.name recover.SIGTERM
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.07
nt>/ RECOVER raise termination from kill
nt>recover raise SIGTERM
nt>
    THR902 27-Oct-2019 16:32:31.166 on Reigi {10}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00011230): trap number 6
    type=Signal
    signal : 15 (SIGTERM: Termination Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoRaise @ ntincrement.cpp + 3616[15]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3711[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 27-Oct-2019 16:32:33.314 on Reigi {11}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 27-Oct-2019 16:32:33.326 on Reigi {12}
    thread=NodeBase.CliThread (tid=9, nid=0x0000dfdc) extra msecs=43
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGTERM completed.
nt>testcase begin recover.SIGBREAK
symbols set testcase.name recover.SIGBREAK
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.08
nt>/ RECOVER raise ctrl-break
nt>recover raise SIGBREAK
nt>
    THR902 27-Oct-2019 16:32:33.460 on Reigi {13}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00011230): trap number 7
    type=Signal
    signal : 21 (SIGBREAK: Ctrl-Break)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoRaise @ ntincrement.cpp + 3616[15]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3711[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.SIGBREAK completed.
nt>testcase begin recover.abort
symbols set testcase.name recover.abort
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.09
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER abort
nt>/ Enable breakpoints because of pop-up.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover abort
nt>
    THR902 27-Oct-2019 16:32:41.754 on Reigi {14}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00011230): trap number 8
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoAbort @ ntincrement.cpp + 3585[8]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3682[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.abort completed.
nt>testcase begin recover.terminate
symbols set testcase.name recover.terminate
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.10
nt>/ ============== PREPARE TO CLICK RETRY, THEN CONTINUE (F5) ==============
nt>/ RECOVER terminate
nt>/ Enable breakpoints because of pop-up.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover terminate
nt>
    THR902 27-Oct-2019 16:32:50.073 on Reigi {15}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00011230): trap number 9
    type=Signal
    signal : 22 (SIGABRT: Abort Request)
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.Thread.SignalHandler @ thread.cpp + 2890[11]
      raise @ <unknown file> (err=487)
      abort @ <unknown file> (err=487)
      terminate @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.DoTerminate @ ntincrement.cpp + 3647[8]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3724[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.terminate completed.
nt>testcase begin recover.KillLocal
symbols set testcase.name recover.KillLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.11
nt>/ RECOVER kill this
nt>recover trap t SIGPURGE
nt>
    THR902 27-Oct-2019 16:32:54.473 on Reigi {16}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x00011230): trap number 10
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x0
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.Raise @ thread.cpp + 2306[17]
      NodeTools.RecoveryTestThread.DoTrap @ ntincrement.cpp + 3658[0]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3727[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 03364414
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 034020A8
        NodeBase.SysThread
        this : 034020A8
        patchArea : 0x0
        nthread  : 00000394
        nid      : 11230
        status   : 000
        event    : 00000388
        guard    : 00000374
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 06A5F964
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328637436047
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328809881695
          limit    : 4
          count    : 4
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 2921678
        currUsecs  : 0
        currStart  : 12328892925604
        currEnd    : 12328907725604
      test   : 0
      signal : 126
testcase end

    THR901 27-Oct-2019 16:32:54.474 on Reigi {17}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x00011230)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillLocal completed.
nt>testcase begin recover.KillRemote
symbols set testcase.name recover.KillRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.12
nt>/ RECOVER kill remotely
nt>recover trap f SIGPURGE
nt>
    THR903 27-Oct-2019 16:32:56.750 on Reigi {18}
    by NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000ff4c)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])

    THR902 27-Oct-2019 16:32:56.757 on Reigi {19}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000ff4c): trap number 11
    type=Signal
    signal : 126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1668[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3415[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1791[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.Thread.SetTrap @ thread.cpp + 2823[11]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1668[0]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1489[0]
      NodeBase.Thread.Pause @ thread.cpp + 2203[14]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3734[7]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 0336454C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03413760
        NodeBase.SysThread
        this : 03413760
        patchArea : 0x0
        nthread  : 00000480
        nid      : ff4c
        status   : 000
        event    : 000004BC
        guard    : 000004C4
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 08EFF978
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328915704625
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12328915785766
          limit    : 4
          count    : 1
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 126
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        currStart  : 12328915728646
        currEnd    : 12328968928646
      test   : 0
      signal : 0
testcase end

    THR901 27-Oct-2019 16:32:56.757 on Reigi {20}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000ff4c)
    signal=126 (SIGPURGE: Suicided [errval = 0] or Killed [errval > 0])
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 27-Oct-2019 16:32:58.874 on Reigi {21}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 27-Oct-2019 16:32:58.905 on Reigi {22}
    thread=NodeBase.CliThread (tid=9, nid=0x0000dfdc) extra msecs=36
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.KillRemote completed.
nt>testcase begin recover.InfiniteLoop
symbols set testcase.name recover.InfiniteLoop
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.13
nt>/ RECOVER infinite loop
nt>/ Enable use of SIGYIELD to kill thread that runs too long.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled f
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout t
nt>delay 1
nt>recover loop
nt>
    THR903 27-Oct-2019 16:33:05.444 on Reigi {23}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x0000b1b8)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR902 27-Oct-2019 16:33:05.453 on Reigi {24}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000b1b8): trap number 12
    type=Signal
    signal : 121 (SIGYIELD: Running Unpreemptably Too Long)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1668[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3415[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1791[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.LoopForever @ ntincrement.cpp + 3763[12]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3694[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.InfiniteLoop completed.
nt>testcase begin recover.StackOverflow
symbols set testcase.name recover.StackOverflow
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.14
nt>/ ============== THE STACK OVERFLOW MAY TAKE TIME TO OCCUR ===============
nt>/ RECOVER stack overflow
nt>/ Enable breakpoints to provide time for overflow.
nt>symbols assign save.breakenabled breakenabled
nt>cfgparms set breakenabled t
nt>delay 1
nt>recover stack
nt>
    THR902 27-Oct-2019 16:33:10.916 on Reigi {25}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000b1b8): trap number 13
    type=Signal
    signal : 124 (SIGSTACK1: Stack Overflow: Attempt Recovery)
    errval : 0x1f43
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.StackCheck @ thread.cpp + 2928[14]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1799[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3785[11]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      ...1997 functions omitted.
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
      NodeTools.RecoveryTestThread.RecurseForever @ ntincrement.cpp + 3787[12]
delay 2
nt>cfgparms set breakenabled &save.breakenabled
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.StackOverflow completed.
nt>testcase begin recover.MutexBlock
symbols set testcase.name recover.MutexBlock
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.19
nt>/ RECOVER block while holding mutex
nt>recover mutexblock
nt>
    SW900 27-Oct-2019 16:33:16.258 on Reigi {26}
    in Thread.EnterBlockingOperation
    errval=mutexes released  offset=0x1
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 96[22]
      NodeBase.Debug.SwLog @ debug.cpp + 209[25]
      NodeBase.Thread.EnterBlockingOperation @ thread.cpp + 1493[55]
      NodeBase.Thread.Pause @ thread.cpp + 2203[14]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3697[10]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 27-Oct-2019 16:33:18.384 on Reigi {27}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 27-Oct-2019 16:33:18.401 on Reigi {28}
    thread=NodeBase.CliThread (tid=9, nid=0x0000dfdc) extra msecs=23
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexBlock completed.
nt>testcase begin recover.MutexExit
symbols set testcase.name recover.MutexExit
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.21
nt>/ RECOVER exit while holding mutex
nt>recover mutexexit
nt>
    THR901 27-Oct-2019 16:33:18.541 on Reigi {29}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000b1b8)
    signal=0 (Unknown Signal)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexExit completed.
nt>testcase begin recover.MutexTrap
symbols set testcase.name recover.MutexTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.22
nt>/ RECOVER trap while holding mutex
nt>recover mutextrap
nt>
    THR902 27-Oct-2019 16:33:20.792 on Reigi {30}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000d610): trap number 14
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3705[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.MutexTrap completed.
nt>testcase begin recover.Retrap
symbols set testcase.name recover.Retrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.23
nt>/ RECOVER trap during trap recovery
nt>recover retrap
nt>
    THR906 27-Oct-2019 16:33:23.064 on Reigi {31}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000d610)
    signal=11 (SIGSEGV: Invalid Memory Reference)

    THR900 27-Oct-2019 16:33:23.065 on Reigi {32}
    thread=NodeBase.Thread (tid=15, nid=0x0000d610)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1100[16]
      NodeTools.RecoveryTestThread.~RecoveryTestThread @ ntincrement.cpp + 3536[15]
      NodeTools.RecoveryTestThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Destroy @ singleton.h + 103[34]
      NodeTools.RecoveryTestThread.Destroy @ ntincrement.cpp + 3566[0]
      NodeBase.Thread.ForceExit @ thread.cpp + 1761[15]
      NodeBase.Thread.Exit @ thread.cpp + 1577[12]
      NodeBase.Thread.Start @ thread.cpp + 3091[20]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 033647BC
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 06DDABE0
        NodeBase.SysThread
        this : 06DDABE0
        patchArea : 0x0
        nthread  : 00000460
        nid      : d610
        status   : 000
        event    : 000004C8
        guard    : 0000046C
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A8148
        patchArea : 0x0
        stackBase  : 08EFF90C
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A8160
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329156091496
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A8180
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329156139170
          limit    : 4
          count    : 1
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 3298
        currStart  : 12329178813990
        currEnd    : 12329193613990
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Retrap completed.
nt>testcase begin recover.TrapDuringRecovery
symbols set testcase.name recover.TrapDuringRecovery
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.15
nt>/ RECOVER trap during recovery
nt>swflags set &flag.recoverytrap on
nt>delay 1
nt>recover swerr
nt>
    THR902 27-Oct-2019 16:33:26.398 on Reigi {33}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000f680): trap number 15
    type=Software Abort
    errstr : 13
    offset : 0x1
    Function Traceback:
      NodeBase.Debug.SwLog @ debug.cpp + 197[61]
      NodeTools.RecoveryTestThread.DoSwerr @ ntincrement.cpp + 3637[22]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3721[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
delay 2

    THR902 27-Oct-2019 16:33:26.407 on Reigi {34}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x0000f680): trap number 16
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Trap during recovery.
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.HandleSignal @ thread.cpp + 1830[16]
      NodeBase.SE_Handler @ systhread.win.cpp + 126[13]
      _unDNameEx @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      is_exception_typeof @ <unknown file> (err=487)
      _CxxFrameHandler3 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      RtlInterlockedCompareExchange64 @ <unknown file> (err=487)
      KiUserExceptionDispatcher @ <unknown file> (err=487)
      NodeTools.RecoveryTestThread.Recover @ ntincrement.cpp + 3775[0]
      NodeBase.Thread.Start @ thread.cpp + 2987[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeTools.RecoveryTestThread
      this : 033648F4
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03413C30
        NodeBase.SysThread
        this : 03413C30
        patchArea : 0x0
        nthread  : 00000394
        nid      : f680
        status   : 000
        event    : 00000480
        guard    : 00000464
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : true
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 08EFF9A8
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329212107546
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329212198128
          limit    : 4
          count    : 1
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : true
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 123
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 5713
        currStart  : 12329212233735
        currEnd    : 12329227033735
      test   : 0
      signal : 0

    THR901 27-Oct-2019 16:33:26.408 on Reigi {35}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x0000f680)
    signal=123 (SIGRETRAP: Trap During Recovery)
nt>swflags set &flag.recoverytrap off
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.TrapDuringRecovery completed.
nt>testcase begin recover.ThreadCtorTrap
symbols set testcase.name recover.ThreadCtorTrap
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.20
nt>/ RECOVER thread constructor trap
nt>/ Exit the recovery thread so that it has to be recreated, and then
nt>/ set the flag that causes a trap in its constructor before doing so.
nt>/ This also causes a trap in the CLI thread, because it is the thread
nt>/ that attempts to create the recovery thread.
nt>recover return
nt>
    THR901 27-Oct-2019 16:33:30.809 on Reigi {36}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x00011894)
    signal=0 (Unknown Signal)
delay 3
nt>swflags set &flag.threadctortrap on
nt>include faction &faction.admin
nt>delay 1
nt>recover return

    THR900 27-Oct-2019 16:33:34.880 on Reigi {37}
    thread=NodeBase.Thread (tid=15, nid=0x0000a930)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1100[16]
      NLG_Return @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Instance @ singleton.h + 81[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4070[5]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2020[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2020[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03364A2C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 06DDA748
        NodeBase.SysThread
        this : 06DDA748
        patchArea : 0x0
        nthread  : 00000490
        nid      : a930
        status   : 000
        event    : 000004C0
        guard    : 000003C0
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : true
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 12329296956934
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A8148
        patchArea : 0x0
        stackBase  : 00000000
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A8160
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329296930098
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A8180
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329296930101
          limit    : 4
          count    : 0
        entered    : false
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 0
        currUsecs  : 0
        currStart  : 0
        currEnd    : 0

    THR902 27-Oct-2019 16:33:34.897 on Reigi {38}
    in NodeBase.CliThread (tid=9, nid=0x0000dfdc): trap number 17
    type=Signal
    signal : 11 (SIGSEGV: Invalid Memory Reference)
    errval : 0xc0000005
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.SysThread.Suspend @ systhread.win.cpp + 316[11]
      NodeBase.SysThread.Wait @ systhread.cpp + 156[0]
      NodeBase.Thread.Ready @ thread.cpp + 2406[0]
      NodeBase.Thread.EnterThread @ thread.cpp + 1548[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
      <unknown function> (err=126)
nt>swflags set &flag.threadctortrap off
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 27-Oct-2019 16:33:37.044 on Reigi {39}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 27-Oct-2019 16:33:37.117 on Reigi {40}
    thread=NodeBase.CliThread (tid=9, nid=0x0000dfdc) extra msecs=99
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.ThreadCtorTrap completed.
nt>testcase begin recover.DeleteRemote
symbols set testcase.name recover.DeleteRemote
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.16
nt>/ RECOVER destroy remotely
nt>recover delete f
nt>
    THR900 27-Oct-2019 16:33:42.304 on Reigi {41}
    thread=NodeBase.Thread (tid=15, nid=0x0001209c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1100[16]
      NodeTools.RecoveryTestThread.~RecoveryTestThread @ ntincrement.cpp + 3536[15]
      NodeTools.RecoveryTestThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Destroy @ singleton.h + 103[34]
      NodeTools.RecoverCommand.ProcessCommand @ ntincrement.cpp + 4113[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2020[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03364B64
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 0340E360
        NodeBase.SysThread
        this : 0340E360
        patchArea : 0x0
        nthread  : 00000374
        nid      : 1209c
        status   : 000
        event    : 000003BC
        guard    : 0000049C
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : slp
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 092BFB30
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329321261254
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329321261257
          limit    : 4
          count    : 0
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 16
        currUsecs  : 0
        currStart  : 12329321275847
        currEnd    : 0
testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteRemote completed.
nt>testcase begin recover.DeleteLocal
symbols set testcase.name recover.DeleteLocal
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.17
nt>/ RECOVER destroy this
nt>recover delete t
nt>
    THR900 27-Oct-2019 16:33:49.594 on Reigi {42}
    thread=NodeBase.Thread (tid=15, nid=0x0001218c)
    Function Traceback:
      NodeBase.SysThreadStack.Display @ systhreadstack.win.cpp + 196[5]
      NodeBase.Thread.~Thread @ thread.cpp + 1100[16]
      NodeTools.RecoveryTestThread.~RecoveryTestThread @ ntincrement.cpp + 3536[15]
      NodeTools.RecoveryTestThread.`scalar deleting destructor' @ <unknown file> (err=487)
      NodeBase.Singleton<NodeTools.RecoveryTestThread>.Destroy @ singleton.h + 103[34]
      NodeTools.RecoveryTestThread.DoDelete @ ntincrement.cpp + 3596[0]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3685[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
    Thread Data:
      NodeBase.Thread
      this : 03364C9C
      patchArea : 0x0
      pid      : 1
      seq      : 1
      link     : 00000000
      assigned : true
      orphaned : 0
      corrupt  : false
      logged   : false
      systhrd   : 03411428
        NodeBase.SysThread
        this : 03411428
        patchArea : 0x0
        nthread  : 000004B8
        nid      : 1218c
        status   : 000
        event    : 00000464
        guard    : 00000394
        priority : 1
        signal   : 0
      tid       : 15
      faction   : 6
      blocked   : rdy
      status    : unspecified
      waiting   : false
      traceMsg  : false
      deleted   : false
      trapped   : false
      readyTime : 18446744073709551615
      msgq      : 
        tail : 00000000
        diff : 8
      priv      : 
        NodeBase.ThreadPriv
        this : 031A7D20
        patchArea : 0x0
        stackBase  : 093FFBF0
        unpreempts : 1
        unprotects : 0
        mutexes    : 0
        acquiring  :         00000000
        swlogs     : 0
        rtcLbc     : 
          NodeBase.LeakyBucketCounter
          this : 031A7D38
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329394109046
          limit    : 6
          count    : 0
        trapLbc    : 
          NodeBase.LeakyBucketCounter
          this : 031A7D58
          patchArea : 0x0
          interval : 600000000
          lastTime : 12329394109049
          limit    : 4
          count    : 0
        entered    : true
        tracing    : false
        autostop   : false
        warned     : false
        trap       : false
        recovering : false
        exiting    : false
        recreate   : false
        action     : 0
        signal     : 0
        vector     : 0
        prevUsecs  : 31
        currUsecs  : 0
        currStart  : 12329444162902
        currEnd    : 12329456962902
testcase end

    SW900 27-Oct-2019 16:33:49.597 on Reigi {43}
    in Orphans.ExitNow
    errval=orphan exited  offset=0x1218c
    Function Traceback:
      NodeBase.Debug.GenerateSwLog @ debug.cpp + 96[22]
      NodeBase.Debug.SwLog @ debug.cpp + 209[25]
      NodeBase.Orphans.ExitNow @ thread.cpp + 624[42]
      NodeBase.Thread.RunningThread @ thread.cpp + 2719[12]
      NodeBase.Thread.Pause @ thread.cpp + 2191[7]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3734[7]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.DeleteLocal completed.
nt>testcase begin recover.Ctrl-C
symbols set testcase.name recover.Ctrl-C
  OK.
read test.trap.prolog
nt>send &testcase.name
  OK.
nt>sched start
nt>start
nt>read trap.18
nt>/ =============== PREPARE TO ENTER CTRL-C, POSSIBLY TWICE ================
nt>/ RECOVER infinite loop
nt>delay 1
nt>symbols assign save.traponrtctimeout traponrtctimeout
nt>cfgparms set traponrtctimeout f
nt>delay 1
nt>recover loop
nt>
    THR903 27-Oct-2019 16:33:56.378 on Reigi {44}
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=2 (SIGINT: Terminal Interrupt)

    THR903 27-Oct-2019 16:33:59.259 on Reigi {45}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeTools.RecoveryTestThread (tid=15, nid=0x000122c4)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR903 27-Oct-2019 16:33:59.995 on Reigi {46}
    for NodeTools.RecoveryTestThread (tid=15, nid=0x000122c4)
    signal=2 (SIGINT: Terminal Interrupt)

    THR902 27-Oct-2019 16:34:00.025 on Reigi {47}
    in NodeTools.RecoveryTestThread (tid=15, nid=0x000122c4): trap number 18
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1668[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3415[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1791[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeTools.RecoveryTestThread.LoopForever @ ntincrement.cpp + 3763[12]
      NodeTools.RecoveryTestThread.Enter @ ntincrement.cpp + 3694[0]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)

    THR905 27-Oct-2019 16:34:00.026 on Reigi {48}
    thread=NodeTools.RecoveryTestThread (tid=15, nid=0x000122c4) extra msecs=742

    THR902 27-Oct-2019 16:34:00.046 on Reigi {49}
    in NodeBase.CliThread (tid=9, nid=0x0000dfdc): trap number 19
    type=Signal
    signal : 2 (SIGINT: Terminal Interrupt)
    errval : 0x3
    Function Traceback:
      NodeBase.SignalException.SignalException @ signalexception.cpp + 40[12]
      NodeBase.Thread.ExitIfSafe @ thread.cpp + 1668[27]
      NodeBase.Thread.TrapCheck @ thread.cpp + 3415[0]
      NodeBase.Thread.FunctionInvoked @ thread.cpp + 1791[0]
      NodeBase.Debug.ft @ debug.cpp + 62[9]
      NodeBase.FileThread.Record @ filethread.cpp + 273[11]
      NodeBase.CoutThread.Spool @ coutthread.cpp + 126[46]
      NodeBase.CliBuffer.GetLine @ clibuffer.cpp + 364[9]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 665[22]
      NodeBase.ReadCommand.ProcessCommand @ nbincrement.cpp + 2020[0]
      NodeBase.CliThread.InvokeCommand @ clithread.cpp + 459[19]
      NodeBase.CliThread.ReadCommands @ clithread.cpp + 671[0]
      NodeBase.CliThread.Enter @ clithread.cpp + 340[17]
      NodeBase.Thread.Start @ thread.cpp + 3038[15]
      NodeBase.Thread.EnterThread @ thread.cpp + 1561[0]
      BaseThreadInitThunk @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
      RtlGetAppContainerNamedObjectPath @ <unknown file> (err=487)
nt>cfgparms set traponrtctimeout &save.traponrtctimeout
nt>testcase end
read test.trap.epilog
nt>delay 2
nt>stop
nt>sched stop
nt>sched show &testcase.name
nt>
    THR903 27-Oct-2019 16:34:02.254 on Reigi {50}
    by NodeBase.InitThread (tid=2, nid=0x00010c58)
    for NodeBase.CliThread (tid=9, nid=0x0000dfdc)
    signal=121 (SIGYIELD: Running Unpreemptably Too Long)

    THR905 27-Oct-2019 16:34:02.290 on Reigi {51}
    thread=NodeBase.CliThread (tid=9, nid=0x0000dfdc) extra msecs=105
save funcs &testcase.name
nt>save trace &testcase.name
nt>clear buffer
nt>send cout
nt>print Testcase &testcase.name completed.
Testcase recover.Ctrl-C completed.
nt>