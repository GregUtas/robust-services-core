LINE COUNTS
 source code   70595
       blank   39335
          //   16244
     file //    9739
separator //    6769
   tagged //     208
     text //   18100
          /*       0
           {   13781
           }   12111
          };    1671
   Debug::ft    4343
     fn_name    4326
    ...split     134
    #include    5533
    #<other>    1058
       using     765
       TOTAL  204712

WARNING COUNTS
  W004    81  C-style cast
  W005    45  Functional cast
  W006   114  reinterpret_cast
  W007   541  Cast down the inheritance hierarchy
  W008    41  Cast removes const qualification
  W009    15  Pointer arithmetic
  W015     3  #include not sorted in standard order
  W017     1  Add #include directive
  W018     6  Remove #include directive
  W020   170  Using statement in header
  W022   376  Add using statement
  W024     1  Add forward declaration
  W026    90  Unused argument
  W027    10  Unused class
  W028    44  Unused data
  W029     1  Unused enum
  W030    20  Unused enumerator
  W032   183  Unused function
  W033     3  Unused typedef
  W037     9  Member hides inherited name
  W040     1  Struct could be class
  W042   255  Member could be private
  W043    57  Member could be protected
  W044    11  Typedef of pointer type
  W047    38  Data is init-only
  W048     3  Data is write-only
  W050    56  Data is not private
  W053    81  Data could be const
  W054    17  Data could be const pointer
  W055     1  Data need not be mutable
  W056    28  Default constructor invoked: POD members not initialized
  W057     1  Default constructor invoked
  W058     2  Default copy constructor invoked
  W060    67  Base class constructor is public
  W062     2  Member not included in member initialization list
  W065    27  Base class virtual destructor is not public
  W075   367  Virtual function is public
  W076     4  Virtual function is overloaded
  W077   166  Virtual function has no overrides
  W078  2105  Remove virtual tag: function is an override or final
  W082    84  Adjacent arguments have the same type
  W088    35  Argument could be const
  W090    83  Function could be const
  W092   157  Function could be free
  W097    32  Line indentation is not a multiple of the standard value
  W099   284  Line contains adjacent spaces
  W102     3  Line length exceeds the standard maximum
  W103     2  Function not sorted in standard order
  W104    35  File heading is not standard
  W106   492  Function does not invoke Debug::ft
  W107    17  Function does not invoke Debug::ft as first statement
  W110    30  Override of Base.Display not found
  W111    27  Override of Object.Patch not found
  W112   153  Function could be defaulted
  W114    72  Function could be tagged noexcept
  W115    10  Function should not be tagged noexcept
  W117   218  Line can merge with the next line and be under the length limit
========================================================================================================================
WARNINGS SORTED BY TYPE/FILE/LINE
W004 C-style cast
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(502):    Singleton< TrafficCallPool >::Instance()->Enq((TrafficCall*) addr);
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(1076):    timewheel_ = (Q1Way< TrafficCall >*) Memory::Alloc(size, MemDyn);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(579):    LibrarySet* nbSet = (LibrarySet*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(611):    LibrarySet* nsSet = (LibrarySet*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(448):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1264):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(337):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1250):    return (CxxToken*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1443):    return (CxxToken*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(160):    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(464):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(571):    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(992):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1069):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(33):    return (void*) ((const_ptr_t) ptr2 - diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(33):    return (void*) ((const_ptr_t) ptr2 - diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(40):    return (void*) ((const_ptr_t) ptr1 + diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(40):    return (void*) ((const_ptr_t) ptr1 + diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(77):    return ((const_ptr_t) ptr1 - (const_ptr_t) ptr2);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(77):    return ((const_ptr_t) ptr1 - (const_ptr_t) ptr2);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.cpp(220):    if(addr != nullptr) return (Object*) addr;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.cpp(98):          p = (void*) n;
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(391):          auto src = (ptr_t) this;
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(227):    auto seg = (Segment*) addr;
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(284):    auto segment = (Segment*) getptr1(addr, SegmentHeader::Size());
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(335):    auto source = (Segment*) getptr1(addr, SegmentHeader::Size());
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(386):    auto source = (Segment*) getptr1(addr, SegmentHeader::Size());
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(237):       blocks_[currSegments_] = (uword*) Memory::Alloc(size, type_, false);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(260):          auto b = (ObjectBlock*) &seg[j];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(312):             auto b = (ObjectBlock*) &seg[j];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(349):             auto curr = (Pooled*) getptr1(item, diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(713):       return (ObjectBlock*) &blocks_[0][0];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(783):       return (ObjectBlock*) &blocks_[i][j];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(808):             auto b = (ObjectBlock*) &seg[j];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(840):    auto block = (const_ptr_t) ObjToBlock(obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(841):    auto maxdiff = (ptrdiff_t) (blockSize_ * (ObjectsPerSegment - 1));
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(845):       auto b0 = (const_ptr_t) &blocks_[i][0];
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(888):    return (ObjectBlock*) getptr1(obj, BlockHeader::Size);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(918):          auto b = (ObjectBlock*) &seg[j];
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.cpp(142):    auto obj = (Pooled*) addr;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.win.cpp(162):    aHeaps = (HANDLE*) HeapAlloc(DefaultProcessHeap, 0, BytesToAllocate);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(141):       (LPTHREAD_START_ROUTINE) entry,  // thread entry function
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(142):       (LPVOID) client,                 // argument to entry function
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(144):       (DWORD*) &nid);                  // updates thread's identifier
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(345):    _set_se_translator((_se_translator_function) SE_Handler);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(163):    Symbols = (SYMBOL_INFO*) Memory::Alloc(size, MemPerm, false);
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(126):    buff_ = (uword*) Memory::Alloc(InitialSize << BYTES_PER_WORD_LOG2, MemPerm);
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(236):    auto addr = (TraceRecord*) &buff_[end_];
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(431):       next = (uword*) record + incr;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(449):             record = (TraceRecord*) buff_;  // case (b)
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(453):          record = (TraceRecord*) next;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(462):       next = (uword*) record + incr;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(488):       auto record = (TraceRecord*) &buff_[start_];
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(595):    buff_ = (uword*) Memory::Alloc(size << BYTES_PER_WORD_LOG2, MemPerm, false);
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.cpp(58):    functionq_ = (Q2Way< FunctionStats >*) Memory::Alloc(size, MemTemp);
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.cpp(79):    buffer_ = (byte_t*) Memory::Alloc(SysSocket::MaxMsgSize, MemDyn);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(71):    buff_ = (byte_t*) Memory::Alloc(BuffSize(buffSize_), MemDyn);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(90):    buff_ = (byte_t*) Memory::Alloc(BuffSize(buffSize_), MemDyn);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(130):       auto buff = (byte_t*) Memory::Realloc(buff_, BuffSize(newSize));
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp(58):          auto netaddr = (sockaddr_in*) info->ai_addr;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp(114):       ((sockaddr*) &addr, sizeof(addr), buff1, 64, buff2, 64, 0) == 0)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(100):    if(bind(socket_, (sockaddr*) &addr, sizeof(addr)) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(209):       (const char*) &rxSize, sizeof(rxSize)) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(216):       (char*) &max, &maxsize) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(226):       (const char*) &txSize, sizeof(txSize)) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(233):       (char*) &max, &maxsize) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(44):    auto socket = accept(Socket(), (sockaddr*) &peer, &peersize);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(88):    if(connect(Socket(), (sockaddr*) &peer, sizeof(peer)) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(149):    if(getsockname(Socket(), (sockaddr*) &host, &hostsize) != 0)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(257):    if(getpeername(Socket(), (sockaddr*) &peer, &peersize) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(313):       (const char*) &alive, sizeof(alive)) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(323):       (char*) &val, &valsize) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(48):          (char*) &max, &maxsize) == SOCKET_ERROR)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(77):       size, 0, (sockaddr*) &peer, &peersize);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(115):       size, 0, (sockaddr*) &peer, peersize);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(752):    ((ProtocolSM*) p)->Kill();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(773):             else if(((AnalyzeSapEvent*) nextEvent)->CurrInitiator() != nullptr)
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(775):             else if(((AnalyzeSapEvent*) nextEvent)->CurrSsm() != nullptr)
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(177):    auto pptr = (TlvParmPtr) (layout->bytes + layout->header.length);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(286):    return (Fence*) fence;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(444):    pit.pptr = (TlvParmPtr) &pit.mptr->bytes[nextIndex];
W005 Functional cast
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(50):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(305):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(344):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/cb/DigitString.cpp(139):       auto rc = AddDigit(Digit(ds.digits_[i]));
  C:/Users/gregu/Documents/rsc/rsc/cb/DigitString.cpp(171):    if(i < Size()) return Digit(digits_[i]);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(723):       *stream << setw(12) << LineType(t)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(735):          *stream << setw(6) << WarningCode(Warning(w)) << setw(6)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(736):             << WarningCounts_[w] << spaces(2) << Warning(w) << CRLF;
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(261):       if(Attrs[i].symbol.compare(sym) == 0) return Cxx::Operator(i);
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(313):          oper = Cxx::Operator(i);
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(364):       Attrs[ValidIntDigits[i]].intValue = int8_t(i);
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(370):       Attrs[ValidHexDigits[i]].hexValue = int8_t(h);
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(375):       Attrs[ValidOctDigits[i]].octValue = int8_t(i);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(697):    *cli.obuf << ": " << Warning(log.warning);
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(148):          type = LibTokenType(i);
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(1178):          oper = Cxx::Operator(match->second);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(447): ipport_t BotTcpService::Port() const { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(63):    Id Tid() const { return Id(tid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.cpp(106):          return RestartLevel(errval_);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(485):       rc = nbt->SelectFaction(Faction(id), TraceDefault);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(693):       rc = nbt->SelectFaction(Faction(id), TraceExcluded);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1090):       rc = nbt->SelectFaction(Faction(id), TraceIncluded);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2509):       auto heap = Memory::Heap(MemoryType(m));
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(207):             stream << Faction(f) << CRLF;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(88):    ObjectPoolId Pid() const { return ObjectPoolId(pid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(362):          Truncate(TimeField(int(field) + 1));
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(545):          return OutOfRange(TimeField(f));
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(157):    Id Tid() const { return Id(tid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.cpp(38):    size_(int16_t(size)),
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3179):    pool->time_[id1].Truncate(TimeField(field - 1));
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3210):    pool->time_[id1].Round(TimeField(field - 1), interval);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(63):    Id Fid() const { return Id(fid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(87):    Id Fid() const { return Id(fid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(69):    Faction GetFaction() const { return Faction(faction_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.cpp(92):       auto p = reg->Pool(Faction(id));
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(79):    Id Pid() const { return Id(pid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(71):    Id Prid() const { return Id(prid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(701):       auto pool = reg->Pool(Faction(sc));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(143):          stream << strClass(reg->GetService(ServiceId(cid_)), false);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(148):          stream << strClass(reg->GetFactory(FactoryId(cid_)), false);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(462):    width -= col_t(label.size());
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(59):    Id Sid() const { return Id(sid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(75):    Id Sid() const { return Id(sid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(54):    Id Stid() const { return Id(stid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(59):    virtual ipport_t Port() const override { return ipport_t(port_); }
W006 reinterpret_cast
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(70):    auto pptr = reinterpret_cast< TlvParmPtr >(sbuff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(71):    auto phi = reinterpret_cast< PotsHeaderInfo* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(490):    auto fake = reinterpret_cast< const TrafficCall* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp(97):    reinterpret_cast< const DigitString* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.cpp(134):    reinterpret_cast< const CauseInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.cpp(120):    reinterpret_cast< const ProgressInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(471):    reinterpret_cast< const RouteResult* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDir.cpp(65):    auto fake = reinterpret_cast< const CodeDir* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(597):    auto fake = reinterpret_cast< const CodeFile* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(281):    auto fake = reinterpret_cast< const LibrarySet* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(225):    auto em = reinterpret_cast< EM_Message* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(548):    auto& dm = reinterpret_cast< const DM_Message& >(message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(549):    auto tokens = reinterpret_cast< const Token* >(&dm.tokens);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(679):    auto& em = reinterpret_cast< const EM_Message& >(message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(1415):       auto& rm = reinterpret_cast< const RM_Message& >(message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(2253):    auto bm = reinterpret_cast< DipMessage* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(2326):    auto im = reinterpret_cast< IM_Message* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(2483):    auto dm = reinterpret_cast< DM_Message* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(2487):    message.get_tokens(reinterpret_cast< Token* >(&dm->tokens), count);
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.cpp(192):    auto msg = reinterpret_cast< BM_Message* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.cpp(220):    auto message = reinterpret_cast< const DipMessage* >(ipb->HeaderPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.cpp(102):       auto message = reinterpret_cast< const DipMessage* >(buff_->HeaderPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.cpp(131):    return reinterpret_cast< DipHeader* >(buff_->HeaderPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(61):       reinterpret_cast < const IM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(64):       reinterpret_cast < const RM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(67):       reinterpret_cast < const DM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(70):       reinterpret_cast < const FM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(73):       reinterpret_cast < const EM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(76):       reinterpret_cast < const BM_Message* >(this)->Display(stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(202):       auto header = reinterpret_cast< const DipHeader* >(source);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(213):       auto header = reinterpret_cast< const DipHeader* >(payload);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(234):    auto msg = reinterpret_cast< DipHeader* >(buff.PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(240):       auto im = reinterpret_cast< IM_Message* >(src);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(248):       auto dm = reinterpret_cast< DM_Message* >(src);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(259):       auto em = reinterpret_cast< EM_Message* >(src);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(288):    auto msg = reinterpret_cast< DipHeader* >(buff.PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(297):       auto rm = reinterpret_cast< RM_Message* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(308):       auto dm = reinterpret_cast< DM_Message* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(319):       auto em = reinterpret_cast< EM_Message* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(342):    auto header = reinterpret_cast< const DipHeader* >(payload);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(370):    auto msg = reinterpret_cast< BM_Message* >(buff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.cpp(64):    auto fake = reinterpret_cast< const Circuit* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.cpp(118):    reinterpret_cast< const MediaInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp(575):       auto cxi = reinterpret_cast< MediaInfo* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.cpp(65):    auto fake = reinterpret_cast< const Tone* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp(133):    auto obj = reinterpret_cast< ObjectStruct* >(this);
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp(161):    auto obj = reinterpret_cast< const ObjectStruct* >(this);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.cpp(137):    auto fake = reinterpret_cast< const CfgParm* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.cpp(90):    auto fake = reinterpret_cast< const CfgTuple* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.cpp(75):    auto fake = reinterpret_cast< const Class* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.cpp(79):    auto& commands = reinterpret_cast< Registry< CliCommand >& >(Parms());
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.cpp(159):    auto& commands = reinterpret_cast< const Registry< CliCommand >& >(Parms());
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.cpp(103):    auto fake = reinterpret_cast< const CliIncrement* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.cpp(96):    auto fake = reinterpret_cast< const CliParm* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.cpp(64):    auto fake = reinterpret_cast< const Module* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.cpp(141):    auto obj = reinterpret_cast< ObjectStruct* >(this);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(112):       reinterpret_cast< word* >(&pool->targSegments_), 0,
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(476):    auto fake = reinterpret_cast< const ObjectPool* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.cpp(116):    auto fake = reinterpret_cast< const Pooled* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(69):    auto fake = reinterpret_cast< const PosixSignal* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.cpp(89):    auto fake = reinterpret_cast< const Statistic* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.cpp(81):    auto fake = reinterpret_cast< const StatisticsGroup* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.cpp(100):    auto fake = reinterpret_cast< const Symbol* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.cpp(33):    auto bytes = reinterpret_cast< uint8_t* >(&value);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1170):    auto fake = reinterpret_cast< const Thread* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.cpp(67):    auto fake = reinterpret_cast< const Tool* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.cpp(80):    auto fake = reinterpret_cast< const FunctionStats* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1325):    auto fake = reinterpret_cast< const Q1WayItem* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1845):    auto fake = reinterpret_cast< const Q2WayItem* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2406):    auto fake = reinterpret_cast< const RegistryItem* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3640):    auto p = reinterpret_cast< char* >(BAD_POINTER);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(276):    auto fake = reinterpret_cast< const IpPort* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.cpp(69):    auto fake = reinterpret_cast< const IpService* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(239):    auto rcvd = recv(Socket(), reinterpret_cast< char* >(buff), size, 0);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(284):    auto sent = send(Socket(), reinterpret_cast< const char* >(data), size, 0);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(76):    auto rcvd = recvfrom(Socket(), reinterpret_cast< char* >(buff),
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(114):    auto sent = sendto(Socket(), reinterpret_cast< const char* >(data),
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.cpp(88):    auto fake = reinterpret_cast< const PotsFeature* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.cpp(97):    auto fake = reinterpret_cast< const PotsFeatureProfile* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.cpp(86):    auto fake = reinterpret_cast< const PotsProfile* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(577):    reinterpret_cast< const PotsFacilityInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(746):    reinterpret_cast< const PotsHeaderInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(867):    reinterpret_cast< const PotsRingInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(955):    reinterpret_cast< const PotsScanInfo* >(bytes)->Display(stream, prefix);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(573):    auto fake = reinterpret_cast< const Context* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(886):             auto toi = reinterpret_cast< TimeoutInfo* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(202):    auto fake = reinterpret_cast< const Factory* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.cpp(210):    auto fake = reinterpret_cast< const Initiator* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(187):          reinterpret_cast< word* >(&poolSize_), 1,
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(227):    auto fake = reinterpret_cast< const InvokerPool* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.cpp(124):    auto fake = reinterpret_cast< const InvokerThread* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.cpp(102):    auto fake = reinterpret_cast< const Parameter* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(92):    auto fake = reinterpret_cast< const Protocol* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.cpp(77):    auto header = reinterpret_cast< const MsgHeader* >(source);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(64):       { return reinterpret_cast< MsgHeader* >(HeaderPtr()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.cpp(283):    auto fake = reinterpret_cast< const Service* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.cpp(77):    auto fake = reinterpret_cast< const Signal* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(190):    auto fake = reinterpret_cast< const State* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.cpp(191):    auto fake = reinterpret_cast< const Timer* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.cpp(119):    auto toi = reinterpret_cast< const TimeoutInfo* >(bytes);
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.cpp(142):          auto psm = reinterpret_cast< const Base* >(t->Psm());
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.cpp(154):          auto psm = reinterpret_cast< const Base* >(t->Psm());
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(67):    auto encap = reinterpret_cast< const TlvMsgLayout* >(parm.bytes);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(512):    auto encap = reinterpret_cast< TlvMsgLayout* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(265):       { return reinterpret_cast< TlvMsgLayout* >(Buffer()->HeaderPtr()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.cpp(69):       auto pptr = reinterpret_cast< TlvParmPtr >(&bytes[index]);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(96):    auto pptr = reinterpret_cast< TlvParmPtr >(sbuff->PayloadPtr());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(97):    auto phi = reinterpret_cast< PotsHeaderInfo* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1464):          auto ring = reinterpret_cast< PotsRingInfo* >(pptr->bytes);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(85):    auto fake = reinterpret_cast< const PotsTreatmentQueue* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(206):    auto fake = reinterpret_cast< const PotsTreatment* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.cpp(88):    auto fake = reinterpret_cast< const MscAddress* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.cpp(99):    auto fake = reinterpret_cast< const MscContext* >(&local);
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.cpp(92):    auto fake = reinterpret_cast< const MscContextPair* >(&local);
W007 Cast down the inheritance hierarchy
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(139):    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(151):    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(172):    auto& pmsg = static_cast< Pots_NU_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(182):    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(68):    auto sbuff = static_cast< SbIpBuffer* >(buff.get());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp(114):    auto& tlvmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp(165):    auto& tlvmsg = static_cast< const TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(51):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(53):    auto& bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(79):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(80):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(82):    auto&         bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(136):    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(137):    auto       msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(139):    auto&      bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(181):    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(182):    auto       msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(184):    auto&      bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(215):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(216):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(218):    auto&         bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(486):    auto&       tlvmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(516):    auto&        tlvmsg = static_cast< const TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(828):       if(m->GetSignal() == sid) return static_cast< CipMessage* >(m);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(862):    auto&         tmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(992):    auto&         tmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1390):    auto& tmsg = static_cast< const CipMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1395):    auto fac = static_cast< SsmFactory* >(reg->GetFactory(rte->selector));
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(405):    auto& rre = static_cast< BcRemoteReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(920):       auto fac = static_cast< BcFactory* >(reg->GetFactory(route_.selector));
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(423):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(424):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(426):    auto&         pssm = static_cast< ProxyBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(463):    auto& ppe = static_cast< ProxyBcProgressEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(472):       auto& pssm = static_cast< ProxyBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(504):    auto& pssm = static_cast< ProxyBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(505):    auto ppsm = static_cast< ProxyBcPsm* >(Context::ContextPsm());
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(624):    auto pssm = static_cast< ProxyBcSsm* >(RootSsm());
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(782):          return static_cast< ProxyBcPsm* >(p);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(818):          ppsm = static_cast< ProxyBcPsm* >(psm);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1044):    auto& tmsg = static_cast< const CipMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1049):    auto fac = static_cast< SsmFactory* >(reg->GetFactory(rte->selector));
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(84):          auto base = static_cast< const Class* >(*b);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(217):       auto base = static_cast< const Class* >(*b);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(249):                auto type = static_cast< const Typedef* >(*item2);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(272):          auto type = static_cast< const Typedef* >(*item1);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(520):    affecterIds_ = static_cast< CodeFileSet* >(asSet)->Set();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2423):    auto& affecterIds = static_cast< CodeFileSet* >(affecterSet)->Set();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2561):       auto base = static_cast< const Class* >(*b);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(81):    auto curr = static_cast< CodeFileSet* >(Users(true));
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(93):       curr = static_cast< CodeFileSet* >(prev->Users(true));
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(113):    auto curr = static_cast< CodeFileSet* >(UsedBy(true));
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(125):       curr = static_cast< CodeFileSet* >(prev->UsedBy(true));
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(446):    auto& dirSet = static_cast< const CodeDirSet* >(that)->Set();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(478):    auto abSet = static_cast< CodeFileSet* >(this->AffectedBy());
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(479):    auto asSet = static_cast< CodeFileSet* >(this->Affecters());
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(590):       currCount = static_cast< CodeFileSet* >(nbSet)->Set().size();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(622):       currCount = static_cast< CodeFileSet* >(nsSet)->Set().size();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(657):    auto order = static_cast< CodeFileSet* >(affects)->SortInBuildOrder();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.cpp(64):    auto that = static_cast< CodeSet* >(rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.cpp(100):    auto that = static_cast< const CodeSet* >(rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.cpp(137):    auto that = static_cast< const CodeSet* >(rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.cpp(151):    auto that = static_cast< const CodeSet* >(rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(581):       if(static_cast< const Function* >(item)->IsVirtual())
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(211):          static_cast< const Function* >(item)->IsInline())
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(223):          auto spec = static_cast< ClassInst* >(usingClass)->GetSpec();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1034):    auto area = static_cast< CxxArea* >(GetScope());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1037):    if(inst != nullptr) return static_cast< ClassInst* >(inst);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1054):          auto c = static_cast< Class* >(*s);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(2004):       auto func = static_cast< const Function* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(2030):       auto func = static_cast< const Function* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(845):       const { return static_cast< Namespace* >(GetScope()); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp(872):       auto macro = static_cast< Macro* >(ref_);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp(885):       auto macro = static_cast< Macro* >(ref_);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(1418):       auto thisClass = static_cast< Class* >(thisRoot);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(1426):             auto thatClass = static_cast< Class* >(thatRoot);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(1567):    if(AutoType_.SetAutoTypeOn(*static_cast< FuncData* >(item)))
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(1611):    auto ref = static_cast< CxxNamed* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(1776):          static_cast< Class* >(root)->BlockCopied(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(399):          space = static_cast< Namespace* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(423):          cls = static_cast< Class* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(477):          item = static_cast< Enum* >(item)->FindEnumerator(name);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(488):             auto tdef = static_cast< Typedef* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(493):             item = static_cast< CxxScoped* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(505):             item = static_cast< CxxScoped* >(ref);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(782):    return static_cast< Class* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(1990):          ref = static_cast< ClassInst* >(cls)->FindTemplateAnalog(ref);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2000):       ref = static_cast< Function* >(ref)->FindRootFunc();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(655):       auto cls = static_cast<const Class*>(scope);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1308):    auto cls = static_cast< Class* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1375):          auto op = static_cast< Operation* >(expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1661):       if(anon) StackArg::SetAutoTypeFor(static_cast< FuncData& >(*next_));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1707):    auto data = static_cast< FuncData* >(next_.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(2663):       if(!static_cast< Function* >(item)->virtual_)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3108):             static_cast< ClassData* >(data)->SetInit(m->get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3320):    return static_cast< Function* >((*cti)->FindInstanceAnalog(this));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4568):                auto item = static_cast< CxxNamed* >(args.front().item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4651):       auto func = static_cast< ClassInst* >(cls)->FindTemplateAnalog(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4652):       if(func != nullptr) ++static_cast< Function* >(func)->calls_;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(92):          auto func = static_cast< Function* >(GetScope());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(264):    GetClass()->AddSubclass(static_cast< Class* >(Context::Scope()));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(298):    return static_cast< Class* >(name_->GetReferent());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1431):          auto tf = (*t)->FindFriend(static_cast< const CxxScope* >(ref));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1581):          space = static_cast< Namespace* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1594):          cls = static_cast< Class* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1633):             auto tdef = static_cast< Typedef* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1638):             item = static_cast< CxxScoped* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1913):       static_cast< CxxArea* >(scope)->AddFunc(func);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(384):    return static_cast< Macro* >(macros.front());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(423):       if((*s)->ScopedName(false) == name) return static_cast< CxxScope* >(*s);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(431):       if((*c)->ScopedName(false) == name) return static_cast< CxxScope* >(*c);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(439):       if(pos != string::npos) return static_cast< CxxScope* >(*s);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(445):       if(pos != string::npos) return static_cast< CxxScope* >(*c);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(420):    auto oper = static_cast< Operation* >(item.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(446):          auto ante = static_cast< Operation* >(prev.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(498):       auto oper = static_cast< Operation* >(item.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(531):    auto oper = static_cast< Operation* >(prev.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(560):       auto oper = static_cast< Operation* >(item.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(601):    auto oper = static_cast< Operation* >(item.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(624):       auto ante = static_cast< Operation* >(prev.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(720):    Context::PushOp(static_cast< Operation* >(StartOfExpr.get()));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1149):       inClass = static_cast< Class* >(inRoot);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1154):       outClass = static_cast< Class* >(outRoot);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1179):    auto call = static_cast< Operation* >(args_.front().get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1575):       func = static_cast< Function* >(proc.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1594):       cls = static_cast< Class* >(proc.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1691):    auto cls = static_cast< Class* >(arg.item->Root());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1741):       auto newCall = static_cast< Operation* >(args_.front().get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1761):    auto cls = static_cast< Class* >(spec.item->Root());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1783):       auto ctorCall = static_cast< Operation* >(args_[2].get());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1807):       cls = static_cast< Class* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1991):       area = static_cast< Class* >(targ);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(1993):       static_cast< Class* >(targ)->Instantiate();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(2332):    auto cls = static_cast< Class* >(root);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(2371):       static_cast< QualName* >(arg2.item)->MemberAccessed(cls, mem);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(2394):          mem = static_cast< Function* >(mem)->InstantiateFunction(tmplt);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(231):    auto defn = static_cast< const Function* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(364):    DebugFtCode(static_cast< const Function* >(log.item), defn, call);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1035):    auto etor = static_cast< const Enumerator* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1077):    auto eNum = static_cast< const Enum* >(etor->AutoType());
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1353):    auto func = static_cast< const Function* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1428):    auto cls = static_cast< const Class* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2299):    DebugFtCode(static_cast< const Function* >(log.item), defn, call);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2934):       ns = static_cast< const Namespace* >(ref)->OuterSpace();
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(3326):    auto func = static_cast< const Function* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(3450):    auto defn = static_cast< const Function* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(3562):    auto func = static_cast< const Function* >(log.item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(1812):          auto def = static_cast< Define* >(item);
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(1816):             auto code = const_cast< string* >(source_);
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.cpp(95):       (static_cast< CfgStrParm* >(reg->FindParm("SourcePath")));
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(365):    auto op = static_cast< Operation* >(call.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(618):    auto brace = static_cast< BraceInit* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(691):    auto cast = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(730):    auto c = static_cast< Catch* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(828):    static_cast< ClassData* >(data.get())->SetMutable(mute);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(829):    static_cast< ClassData* >(data.get())->SetWidth(width);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(989):    auto cond = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1268):    auto cast = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1375):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1400):    auto delOp = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1428):    auto d = static_cast< Do* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1633):    auto f = static_cast< For* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1734):       static_cast< FuncData* >(data.get())->SetExpression(expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1784):          curr = static_cast< FuncData* >(data.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(1790):          curr = static_cast< FuncData* >(subseq.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2060):             static_cast< If* >(first)->SetElseIf();
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2066):    auto i = static_cast< If* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2228):    auto inner = static_cast< Namespace* >(outer)->EnsureNamespace(name);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2270):    auto newOp = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2345):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2733):    static_cast< Return* >(statement.get())->AddExpr(expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2779):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2927):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(2953):    auto s = static_cast< Switch* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(3036):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(3072):    auto t = static_cast< Try* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(3131):    auto op = static_cast< Operation* >(token.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(3376):    auto w = static_cast< While* >(statement.get());
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp(3760):          auto op = static_cast< Operation* >(token)->Op();
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.cpp(210):    DipIpBufferPtr ipb(static_cast< DipIpBuffer* >(msg));
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(283):    auto dipbuff = static_cast< DipIpBuffer* >(&buff);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(338):    DipIpBufferPtr dipbuff(static_cast< DipIpBuffer* >(buff.release()));
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp(253):    if(root->Sid() != TestServiceId) return static_cast< MediaSsm* >(root);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.cpp(94):       auto mpsm = static_cast< MediaPsm* >(psm);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.cpp(118):       auto mpsm = static_cast< MediaPsm* >(psm);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.cpp(79):    auto& commands = reinterpret_cast< Registry< CliCommand >& >(Parms());
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.cpp(159):    auto& commands = reinterpret_cast< const Registry< CliCommand >& >(Parms());
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.cpp(85):       auto req = static_cast< StreamRequest* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(218):       auto req = static_cast< FileRequest* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(91):       auto curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(125):       auto curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(189):                   auto last = static_cast< const FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(266):       auto curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(305):          curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(373):       curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(426):          auto curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(491):          auto curr = static_cast< FunctionTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.cpp(109):       auto req = static_cast< StreamRequest* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.cpp(66):       auto curr = static_cast< MemoryTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.cpp(62):       (static_cast< CfgFileTimeParm* >(reg->FindParm("StatsFileName")));
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.cpp(198):             auto ft = static_cast<FunctionTrace*>(rec);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.cpp(68):    return static_cast< NtTestData* >(data);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(310):    bool alive = static_cast< const TcpIpService* >(service)->Keepalive();
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(173):    auto registrant = static_cast< SysTcpSocket* >(ipPort_->GetSocket());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(183):    auto svc = static_cast< const TcpIpService* >(ipPort_->GetService());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(283):    auto registrant = static_cast< SysTcpSocket* >(ipPort_->GetSocket());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(446):    auto sock = static_cast< SysTcpSocket* >(socket);
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp(65):    auto thread = static_cast< TcpIoThread* >(GetThread());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp(70):       thread = static_cast< TcpIoThread* >(CreateIoThread());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp(76):    auto svc = static_cast< const TcpIpService* >(GetService());
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp(106):    auto svc = static_cast< const TcpIpService* >(GetService());
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.cpp(108):    auto socket = static_cast< SysUdpSocket* >(ipPort_->GetSocket());
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.cpp(112):       auto svc = static_cast< const UdpIpService* >(ipPort_->GetService());
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.cpp(243):       auto socket = static_cast< SysUdpSocket* >(ipPort_->GetSocket());
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.cpp(57):    auto svc = static_cast< const UdpIpService* >(GetService());
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(443):       auto mep = static_cast< MediaEndpt* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(592):    auto&            pmsg = static_cast< PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(653):    auto&             pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(760):    auto&          pmsg = static_cast< PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(786):    auto&           pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(880):    auto&         pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(968):    auto&         pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(763):                inv = static_cast< InvokerThread* >(Thread::RunningThread());
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(882):             (m)->FindParm(Parameter::Timeout);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(182):    cfgInvokers_.reset(static_cast< CfgIntParm* >(reg->FindParm(parmKey)));
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(535):       auto inv = static_cast< InvokerThread* >(Thread::RunningThread());
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.cpp(82):    static_cast< MsgFactory* >(fac)->ProcessIcMsg(msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(77):    locAddr_.sbAddr_.fid = static_cast< ProtocolSM& >(upper).GetFactory();
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(150):    return static_cast< PsmFactory* >(fac)->AllocIcPsm(msg, *this);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(214):    auto port = static_cast< MsgPort* >(pool->BidToObj(locAddr.bid));
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(271):       static_cast< PsmFactory* >(fac)->PortAllocated(*this, msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.cpp(434):       auto psm = static_cast< ProtocolSM* >(layer);
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.cpp(48):    ctx_ = static_cast< SsmContext* >(Context::RunningContext());
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.cpp(48):    auto pid = ssm.CalcPort(static_cast< const AnalyzeMsgEvent& >(currEvent));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.cpp(124):    auto& fte = static_cast< ForceTransitionEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.cpp(138):    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(819):       auto msg = static_cast< Message* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(906):       auto port = static_cast< MsgPort* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1118):       auto psm = static_cast< ProtocolSM* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1350):       auto ssm = static_cast< ServiceSM* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1563):       auto tmr = static_cast< Timer* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.cpp(108):    SbIpBufferPtr sbbuff(static_cast< SbIpBuffer* >(buff.release()));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.cpp(59):       (static_cast< CfgIntParm* >(reg->FindParm("NoIngressQueueLength")));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.cpp(71):       (static_cast< CfgIntParm* >(reg->FindParm("NoIngressMessageCount")));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp(217):       auto port = static_cast< MsgPort* >(obj);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp(277):    auto psm = static_cast< ProtocolSM* >(NextUsed(psmToAudit_));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp(294):       psm = static_cast< ProtocolSM* >(NextUsed(psmToAudit_));
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(355):          bt = static_cast< BuffTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(857):       curr_ = static_cast< const AnalyzeSapEvent& >(sxp).CurrEvent()->Eid();
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(860):       curr_ = static_cast< const AnalyzeSnpEvent& >(sxp).CurrEvent()->Eid();
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(887):    mod_((static_cast< const InitiationReqEvent& >(sip)).GetModifier())
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(457):             tid = static_cast< AnalyzeSapEvent* >(sapEvent)->GetTrigger();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(461):          modifierSsm = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrSsm();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(462):          currEvent = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrEvent();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(513):             tid = static_cast< AnalyzeSapEvent* >(sapEvent)->GetTrigger();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(519):          currEvent = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrEvent();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(521):             (sapEvent)->CurrInitiator();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(773):             else if(((AnalyzeSapEvent*) nextEvent)->CurrInitiator() != nullptr)
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(775):             else if(((AnalyzeSapEvent*) nextEvent)->CurrSsm() != nullptr)
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(879):          initEvent = static_cast< InitiationReqEvent* >(nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(883):             initEvent->SetSapEvent(static_cast< AnalyzeSapEvent& >(sapEvent));
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(946):                (initEvent)->GetModifier();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(986):    auto& initEvent = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.cpp(97):    return static_cast< SsmFactory* >(fac)->AllocRoot(msg, psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.cpp(73):    auto& tmsg = static_cast< const TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(61):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(64):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(101):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(117):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(119):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(139):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(154):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(155):    auto& ode = static_cast< BcOriginationDeniedEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(170):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(172):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(178):          auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(199):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(226):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(256):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(273):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(297):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(312):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(326):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(341):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(356):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(358):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(377):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(398):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(413):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(429):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(446):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(447):    auto& rre = static_cast< BcRemoteReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(464):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(478):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(480):    auto cmsg = static_cast< CipMessage* >(npsm->FirstRcvdMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(510):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(525):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(526):    auto& tde = static_cast< BcTerminationDeniedEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(541):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(542):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(563):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(582):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(597):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(599):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(624):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(653):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(668):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(684):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(700):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(702):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(723):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(738):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(754):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(756):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(773):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(799):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(818):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(833):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(852):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(867):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(883):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(885):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(894):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(921):    auto& ate = static_cast< BcApplyTreatmentEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(922):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(960):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(976):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(992):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(993):    auto& lre = static_cast< BcLocalReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1008):    auto& cte = static_cast< BcReleaseCallEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1009):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1043):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1064):    auto& rue = static_cast< ProxyBcReleaseUserEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(73):          auto& ppsm = static_cast< PotsCallPsm& >(psm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(78):          auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(port));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(86):       SetNPsm(static_cast< CipPsm& >(psm));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(90):       SetUPsm(static_cast< MediaPsm& >(psm));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(130):    auto pmsg = static_cast< PotsMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(84):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(84):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(112):    auto& pmsg = static_cast< const Pots_UN_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(193):       auto pmsg = static_cast< const PotsMessage* >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(195):       cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(199):       auto ppsm = static_cast < const PotsCallPsm* >(port.Upper());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(200):       cct = static_cast< PotsCircuit* >(tsw->GetCircuit(ppsm->TsPort()));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(263):    auto& icmsg = static_cast< const PotsMessage& >(msg1);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(94):    auto sbuff = static_cast< SbIpBuffer* >(buff.get());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(115):    auto prof = static_cast< PotsCircuit* >(cct)->Profile();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(105):       return static_cast< PotsCallPsm* >(psm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(177):    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(212):    auto& pmsg = static_cast< Pots_NU_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(206):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(266):       auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(289):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(305):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.cpp(58):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.cpp(60):    auto cfbp = static_cast< PotsCfbFeatureProfile* >(prof->FindFeature(CFB));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.cpp(58):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.cpp(60):    auto cfnp = static_cast< PotsCfnFeatureProfile* >(prof->FindFeature(CFN));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.cpp(58):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.cpp(60):    auto cfup = static_cast< PotsCfuFeatureProfile* >(prof->FindFeature(CFU));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(293):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(298):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(300):       auto& cssm = static_cast< PotsCfxSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(321):    auto& cssm = static_cast< PotsCfxSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(322):    auto& pssm = static_cast< PotsBcSsm& >(*cssm.Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(374):       auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(401):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(483):    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(485):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(498):          cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(520):          cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(534):       cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(540):       cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFB));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(546):       cfnp = static_cast< PotsCfnFeatureProfile* >(prof->FindFeature(CFN));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(580):    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(583):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(638):       auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(645):    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(660):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(668):       auto& snp = static_cast< AnalyzeSnpEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(686):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(447):    PotsMuxSsm* Mux() const { return static_cast< PotsMuxSsm* >(Parent()); }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1165):    auto hldNPsm = static_cast< PotsMuxPsm* >(Context::ContextPsm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1202):          auto bcUPsm = static_cast< PotsCallPsm* >(psm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1272):    auto msg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1299):    auto npsm = static_cast< PotsMuxPsm* >(Context::ContextPsm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1313):    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1379):    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1423):    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1972):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1973):    auto pmsg = static_cast< Pots_NU_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2002):    auto& mux = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2017):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2019):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2026):          auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2123):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2125):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2126):    auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2127):    auto npsm = static_cast< PotsMuxPsm* >(pmsg->Psm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2222):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2236):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2250):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2264):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2280):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2295):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2309):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2324):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2339):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2340):    auto& are = static_cast< PotsCwmActiveReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2355):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2356):    auto& ire = static_cast< PotsCwmInactiveReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2370):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(2392):    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(290):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(617):    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(622):       auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(623):       auto ate = static_cast< BcApplyTreatmentEvent* >(sap.CurrEvent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(640):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(648):       auto& snp = static_cast< AnalyzeSnpEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(686):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(716):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(811):    auto& init = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(813):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(908):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(930):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(961):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(963):    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(969):          auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(992):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1017):    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1018):    auto& pssm = static_cast< PotsBcSsm& >(*ssm.Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1038):    auto& relevt = static_cast< PotsCwtReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1039):    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1043):       auto pssm = static_cast< PotsBcSsm* >(cwtssm.Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1062):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1064):    auto& cwtssm = static_cast< PotsCwtSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1068):       auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1108):    auto& cwtssm = static_cast< PotsCwtSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1109):    auto& relevt = static_cast< PotsCwtReleaseEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1111):    auto pssm = static_cast< PotsBcSsm* >(cwtssm.Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1157):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(131):    auto& pssm = static_cast< BcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(133):    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(85):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(175):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(181):       auto htlp = static_cast< PotsHtlFeatureProfile* >(prof->FindFeature(HTL));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(195):    auto& pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(246):    auto& pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(249):    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(361):    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(414):    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(747):    auto& npsm = static_cast< PotsMuxPsm& >(psm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(750):    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(port));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(823):    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(891):    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(998):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(999):    auto pmsg = static_cast< Pots_NU_Message* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1021):    auto& mux = static_cast< PotsMuxSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1052):    auto& mux = static_cast< PotsMuxSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1053):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1076):    auto& mux = static_cast< PotsMuxSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(55):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(56):    auto msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(58):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(91):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(108):    auto msg = static_cast< CipMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(110):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(134):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(135):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(137):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(174):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(184):    auto upsm = static_cast< ProxyBcPsm* >(pssm.UPsm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(208):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(226):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(245):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(246):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(248):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(295):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(313):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(314):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(316):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(358):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(359):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(361):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(412):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(430):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(448):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(466):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(484):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(517):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(518):    auto upsm = static_cast< MediaPsm* >(Context::ContextPsm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(548):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(567):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(568):    auto upsm = static_cast< MediaPsm* >(Context::ContextPsm());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(598):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(618):    auto& cte = static_cast< BcReleaseCallEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(619):    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(83):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(255):    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(299):    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(329):    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(193):    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(195):    auto wmlp = static_cast< PotsWmlFeatureProfile* >(prof->FindFeature(WML));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(438):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(465):    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(467):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(472):    wmlp_ = static_cast< PotsWmlFeatureProfile* >(prof->FindFeature(WML));
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(544):    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(547):    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(607):       auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(627):    auto pssm = static_cast< PotsBcSsm* >(Parent());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(664):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(669):       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(671):       auto& wssm = static_cast< PotsWmlSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(692):    auto& wssm = static_cast< PotsWmlSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(693):    auto& pssm = static_cast< PotsBcSsm& >(*wssm.Parent());
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(151):          tt = static_cast< const TransTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(159):          auto mt = static_cast< const MsgTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(712):    auto rxnet = static_cast< const TransTrace* >(events_[index]);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(729):             trans = static_cast< const TransTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(741):             return static_cast< const MsgTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(758):    auto txmsg = static_cast< const MsgTrace* >(events_[index]);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(779):             trans = static_cast< const TransTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(786):             auto rxmsg = static_cast< const MsgTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(947):          tt = static_cast< const TransTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(983):             mt = static_cast< const MsgTrace* >(rec);
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(140):    auto ctx = static_cast< Context* >(pool->FirstUsed(bid));
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.cpp(69):    return static_cast< StTestData* >(data);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(505):    auto tpsm = static_cast< TestPsm* >(Psm());
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(522):    auto tssm = static_cast< TestSsm* >(RootSsm());
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(576):       if(p->GetFactory() == TestFactoryId) return static_cast< TestPsm* >(p);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(854):       SetTestPsm(static_cast< TestPsm* >(&psm));
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(976):    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(977):    auto tmsg = static_cast< TestMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1015):    auto tmsg = static_cast< TestMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1024):    auto apsm = static_cast< SsmFactory* >(afac)->AllocOgPsm(*amsg);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1035):    auto& tssm = static_cast< TestSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1053):    auto& tssm = static_cast< TestSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1072):    auto tmsg = static_cast< TestMessage* >(Context::ContextMsg());
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1073):    auto& tssm = static_cast< TestSsm& >(ssm);
W008 Cast removes const qualification
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(579):    LibrarySet* nbSet = (LibrarySet*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp(611):    LibrarySet* nsSet = (LibrarySet*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1279):    return const_cast< Class* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1402):    return static_cast< CxxScope* >(const_cast< Class* >(this));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(2000):       return const_cast< ClassInst* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(144):       override { return const_cast< CxxArea* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(448):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(484):       override { return const_cast< Class* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(882):       override { return const_cast< Namespace* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(978):    return const_cast< DataSpec* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(1396):    const_cast< DataSpec* >(this)->FindReferent();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2577):    return const_cast< TypeName* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(799):       override { return const_cast< QualName* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1264):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(2183):    return FoundFunc(const_cast< Function* >(this), args, match);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3284):    auto prev = const_cast< Function* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3463):       (const_cast< Function* >(this));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3717):    func->SetTemplate(const_cast< Function* >(this));
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(337):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1164):       const override { return const_cast< Function* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1250):    return (CxxToken*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1443):    return (CxxToken*) this;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1823):    const_cast< Friend* >(this)->FindReferent();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1842):    const_cast< Friend* >(this)->SetScope(decl->GetSpace());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1854):    const_cast< Friend* >(this)->SetScope(cls->GetScope());
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(160):    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(464):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(571):    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(992):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1069):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(308):    CxxToken* prev = const_cast< CxxToken* >(this);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(291):    virtual CxxToken* RootType() const { return const_cast< CxxToken* >(this); }
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(1816):             auto code = const_cast< string* >(source_);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(33):    return (void*) ((const_ptr_t) ptr2 - diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(40):    return (void*) ((const_ptr_t) ptr1 + diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp(98):       objects[count++] = const_cast< Base* >(this);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(841):    auto maxdiff = (ptrdiff_t) (blockSize_ * (ObjectsPerSegment - 1));
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(141):       (LPTHREAD_START_ROUTINE) entry,  // thread entry function
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(142):       (LPVOID) client,                 // argument to entry function
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(350):    return const_cast< MsgPort* >(this);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.cpp(698):    if(upper == nullptr) return const_cast< ProtocolSM* >(this);
W009 Pointer arithmetic
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(216):       dest = payload + received;
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(33):    return (void*) ((const_ptr_t) ptr2 - diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp(40):    return (void*) ((const_ptr_t) ptr1 + diff);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp(392):          auto dst = src + sizeof(FunctionTrace);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2682):    ptrdiff_t stacksize = &local - priv_->stackBase_;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(431):       next = (uword*) record + incr;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(462):       next = (uword*) record + incr;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.cpp(197):       source += rcvd;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(142):       Memory::Copy((buff_ + hdrSize_ + paySize), source, size);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(142):       Memory::Copy((buff_ + hdrSize_ + paySize), source, size);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(243):       bytes = buff_ + hdrSize_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(269):    bytes += hdrSize_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(103):    byte_t* PayloadPtr() const { return buff_ + hdrSize_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(177):    auto pptr = (TlvParmPtr) (layout->bytes + layout->header.length);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(285):    auto fence = layout->bytes + layout->header.length;
W015 #include not sorted in standard order
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(29): #include <dbghelp.h>
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(26): #include <windows.h>
  C:/Users/gregu/Documents/rsc/rsc/rsc/main.cpp(97): #include "AnModule.h"
W017 Add #include directive
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(1): "Debug.h"
W018 Remove #include directive
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(29): #include <vector>
  C:/Users/gregu/Documents/rsc/rsc/dip/BotType.h(21): #include "BaseBot.h"
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(19): #include "ConvoySubversion.h"
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.cpp(25): #include <sstream>
  C:/Users/gregu/Documents/rsc/rsc/nb/SysMemory.win.cpp(23): #include "SysMemory.h"
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(28): #include "Debug.h"
W020 Using statement in header
  C:/Users/gregu/Documents/rsc/rsc/an/AnIncrement.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(34): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(35): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(35): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(34): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.h(31): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.h(31): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(50): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(51): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(52): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(53): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcRouting.h(31): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(53): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h(31): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(32): using NodeBase::fixed_string;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(33): using NodeBase::Flags;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(36): using NodeBase::fixed_string;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(37): using NodeBase::SPACE;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(38): using NodeBase::word;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(38): using std::string;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(39): using NodeBase::word;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(38): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(39): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(40): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipTypes.h(28): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipTypes.h(29): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/StartupParameters.h(21): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(27): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(33): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MbPools.h(29): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(35): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(33): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h(31): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(37): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/Switch.h(37): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(38): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(33): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwCliParms.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(29): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(40): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(41): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCliParms.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(38): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.h(36): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h(29): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(30): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h(29): using namespace SessionTools;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(41): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h(36): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(46): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(47): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(48): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(49): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(43): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(45): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(30): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(43): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(46): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(47): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(34): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(40): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(34): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbCliParms.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(30): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h(28): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(30): using namespace NetworkBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(37): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(36): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTypes.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(35): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(38): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(36): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(29): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvIntParameter.h(36): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(36): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(28): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.h(28): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(42): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(43): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(30): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(45): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(46): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(28): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(28): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(44): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.h(30): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.h(31): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h(30): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h(31): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h(32): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(45): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(46): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(47): using namespace MediaBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(48): using namespace CallBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(29): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.h(27): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.h(41): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.h(42): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.h(54): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.h(55): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.h(33): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.h(34): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.h(34): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(29): using namespace NodeTools;
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.h(28): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(32): using namespace NodeBase;
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(33): using namespace SessionBase;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(43): using namespace SessionBase;
W022 Add using statement
  C:/Users/gregu/Documents/rsc/rsc/an/AnIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfIpService.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfIpService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcEvents.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcEvents.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcFactory.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcRouting.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/BcTriggers.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/DigitString.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cb/TestCallFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/cb/TestCallFactory.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1): std::string
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MbPools.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/Switch.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/NwCliParms.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.win.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCliParms.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeMsgEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSapEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSnpEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ForceTransitionEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/InitiationReqEvent.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbCliParms.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.h(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTypes.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcService.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcStates.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallIpService.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallIpService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.cpp(1): namespace CallBase::Cause
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.cpp(1): namespace CallBase::Cause
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(1): namespace CallBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(1): namespace MediaBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(1): namespace NodeTools
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1): namespace NetworkBase
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1): namespace NodeBase
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(1): namespace SessionBase
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(1): namespace NodeBase
W024 Add forward declaration
  C:/Users/gregu/Documents/rsc/rsc/dip/BotType.h(1): class Diplomacy::BaseBot
W026 Unused argument
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(347/3):       const CxxNamed* item, const CxxScope* scope) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(638/1):    static void Shutdown(NodeBase::RestartLevel level);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(642/1):    static void Startup(NodeBase::RestartLevel level) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(83/3):       const CxxNamed* item, const CxxScope* scope) const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1189/3):       (const std::string& fqName, size_t prefix, const CxxScope* scope) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(91/1):    virtual bool process_command_line_parameter(char token, std::string& value);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(91/2):    virtual bool process_command_line_parameter(char token, std::string& value);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(191/1):    virtual StartupResult initialise(const StartupParameters& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(234/1):    virtual void process_mis_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(264/1):    virtual void process_tme_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(273/1):    virtual void process_not_ccd_message(const TokenMessage& message,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(279/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(279/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(299/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(299/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(304/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(309/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(314/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(319/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(324/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(329/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(334/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(339/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(344/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(349/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(354/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(359/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(359/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(364/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(364/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(369/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(374/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(379/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(379/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(384/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(384/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(390/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(390/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(395/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(395/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(400/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(400/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(405/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(405/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(411/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(411/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(416/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(416/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(421/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(421/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(426/1):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(426/2):       (const TokenMessage& message, const TokenMessage& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(431/1):    virtual void process_unexpected_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(436/1):    virtual void process_unexpected_rej_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(441/1):    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(446/1):    virtual void process_unexpected_yes_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(451/1):    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(476/1):    virtual void process_mdf_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(480/1):    virtual void process_ord_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(484/1):    virtual void process_sco_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(488/1):    virtual void process_now_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(503/1):       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(503/2):       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(503/3):       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(513/1):    virtual void report_close(ProtocolError error);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(613/1):    void process_fm_message(const DipMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(109/1):    virtual void ProcessIcMsg(Message& msg);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(52/2): void SE_Handler(uint32_t errval, void* ex)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.h(38/1):    void Startup(RestartLevel level);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(353/2):       (BlockingReason why, fn_name_arg func) { return true; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(361/1):    virtual void ScheduledIn(fn_name_arg func) { }
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(132/3):       (IpBuffer& buff, byte_t* src, size_t size) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(137/1):    virtual void SocketFailed(SysSocket* socket) const { }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(87/1):       (PotsProfile& profile, CliThread& cli) const = 0;  //d
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(55/1):    virtual bool Deactivate(PotsProfile& profile);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(89/1):    virtual bool Unsubscribe(PotsProfile& profile);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(122/1):    static void Kill(fn_name_arg func, debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(127/1):    virtual Message* AllocOgMsg(SignalId sid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(174/1):    virtual ProtocolLayer* AllocLower(const Message* msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(300/1):    virtual void MsgHandled(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(306/1):    virtual void RestoreIcMsg(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(312/1):    virtual void RefreshMsg(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(50/1):    virtual Event* RaiseProtocolError(ProtocolSM& psm, ProtocolSM::Error err);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(81/2):    virtual EventHandler::Rc ProcessSnp(Event& currEvent, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(189/1):       (Event& currEvent, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(189/2):       (Event& currEvent, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(47/1):    virtual ProtocolSM* AllocOgPsm(const Message& msg) const;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(60/1):    explicit PotsCfxSsm(ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(434/2):    EventHandler::Rc ReleaseInactive(Cause::Ind cause, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(157/1):    PotsMuxSsm(const Message& msg, ProtocolSM& psm);
W027 Unused class
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(298): class CipUdpService : public UdpIpService
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(189): class ProxyBcDisconnecting : public BcDisconnecting
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(41): class MediaFailureEvent : public Event
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(39): class PooledClass : public Class
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(54):    class SigAlrm : public PosixSignal
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(68):    class SigBus : public PosixSignal
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(96):    class SigQuit : public PosixSignal
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(110):    class SigSys : public PosixSignal
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(124):    class SigVtAlrm : public PosixSignal
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(39): class TextTlvMessage : public TlvMessage
W028 Unused data
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(60):    static const ServicePortId NextPortId = FirstPortId + 1;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(216):    static const Id NextId        = FirstId + 4;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(300):    static const Id NextId              = FirstId + 7;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(385):    static const Id NextId          = FirstId + 3;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(169): extern const std::string SingleRule;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(579): extern const Flags NoLF_Mask;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(580): extern const Flags Last_Mask;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(584): extern const Flags Stats_Mask;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(162): constexpr ProtocolError IM_TIMEOUT = 0x01;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(163): constexpr ProtocolError IM_EXPECTED = 0x02;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(164): constexpr ProtocolError IM_WRONG_ENDIAN = 0x03;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(165): constexpr ProtocolError IM_WRONG_MAGIC_NUMBER = 0x04;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(166): constexpr ProtocolError IM_INCOMPATIBLE_VERSION = 0x05;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(167): constexpr ProtocolError IM_REPEATED = 0x06;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(168): constexpr ProtocolError IM_FROM_SERVER = 0x07;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(169): constexpr ProtocolError INVALID_MESSAGE_TYPE = 0x08;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(170): constexpr ProtocolError MESSAGE_TOO_SHORT = 0x09;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(171): constexpr ProtocolError DM_BEFORE_RM = 0x0A;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(172): constexpr ProtocolError RM_EXPECTED = 0x0B;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(173): constexpr ProtocolError RM_REPEATED = 0x0C;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(174): constexpr ProtocolError RM_FROM_CLIENT = 0x0D;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(175): constexpr ProtocolError DM_INVALID_TOKEN = 0x0E;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(197): constexpr BotEvent FIRST_BOT_BM_EVENT = 2;  // start of subclass events
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(212): constexpr category_t CATEGORY_NUMBER_MIN = 0x00;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(213): constexpr category_t CATEGORY_NUMBER_MAX = 0x3F;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(214): constexpr category_t CATEGORY_BRACKET = 0x40;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(217): constexpr category_t CATEGORY_ORDER = 0x43;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(219): constexpr category_t CATEGORY_RESULT = 0x45;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(222): constexpr category_t CATEGORY_COMMAND = 0x48;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(223): constexpr category_t CATEGORY_PARAMETER = 0x49;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(224): constexpr category_t CATEGORY_PRESS = 0x4A;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbAppIds.h(69): constexpr FlagId FirstAppDebugFlag = 8;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbCliParms.h(68): extern fixed_string NotImplementedExpl;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(181):    static const id_t LastNbIndex     = 3;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(50): constexpr uword UWORD_MAX = (sizeof(word) == 8 ? UINT64_MAX : UINT32_MAX);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(187):    static const id_t LastNtIndex = SortIndex;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(80):    static const id_t LastNtIndex    = FuncTraceScope;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(106):    static const Id LastId    = NextId + 9;  // range constant
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(134):    static const Id LastId   = NextId + 7;  // range constant
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(226):    static const Ind MaxInd         = UINT8_MAX;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(142):    static const PooledObjectId MaxId = 0x40000;  // 2^18 = 256K
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(57):    static const id_t LastSbIndex    = LastNwIndex + 9;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(86):    static const id_t LastSbIndex   = LastNwIndex + 6;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(115):    static const id_t LastSbIndex   = LastNwIndex + 5;
W029 Unused enum
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(89):    enum Location
W030 Unused enumerator
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(144):       Multiple   // two statements or more
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(62):       FIRST_BOT_SPECIFIC_ERROR
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(44):    DispOption_N  // number of reasons; can be used to extend this enum
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(74):    IdleFaction,         // idle thread (not used)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(58):       LowPriority,       // preemptable threads
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(91):       NotQueued,     // being built by a factory
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(92):       ContextQ,      // has arrived at a context
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(93):       PsmIncomingQ,  // has arrived at a PSM
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(94):       PsmOutgoingQ,  // has been sent by a PSM
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(95):       PsmPendingQ    // being built by a PSM
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(105):       IllegalSignal,   // illegal signal found              0000  sid
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(106):       IllegalParm,     // illegal parameter found          index  pid
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(107):       IncompleteParm,  // parameter too short              index  pid
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(108):       MissingParm,     // mandatory parameter missing       0000  pid
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(109):       Overflow,        // last parameter extends past end  index  pid
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(110):       Trampled         // last parameter trampled fence    index  pid
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(115):       StreamContainsIllegalParm,
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(95):       SignalUnknown,     // signal not recognized
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(97):       ParameterUnknown,  // parameter not recognized
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(98):       ParameterInvalid,  // parameter not valid for this signal
W032 Unused function
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(63):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(213):    Digit GetDigit(DigitCount i) const;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(182):    MediaInfo* AddMedia(const MediaInfo& media);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(249):    virtual void InjectFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(318):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(364):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(192):    explicit ProxyBcDisconnecting(ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(163):    static std::string Demangle(const std::string& s);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(133):    bool operator!=(const WarningLog& that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(135):    size_t Arrays() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(278):    bool operator!=(const StackArg& that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(498):    bool operator<(const SourceLoc& that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.h(83):    std::string& Prefix(std::string&& scope);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(373):       Tags& operator=(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(415):       Tags& operator=(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(249):    CodeLocation PrevPos(const CodeLocation& curr);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(111):    void set_report(bool onoff) { report_ = onoff; }
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(120):    void send_orders_to_server();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(124):    void send_nme(fixed_string name, fixed_string version);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(135):    bool map_requested() const { return map_requested_; }
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(143):    void send_broadcast_to_server(TokenMessage broadcast_message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(144):    void send_press_to_server(const TokenMessage& press_to,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(150):    void send_bm_message(const byte_t* payload, uint16_t length) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(117):       bool operator<(const Wakeup& that) const
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(64):    DipHeader* Header() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(251):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(75):    bool operator<(const Location& that) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(162):    static MapAndUnits* create_clone();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(166):    static void delete_clone(MapAndUnits*& clone);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(184):    bool set_hold_order(ProvinceId unit);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(185):    bool set_move_order(ProvinceId unit, Location dest);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(186):    bool set_support_to_hold_order(ProvinceId unit, ProvinceId client);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(187):    bool set_support_to_move_order
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(189):    bool set_convoy_order(ProvinceId unit, ProvinceId client, ProvinceId dest);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(192):    bool set_move_by_single_step_convoy_order
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(194):    bool set_disband_order(ProvinceId unit);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(195):    bool set_retreat_order(ProvinceId unit, Location dest);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(196):    void set_build_order(Location location);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(197):    bool set_remove_order(ProvinceId unit);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(198):    void set_waive_order();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(199):    void set_multiple_waive_orders(size_t waives);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(200):    void set_total_number_of_waive_orders(size_t waives);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(207):    Location find_adjustment(ProvinceId province) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(212):    bool cancel_remove_order(ProvinceId province);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(216):    bool unorder_adjustment(const TokenMessage& not_sub, PowerId power);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(220):    bool any_orders_entered() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(224):    void clear_all_orders();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(237):    size_t process_sub(const TokenMessage& sub, PowerId power, Token results[]);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(243):    bool get_variant_setting
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(248):    void build_now(TokenMessage& now) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(252):    void build_sco(TokenMessage& sco) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(272):    Location find_result_unit_initial_location(ProvinceId province,
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(283):    const LocationSet* get_destinations(ProvinceId province) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(289):       get_dislodged_unit_destinations(ProvinceId province) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(306):    void set_order_checking(bool on_submission, bool on_adjudication);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(310):    bool all_orders_received(PowerId power) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(314):    void adjudicate();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(319):    size_t get_adjudication_results(TokenMessage ord_messages[]) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(324):    bool apply_adjudication();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(332):    size_t get_centre_count(Token power) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(336):    size_t get_unit_count(Token power) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(48):    explicit TokenMessage(const Token* stream);
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(56):    TokenMessage(const TokenMessage& that);
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(91):    Token operator[](size_t index) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(140):    void set_as_ascii(const std::string& text);
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(170):    bool operator<(const TokenMessage& that) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.h(52):    size_t get_number_of_results() const;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(58):    StateId GetState() const { return state_; }
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(62):    virtual void SetState(StateId stid);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(72):    ProtocolSM* MgwPsm() const;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(78):    virtual void Deallocate();
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(87):    static void* operator new(size_t size);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(92):    explicit MediaEndpt(MediaPsm& psm);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(47):    MediaFailureEvent(ServiceSM& owner, MediaEndpt& mep);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(55):    MediaEndpt* Mep() const { return mep_; }
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(119):    MediaEndpt* Mep() const { return mep_; }
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(47):    virtual bool SetMgwPsm(ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(63):    Id Tid() const { return Id(tid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(57):    word GetCurrValue() const { return *curr_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(57):    virtual void Initialize();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(62):    virtual Object* Create();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(70):    virtual void FreeQuasiSingleton(Object* obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(119):    bool SetVptr(Object& obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(126):    bool SetTemplate(Object& obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(133):    bool SetQuasiSingleton(Object& obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(168):    bool GetCharParm(char& c, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(112):    word Result() const { return result_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Clock.h(72):    ticks_t TicksPerSec();
  C:/Users/gregu/Documents/rsc/rsc/nb/Clock.h(121):    ticks_t UsecsToTicks(usecs_t usecs);
  C:/Users/gregu/Documents/rsc/rsc/nb/Clock.h(125):    const SysTime& TimeZero();
  C:/Users/gregu/Documents/rsc/rsc/nb/Dynamic.h(56):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(60):    Exception(const Exception& that);
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(61):    Exception(Exception&& that);
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(55):    FileRequest(const FileRequest& that);
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.h(39):    size_t find(fn_name_arg func, const char* str);
  C:/Users/gregu/Documents/rsc/rsc/nb/Immutable.h(55):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(56):    static void Set(void* dest, byte_t value, size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(79):    static bool Verify(MemoryType type, void* addr);
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(103):    ModuleId Mid() const { return mid_.GetId(); }
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(111):    virtual ModuleId* Dependencies(size_t& count) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(95):    ClassId GetClassId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(107):    ObjectId GetObjectId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(113):    static bool GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(121):    static void* operator new(size_t size, MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(122):    static void* operator new[](size_t size, MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(124):    static void operator delete[](void* addr);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(125):    static void operator delete(void* addr, MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(126):    static void operator delete[](void* addr, MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(135):    void MorphTo(Class& target);
  C:/Users/gregu/Documents/rsc/rsc/nb/Permanent.h(57):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(53):    PooledClass(ClassId cid, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(69):    bool SetPool(ObjectPool& pool);
  C:/Users/gregu/Documents/rsc/rsc/nb/Protected.h(56):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Link.h(57):    bool IsQueued() const { return next != nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Link.h(57):    bool IsQueued() const { return next != nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(87):    void GetDir(std::string& dirName);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(101):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(106):    static void operator delete[](void* addr);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.h(71):    bool TickTimingAvailable() const { return available_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(76):    int16_t Get(TimeField field) const { return time_[field]; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Temporary.h(55):    static void* operator new[](size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(121):    static std::atomic_uint32_t* Vector();
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(169):    bool ChangeFaction(Faction faction);
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(168):    const SysTime& StartTimeFull() const { return startTime_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(99):    static void operator delete(void* addr, void* where) { }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(82):    virtual CliText* CreateText() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h(50):    IpService* GetService(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(115):    bool operator!=(const SysIpL3Addr& that) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(51): uint64_t htonll(uint64_t hostllong);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(54): uint64_t ntohll(uint32_t netllong);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(134):    bool LocAddr(SysIpL3Addr& locAddr);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(190):    IpBuffer* IcMsg() const { return icMsg_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(91):    bool IsRinging() const { return ringing_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(95):    bool CanFlash() const { return flash_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(100):    Cause::Ind GetCause() const { return cause_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(293):    MediaInfo* AddMedia(const MediaInfo& media);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(447):    virtual void InjectFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/rsc/main.cpp(137): main_t main(int argc, char* argv[])
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(117):    virtual void NextPort(MsgPort*& port) const { port = nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(127):    static void Dump(fn_name_arg func, debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(272):    size_t MsgCount(bool priority, bool standard) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(219):    void SetFaction(Faction faction) { faction_ = faction; }
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(49):    GlobalAddress(const SysIpL3Addr& l3Addr, FactoryId fid);
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(85):    bool operator!=(const GlobalAddress& that) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h(66):    bool operator!=(const LocalAddress& that) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(198):    Message* FindSignal(SignalId sid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(83):    ProtocolId Prid() const { return prid_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(80):    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(75):    bool IsLowermost() const { return lower_ == nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(136):    Message* FirstSentMsg() const { return sentMsgq_.First(); }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(194):    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(324):    virtual void InjectFinalMsg();
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(84):    virtual void NextPort(MsgPort*& port) const override { portq_.Next(port); }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(91):    StateId CurrState() const { return currState_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(104):    Message* SavedMsg() const { return savedMsg_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(213):    StateId CurrState() const { return currState_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(217):    StateId NextState() const { return nextState_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(358):    bool IsInitiation() const { return initiation_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(369):    Message* GetMessage() const { return message_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(85):    static void operator delete(void* addr, SbPoolUser user);
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(125):    bool Disable();
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(129):    bool Enable();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(134):    bool HasTriggered(TriggerId tid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(79):    ProtocolId Prid() const { return prid_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(58):    ServiceId Sid() const { return sid_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(60):    explicit TextTlvMessage(SbIpBufferPtr& text);
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(64):    TextTlvMessage(ProtocolSM* psm, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(70):    bool Receive();
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(61):    TlvMessage(const TlvParmLayout& parm, ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(66):    TlvMessage(const Message& msg, ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(75):    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(166):    size_t AllParms(TlvParmArray ptab, size_t size) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(172):    size_t FindParms(ParameterId pid, TlvParmArray ptab, size_t size) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(186):    TlvParmPtr AddBytes(const byte_t* src, size_t size, ParameterId pid);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(192):    TlvParmPtr CopyParm(const TlvParmLayout& src, ParameterId pid = NIL_ID);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(196):    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(248):    byte_t* FindBytes(size_t& size, ParameterId pid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(255):    virtual bool MatchParm(TlvParmPtr pptr, ParmIterator& pit, bool& last) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(270):    size_t ParmOffset(ParmIterator& pit) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(73):    static Id ExtractPid(const TlvParmLayout& parm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.h(39):    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(76):    PotsMuxPsm(ProtocolLayer& adj, bool upper, Switch::PortId port);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(72):    virtual CliText* CreateText() const override;
W033 Unused typedef
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(175): typedef std::basic_string<char, CharTraits, ImmAllocator<char>>  ImmString;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(176): typedef std::basic_string<char, CharTraits, PermAllocator<char>> PermString;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(177): typedef std::basic_string<char, CharTraits, ProtAllocator<char>> ProtString;
W037 Member hides inherited name
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(314):    static const Id NextId = FirstId + 50;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(881):    static const Id NextId                 = FirstUn + 7;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(60):    static const ServicePortId NextPortId = FirstPortId + 1;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(210):    static const Id FirstId = BcEvent::NextId;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(216):    static const Id NextId        = FirstId + 4;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(300):    static const Id NextId              = FirstId + 7;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(67):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(167):    static ptrdiff_t LinkDiff();
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(54):    static ptrdiff_t LinkDiff();
W040 Struct could be class
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(112): struct WarningLog
W042 Member could be private
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(145):    typedef uint8_t DigitCount;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(175):    static bool IsValidDigit(Digit d)
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(182):    Rc AddDigit(Digit d);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(201):    DigitCount Size() const;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(225):    bool operator==(const DigitString& that) const;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(236):    virtual void EnsureMediaMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(240):    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(412):    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1013):    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1014):    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1015):    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1061):    virtual EventHandler::Rc RequestService(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1150):    CipPsm* AllocNPsm();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(492):    ProxyBcPsm* FirstBroadcast() const;
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h(46):    void SetService(Address::SC sc, ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(108):    bool IsTemplateHeader() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(211):    int CalcGroup(const Include& incl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(72):    typedef std::pair< Warning, CodeWarning > WarningPair;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(76):    typedef std::map< Warning, CodeWarning > AttrsMap;
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.h(428):    Numeric(NumericType type, size_t width, bool sign) noexcept :
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(119):    Typedef* FindType(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(164):    Enum* FindEnum(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(168):    Enumerator* FindEnumerator(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(374):    FunctionDefinition GetFuncDefinition(const Function* func) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(850):    Namespace* FindNamespace(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(240):    virtual CxxToken* GetValue() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(280):    virtual CxxToken* RootType() const override { return GetValue(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(277):    bool operator==(const StackArg& that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(941):    bool IsUnboundedArray() const { return array_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1005):    bool IsTemplateInstance() const { return tmplt_ != nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1033):    size_t MinArgs() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1038):    size_t MaxArgs() const { return args_.size(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1096):    bool IsInvokedInBase() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(150):    bool IsSubscopeOf(const std::string& fqSuper) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(189):    std::string NextOperator() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(67):    CodeDir* FindDir(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(88):    LibrarySet* FindVar(const std::string& name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(69):    bool IsReadOnly() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(178):    static ptrdiff_t LinkDiff();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(55):    enum StartupResult
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(67):    BaseBot();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(116):    bool send_to_server(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(130):    void request_map();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(155):    void disconnect_from_server(ProtocolError error = GRACEFUL_CLOSE);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(162):    TokenMessage active_powers(bool self = false) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(169):    TokenMessage surviving_powers(bool self = false) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(174):    bool queue_event(BotEvent event, secs_t secs);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(179):    void cancel_event(BotEvent event);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(191):    virtual StartupResult initialise(const StartupParameters& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(196):    virtual void set_title(token_t msg, bool rcvd);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(201):    virtual void send_nme_or_obs();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(206):    virtual void process_ccd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(212):    virtual void process_drw_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(217):    virtual const std::vector< Token >& get_try_tokens() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(222):    virtual void process_frm_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(226):    virtual void process_huh_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(230):    virtual void process_lod_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(234):    virtual void process_mis_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(238):    virtual void process_off_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(243):    virtual void process_out_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(247):    virtual void process_prn_message(const Token* message, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(251):    virtual void process_smr_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(255):    virtual void process_sve_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(260):    virtual void process_thx_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(264):    virtual void process_tme_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(268):    virtual void process_adm_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(273):    virtual void process_not_ccd_message(const TokenMessage& message,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(278):    virtual void process_not_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(285):    virtual bool get_reconnect_details(Token& power, int& passcode) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(293):    virtual uint8_t reconnection_delay();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(298):    virtual void process_rej_nme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(303):    virtual void process_rej_iam_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(308):    virtual void process_rej_hlo_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(313):    virtual void process_rej_now_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(318):    virtual void process_rej_sco_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(323):    virtual void process_rej_hst_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(328):    virtual void process_rej_sub_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(333):    virtual void process_rej_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(338):    virtual void process_rej_ord_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(343):    virtual void process_rej_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(348):    virtual void process_rej_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(353):    virtual void process_rej_snd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(358):    virtual void process_rej_adm_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(363):    virtual void process_rej_mis_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(368):    virtual void process_rej_not_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(373):    virtual void process_rej_not_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(378):    virtual void process_yes_nme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(383):    virtual void process_yes_obs_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(389):    virtual void process_yes_iam_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(394):    virtual void process_yes_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(399):    virtual void process_yes_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(404):    virtual void process_yes_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(410):    virtual void process_yes_snd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(415):    virtual void process_yes_not_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(420):    virtual void process_yes_not_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(425):    virtual void process_yes_not_sub_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(431):    virtual void process_unexpected_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(436):    virtual void process_unexpected_rej_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(441):    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(446):    virtual void process_unexpected_yes_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(451):    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(456):    virtual void process_bm_message(const DipMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(467):    virtual void process_hlo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(472):    virtual void process_map_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(476):    virtual void process_mdf_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(480):    virtual void process_ord_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(484):    virtual void process_sco_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(488):    virtual void process_now_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(492):    virtual void process_slo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(502):    virtual void report_failed_press
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(508):    virtual void report_failed_connect();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(513):    virtual void report_close(ProtocolError error);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(524):    static void report_ccd(const Token& power, bool disorder);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(528):    void report_end(const TokenMessage& message) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(532):    void report_mdf() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(536):    void report_now() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(540):    void report_ords();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(544):    static void report_out(const Token& power);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(548):    void report_sco() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(552):    void report_smr(const TokenMessage& message) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(556):    void report_exit(fixed_string reason);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(566):    MapAndUnits* map_and_units;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(571):    std::set< Token > cd_powers;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(576):    std::set< Token > out_powers;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(580):    std::vector< PowerCentres > centres;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(584):    std::vector< PowerUnits > units;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(202):    byte_t first_payload_byte;  // for creating a pointer to the first byte
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(116):    std::string map_name;             // map's name
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(119):    TokenMessage variant;             // rules for this variant
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(120):    ProvinceSet home_centres;         // our home centres
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(121):    bool game_started;                // set when the game has begun
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(126):    UnitOrderMap dislodged_units;     // dislodged units
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(127):    WinterOrderMap winter_orders;     // winter orders
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(128):    WinterOrders our_winter_orders;   // our winter orders
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(129):    UnitOrderMap prev_movements;      // results of previous movement turn
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(130):    UnitOrderMap prev_retreats;       // results of previous retreat turn
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(132):    Token prev_movement_season;       // season for previous movement results
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(136):    bool check_on_submission;    // check orders when submitted (not an AOA game)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(137):    bool check_on_adjudication;  // check orders when adjudicated (AOA game)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(143):    UnitSet our_units;              // our units
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(144):    UnitSet our_dislodged_units;    // our units that must retreat or disband
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(145):    ProvinceSet open_home_centres;  // our home centres available for builds
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(146):    ProvinceSet our_centres;        // the centres that we currently own
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(147):    word our_number_of_disbands;    // disbands required (negative for builds)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(190):    bool set_move_by_convoy_order(ProvinceId unit,
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(211):    bool cancel_build_order(ProvinceId province);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(257):    std::string display_movement_order(const UnitOrder& unit,
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(260):    std::string display_retreat_order(const UnitOrder& unit) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(278):    const LocationSet* get_neighbours(const Location& location) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(328):    TokenMessage encode_unit(const UnitOrder& unit) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(99):    bool is_number() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(127):    size_t set_from(const Token* stream, size_t length);
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.h(37):    typedef std::map< Token, std::string > TokenToTextMap;
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.h(38):    typedef std::map< std::string, Token > TextToTokenMap;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(104):    virtual void EndOfTransaction();
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h(52):    bool operator==(const MediaInfo& that) const;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(131):    Tone::Id GetOgTone() const { return ogTone_; }
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(169):    void SetOgPort(Switch::PortId ogport);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(188):    virtual Event* ReceiveMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(192):    virtual void PrepareOgMsgq() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(109):    virtual void Claim() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(66):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(67):    virtual bool SetNextValue(bool value) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(65):    virtual bool SetNextValue(bool value) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(81):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(60):    const char* Key() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(75):    static ptrdiff_t LinkDiff();
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(101):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(66):    virtual Object* GetQuasiSingleton();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(113):    virtual Object* New(size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(61):    const char* HelpText() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(69):    Exception& operator=(const Exception& that) = delete;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1961):    static void SendAckToOutputFile(const CliThread& cli);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h(77):    static bool ThreadsEmpty();
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(70):    typedef uint32_t InstanceId;  // identifies an object within a Class
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(71):    typedef uint32_t ObjectId;    // ClassId (12 bits) + InstanceId (20 bits)
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(101):    virtual InstanceId GetInstanceId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(182):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h(56):    static bool NullifyObjectData() { return NullifyObjectData_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(66):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(57):    id_t Gid() const { return gid_.GetId(); }
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(61):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(77):    StatisticsGroup* GetGroup(id_t gid) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(81):    void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(85):    static std::string StatsFileName() { return StatsFileName_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(80):    int16_t DayOfWeek() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(131):    const char* strMonth() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(125):    static bool TestFlag(FlagId fid);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(129):    static void ResetFlag(FlagId fid);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(161):    SysThreadId NativeThreadId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(238):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(177):    typedef std::map< fn_name_arg, size_t > InvocationsTable;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(90):    static void operator delete(void* addr) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(94):    static void* operator new(size_t size, void* where);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3424):    typedef id_t Test;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(89):    virtual bool ExitOnRestart(RestartLevel level) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(56):    bool PeersEmpty() const;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(60):    bool PortsEmpty() const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(89):    word Connect(const SysIpL3Addr& remAddr);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(129):    word Send(const byte_t* data, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(181):    bool IsOpen() const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(216):    void Disconnect();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(221):    void Close();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(72):    word SendTo(const byte_t* data, size_t size, const SysIpL3Addr& remAddr);
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(77):    virtual void Unblock() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(86):    virtual IpPort* CreatePort(ipport_t pid) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(58):    virtual void Unblock() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h(59):    virtual IpPort* CreatePort(ipport_t pid) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(132):    void ResetCircuit();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(63):    Id Fid() const { return Id(fid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(71):    const char* FullName() const { return name_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(75):    bool CanBeDeactivated() const { return deactivation_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(91):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(59):    PotsFeature::Id Fid() const { return fid_; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(63):    static ptrdiff_t LinkDiff();
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(114):    virtual bool SaveContext();
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(125):    virtual Event* RestoreContext(EventHandler::Rc& rc);
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(131):    virtual void FreeContext(bool freeMsg);
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(159):    virtual bool Save();
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(163):    virtual Event* Restore(EventHandler::Rc& rc);
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(167):    virtual void Free();
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(91):    static ptrdiff_t CellDiff();
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(63):    static word RtcYieldPercent() { return RtcYieldPercent_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(71):    static ptrdiff_t CellDiff2();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(350):    virtual void Handled(bool retain);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(354):    virtual bool SendFailure(debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h(58):    static void CaptureMsg(Context& ctx, const Message& msg, TransTrace* tt);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(53):    uint8_t           spare    : 6;   // reserved for future use
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(71):    Id Prid() const { return Id(prid_.GetId()); }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(119):    virtual ProtocolLayer* JoinPeer
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(126):    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(67):    typedef uint8_t Priority;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(250):    virtual bool SendMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(535):    const StateId stid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(73):    static bool IsValidPortId(PortId pid)
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(115):    bool IsModifiable() const { return modifiable_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(119):    bool IsModifier() const { return modifier_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(97):    StateId NextState() const { return nextState_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(54):    static ptrdiff_t LinkDiff();
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(155):    TlvParmPtr FirstParm(ParmIterator& pit) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(160):    TlvParmPtr NextParm(ParmIterator& pit) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(181):    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(242):    typedef uint16_t Fence;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(260):    virtual void AddFence();
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(264):    TlvMsgLayout* TlvLayout() const
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(275):    Fence* FencePtr() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(279):    void CheckFence() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(74):    static bool IsValidId(Id tid)
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(252):    void StartTimer(TimerId tid, secs_t duration);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(159):    void SetProfile(PotsProfile* prof) { prof_ = prof; }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(417):    ProtocolSM* TimerPsm(TimerId tid) const;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.h(45):    typedef uint8_t Id;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h(57):    void SetCauseToTreatmentQ(Cause::Ind cause, PotsTreatmentQueue::QId qid);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(264):    void UpdateTestPsm();
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(340):    TestPsm* GetTestPsm() const { return testPsm_; }
W043 Member could be protected
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(124):    static Address::DN IndexToDN(uint32_t i) { return i + FirstDN - 1; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1027):    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1032):    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1097):    virtual EventHandler::Rc ClearCall(Cause::Ind cause);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(117):    static LibrarySet* Evaluate(const CliThread& cli);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(79):    const ClassPtrVector* Classes() const { return &classes_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(87):    const EnumPtrVector* Enums() const { return &enums_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(91):    const ForwardPtrVector* Forws() const { return &forws_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(733):    const std::string& GetText() const { return text_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(166):    bool IsInternal() const { return loc_.IsInternal(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(231):    virtual CodeFile* GetDeclFile() const { return GetFile(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(240):    virtual CodeFile* GetDefnFile() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(319):    void Accessed() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(332):    void DisplayReferent(std::ostream& stream, bool fq) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(336):    std::string strLocation() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(341):    void strName(std::ostream& stream, bool fq, const QualName* name) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1035):    Cxx::ItemType GetUserType() const { return user_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1039):    TemplateRole GetTemplateRole() const { return role_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(297):    bool IsExtern() const { return extern_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(301):    bool IsConstexpr() const { return constexpr_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(305):    bool WasInited() const { return GetDecl()->inited_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(51):    CodeFile* GetImplFile() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(86):    CxxScoped* FindInheritedName() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(91):    void DisplayFiles(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(99):    virtual bool IsUnused() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(156):    virtual LibrarySet* Create(const std::string& name, SetOfIds* set) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(78):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(102):    void LogSubtended(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(39):    CliCharParm(const char* help, const char* chars,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(158):    bool GetBoolParm(bool& b, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(178):    bool GetPtrParm(void*& p, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(204):    bool GetTextParm(id_t& i, std::string& s, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(238):    bool GetIdentifier(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(253):    bool IsOptional() const { return opt_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h(38):    explicit CliPtrParm(const char* help,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(65):    const Registry< CliParm >& Parms() const { return parms_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(48):    typedef uint8_t sel_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(57):    virtual void Patch(sel_t selector, void* arguments) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(69):    typedef id_t ClassId;         // identifies a Class
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(62):    virtual void DisplayStat(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(57):    StreamRequest(const StreamRequest& that);
  C:/Users/gregu/Documents/rsc/rsc/nb/TimedRecord.h(48):    ticks_t GetTicks() const { return ticks_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/TimedRecord.h(52):    void SetTicks(const ticks_t& ticks) { ticks_ = ticks; }
  C:/Users/gregu/Documents/rsc/rsc/nb/TimedRecord.h(56):    SysThreadId Nid() const { return nid_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(71):    void Nullify() { owner_ = NIL_ID; }
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(65):    IpPort* Port() const { return port_; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(98):    bool IsValid() const;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(269):    explicit PotsMessage(SbIpBufferPtr& buff);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(149):    virtual InspectRc InspectMsg(debug32_t& errval) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(258):    MsgDirection Dir() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(71):    bool IsUppermost() const { return upper_ == nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(96):    virtual FactoryId GetFactory() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(75):    enum IncomingRc
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(84):    enum OutgoingRc
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(130):    Message* FirstOgMsg() const { return ogMsgq_.First(); }
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(63):    typedef ServicePortId PortId;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(81):    virtual const char* PortName(PortId pid) const;
W044 Typedef of pointer type
  C:/Users/gregu/Documents/rsc/rsc/nb/SysDecls.h(46): typedef void* SysHeap_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysDecls.h(47): typedef void* SysThread_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysDecls.h(49): typedef void* SysMutex_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysDecls.h(50): typedef void* SysSentry_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(88): typedef char* ptr_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(89): typedef const char* const_ptr_t;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(105): typedef const char* const fixed_string;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(110): typedef const char* const fn_name;      // for defining a function name
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h(111): typedef const char* const fn_name_arg;  // when fn_name is an argument
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(60): typedef TlvParmLayout* TlvParmPtr;  // pointer to a parameter
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(61): typedef TlvParmPtr* TlvParmArray;   // array of pointers to parameters
W047 Data is init-only
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.cpp(80):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.cpp(171):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.cpp(381):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(64):    bool suppressed;
  C:/Users/gregu/Documents/rsc/rsc/ct/CtModule.h(60):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(475):    static bool Initialized;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(2259):    FunctionGuard guard(FunctionGuard::MakeUnpreemptable, true);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(64):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.cpp(149):    FunctionGuard guard(FunctionGuard::MakeUnpreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.cpp(93):       FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.cpp(139):       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(228):       FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(301):       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.cpp(307):    FunctionGuard guard(FunctionGuard::MakeUnpreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.cpp(187):       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1765):    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h(64):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/nb/Singleton.h(130):    static T* Instance_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(482):    MutexGuard guard(&lock_);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(676):    MutexGuard guard(&lock_);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(711):    MutexGuard guard(&lock_);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(234):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(426):    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.cpp(97):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.cpp(247):    FunctionGuard guard(FunctionGuard::MakePreemptable);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(66):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(66):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h(62):    static bool Registered;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(455):    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.h(62):    static bool Registered;
W048 Data is write-only
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(225):    LibraryVarSet* varSet_;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(121):    bool game_started;                // set when the game has begun
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(147):    word our_number_of_disbands;    // disbands required (negative for builds)
W050 Data is not private
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(305):    size_t refs_ : 16;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(286):    CxxToken* item;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(986):    bool ptrDet_: 1;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(990):    bool refDet_: 1;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(566):    MapAndUnits* map_and_units;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(571):    std::set< Token > cd_powers;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(576):    std::set< Token > out_powers;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(580):    std::vector< PowerCentres > centres;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(584):    std::vector< PowerUnits > units;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(113):    Province game_map[PROVINCE_MAX];  // map details
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(114):    ProvinceId number_of_provinces;   // number of provinces on map
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(115):    PowerId number_of_powers;         // number of powers at outset
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(116):    std::string map_name;             // map's name
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(117):    Token our_power;                  // power that we are playing
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(118):    int passcode;                     // our passcode
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(119):    TokenMessage variant;             // rules for this variant
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(120):    ProvinceSet home_centres;         // our home centres
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(121):    bool game_started;                // set when the game has begun
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(122):    bool game_over;                   // set when the game has ended
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(123):    Token curr_season;                // current season of play
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(124):    int curr_year;                    // current year of play
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(125):    UnitOrderMap units;               // non-dislodged units
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(126):    UnitOrderMap dislodged_units;     // dislodged units
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(127):    WinterOrderMap winter_orders;     // winter orders
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(128):    WinterOrders our_winter_orders;   // our winter orders
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(129):    UnitOrderMap prev_movements;      // results of previous movement turn
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(130):    UnitOrderMap prev_retreats;       // results of previous retreat turn
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(131):    WinterOrderMap prev_adjustments;  // results of previous adjustment turn
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(132):    Token prev_movement_season;       // season for previous movement results
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(136):    bool check_on_submission;    // check orders when submitted (not an AOA game)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(137):    bool check_on_adjudication;  // check orders when adjudicated (AOA game)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(143):    UnitSet our_units;              // our units
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(144):    UnitSet our_dislodged_units;    // our units that must retreat or disband
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(145):    ProvinceSet open_home_centres;  // our home centres available for builds
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(146):    ProvinceSet our_centres;        // the centres that we currently own
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(147):    word our_number_of_disbands;    // disbands required (negative for builds)
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(178):    std::unique_ptr< CliBuffer > ibuf;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(182):    ostringstreamPtr obuf;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(89):    std::atomic_size_t curr_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(93):    std::atomic_size_t prev_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(97):    std::atomic_uint64_t total_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(101):    size_t divisor_;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(136):    Id rid_ : 8;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(93):    const ipport_t port_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(98):    IpPort* ipPort_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(102):    SysIpL2Addr host_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(106):    size_t recvs_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(110):    SysIpL3Addr txAddr_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(115):    SysIpL3Addr rxAddr_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(119):    ticks_t ticks0_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(123):    byte_t* buffer_;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(492):    ServiceId owner_;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(496):    const EventId eid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(531):    const ServiceId sid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(535):    const StateId stid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(539):    const EventHandler::Rc rc_;
W053 Data could be const
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(172):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(338):    Progress::Ind progress_;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(354):    Cause::Ind cause_;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(114):    Warning warning;       // type of warning
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(116):    size_t line;           // line where warning occurred
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(117):    size_t pos;            // position in FILE where warning occurred
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(119):    word offset;           // warning-specific; displayed if > 0
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(120):    std::string info;      // warning-specific
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(121):    bool hide;             // set to stop warning from being displayed
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.h(477):    NumericType type_ : 8;
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.h(485):    bool signed_ : 8;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(310):    CxxToken* via_;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(349):    bool ctor_ : 1;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(226):    NodeBase::Q2Link link_;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(112):       BotEvent event;       // event
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(144):    DipHeader header;  // no parameters (length = 0)
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(202):    byte_t first_payload_byte;  // for creating a pointer to the first byte
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(90):    RegCell port_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(77):    FlagId fid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(93):    word min_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(97):    word max_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(155):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(117):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h(93):    Id id_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(106):    RegCell iid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(79):    word min_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(83):    word max_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(87):    bool hex_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(140):    uintptr_t patchArea_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(256):    RegCell pid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(114):    signal_t value_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(126):    uint8_t severity_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(130):    Flags attrs_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(134):    RegCell sid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(118):    RegCell sid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(122):    DynString expl_;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(100):    RegCell gid_;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(104):    DynString expl_;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(53):    static secs_t LongIntervalSecs;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(58):    static secs_t ShortIntervalSecs;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(65):    static size_t WakeupsBetweenReports;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(70):    static ticks_t PrevToCurrTicks;
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(96):    DynString name_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(108):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(105):    char abbr_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(109):    bool safe_;
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(105):    size_t size_;
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.h(84):    Q2Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1189):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1701):    Q2Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(180):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(152):    RegCell sid_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(93):    PotsFeature::Id fid_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(97):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(58):    Address::DN dn_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(312):    Q2Link link_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(336):    Faction faction_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(214):    Id eid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(267):    ProtocolId prid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(120):    ServiceId sid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(124):    ServiceId aid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(128):    TriggerId tid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(136):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(133):    RegCell iid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(159):    static word RtcYieldPercent_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(186):    ProtocolId prid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(371):    FactoryId fid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(118):    ProtocolId prid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(117):    ServiceId sid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(135):    TimerId tid_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(147):    Q2Link link_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(118):    Id tid_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(185):    Cause::Ind cause_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(147):    Facility::Ind ind_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(161):    PotsTreatmentQueue::QId qid_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(165):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(194):    Tone::Id tone_;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(198):    secs_t duration_;
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.h(128):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.h(145):    Q1Link link_;
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.h(85):    Q1Link link_;
W054 Data could be const pointer
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(115):    const CodeFile* file;  // file where warning occurred
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(118):    const CxxNamed* item;  // item associated with warning
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(310):    CxxToken* via_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(143):    const char* default_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(147):    const char* expl_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(69):    const char* chars_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(110):    const char* name_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(114):    const char* help_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(332):    const char* help_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(340):    const char* tag_;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(111):    const char* text_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(118):    const char* name_;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(122):    const char* expl_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(220):    PotsProfile* profile_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(133):    const char* abbr_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(137):    const char* name_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(271):    const char* name_;
W055 Data need not be mutable
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(113):       mutable secs_t secs;  // delay
W056 Default constructor invoked: POD members not initialized
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(849):    FixOptions options;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(486): struct FixOptions
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(57):    _finddata_t attributes_;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.win.cpp(44):    LARGE_INTEGER frequency;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.win.cpp(75):       LARGE_INTEGER now;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.win.cpp(81):       _timeb now;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.win.cpp(42):    _timeb timebuff;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.win.cpp(43):    tm timeofday;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.win.cpp(52):    in_addr result;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp(48):    addrinfo hints;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp(105):    sockaddr_in addr;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(64):    sockaddr_in addr;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(252):    WSAData wsaData;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(41):    sockaddr_in peer;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(82):    sockaddr_in peer;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(146):    sockaddr_in host;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(254):    sockaddr_in peer;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(67):    sockaddr_in peer;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp(99):    sockaddr_in peer;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(168):    struct SignalEntry
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(232):    SignalEntry trace_[TraceSize];
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(225):    struct MessageEntry
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(360):    MessageEntry trace_[TraceSize];
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(194):    ParmIterator pit;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(317):    ParmIterator pit;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(337):    ParmIterator pit;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp(398):    ParmIterator locpit;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(310):    struct ParmIterator
W057 Default constructor invoked
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp(180):    std::unique_ptr< pollfd[] > list(new pollfd[size]);
W058 Default copy constructor invoked
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(237):          iter(i), pos(string::npos) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(240):          iter(i), pos(p) { }
W060 Base class constructor is public
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(251):    Class(QualNamePtr& name, Cxx::ClassTag tag);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(38):    CfgBoolParm(const char* key, const char* def, bool* field, const char* expl);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(39):    CfgIntParm(const char* key, const char* def, word* field,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(39):    CfgStrParm(const char* key, const char* def,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBoolParm.h(39):    explicit CliBoolParm(const char* help,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(39):    CliCharParm(const char* help, const char* chars,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(49):    CliIntParm(const char* help, word min, word max,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h(38):    explicit CliPtrParm(const char* help,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(48):    CliText(const char* help, const char* text,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(49):    explicit CliTextParm(const char* help, bool opt = false,
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h(41):    MsgBuffer();
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h(45):    MsgBuffer(const MsgBuffer& that);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(41):    StatusCommand();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(55):    LogsAction();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(67):    explicit LogsCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(83):    SetWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(96):    explicit SetCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(112):    IncludeWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(126):    explicit IncludeCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(142):    ExcludeWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(155):    explicit ExcludeCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(185):    explicit QueryCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(201):    SaveWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(213):    explicit SaveCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(229):    ClearWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(247):    explicit ClearCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h(41):    SoftwareException
  C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h(43):    SoftwareException
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(134):    explicit Counter(const std::string& expl, size_t divisor = 1);
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(52):    StreamRequest();
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(57):    StreamRequest(const StreamRequest& that);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(44):    CorruptWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(56):    explicit CorruptCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(98):    NtSaveWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(110):    explicit NtSaveCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(124):    SizesCommand();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(139):    TestcaseAction();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(160):    explicit TestcaseCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(52):    IpBuffer(MsgDirection dir, size_t header, size_t payload);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(56):    IpBuffer(const IpBuffer& that);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(41):    NwClearWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(56):    explicit NwClearCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(69):    NwExcludeWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(82):    explicit NwExcludeCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(95):    NwIncludeWhatParm();
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(108):    explicit NwIncludeCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(123):    explicit NwQueryCommand(bool bind = true);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(136):    NwStatusCommand() = default;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(42):    SysIpL2Addr();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(46):    explicit SysIpL2Addr(ipv4addr_t v4Addr);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(51):    explicit SysIpL2Addr(const std::string& text);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(55):    SysIpL2Addr(const SysIpL2Addr& that);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(40):    SysIpL3Addr();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(45):    SysIpL3Addr(ipv4addr_t v4Addr, ipport_t port,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(51):    SysIpL3Addr(const SysIpL2Addr& l2Addr, ipport_t port,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(59):    SysIpL3Addr
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(64):    SysIpL3Addr(const SysIpL3Addr& that);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h(40):    PbSizesCommand() = default;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(269):    explicit PotsMessage(SbIpBufferPtr& buff);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(273):    PotsMessage(ProtocolSM* psm, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(468):    EventTrace(Id rid, const Event& evt);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(513):    HandlerTrace(ServiceId sid, const State& state, const Event& evt,
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(49):    explicit TlvMessage(SbIpBufferPtr& buff);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(53):    TlvMessage(ProtocolSM* psm, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(61):    TlvMessage(const TlvParmLayout& parm, ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(66):    TlvMessage(const Message& msg, ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(40):    StSizesCommand() = default;
W062 Member not included in member initialization list
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(40):    FileWalker(const char* dirName, const char* fileSpec);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(57):    _finddata_t attributes_;
W065 Base class virtual destructor is not public
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(194):    virtual ~LibrarySet();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(80):    virtual ~Tone();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(107):    virtual ~Class();
  C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h(85):    virtual ~CliAppData();
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(65):    virtual ~Exception() noexcept;
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(146):    virtual ~Module();
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(208):    virtual ~ObjectPool();
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(105):    virtual ~PosixSignal();
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(280):    virtual ~Thread();
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(92):    virtual ~Tool();
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(134):    virtual ~IpService();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(180):    virtual ~SysSocket();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(108):    virtual ~PotsFeature();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(76):    virtual ~PotsFeatureProfile();
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(189):    virtual ~Context();
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(126):    virtual ~EventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(203):    virtual ~Factory();
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(93):    virtual ~Initiator();
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(116):    virtual ~InvokerPool();
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(172):    virtual ~Parameter();
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(136):    virtual ~Protocol();
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(150):    virtual ~ProtocolLayer();
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(179):    virtual ~Service();
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(169):    virtual ~ServiceSM();
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(109):    virtual ~Signal();
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(91):    virtual ~State();
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(99):    virtual ~Trigger();
W075 Virtual function is public
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1008):    virtual EventHandler::Rc RaiseAuthorizeOrigination(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1009):    virtual EventHandler::Rc RaiseCollectInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1010):    virtual EventHandler::Rc RaiseLocalInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1011):    virtual EventHandler::Rc RaiseCollectionTimeout(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1012):    virtual EventHandler::Rc RaiseAnalyzeInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1013):    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1014):    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1015):    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1016):    virtual EventHandler::Rc RaiseSendCall(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1017):    virtual EventHandler::Rc RaiseRemoteBusy(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1018):    virtual EventHandler::Rc RaiseRemoteProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1020):    virtual EventHandler::Rc RaiseRemoteAlerting(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1021):    virtual EventHandler::Rc RaiseRemoteNoAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1022):    virtual EventHandler::Rc RaiseRemoteAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1023):    virtual EventHandler::Rc RaiseAuthorizeTermination(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1024):    virtual EventHandler::Rc RaiseSelectFacility(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1025):    virtual EventHandler::Rc RaisePresentCall(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1026):    virtual EventHandler::Rc RaiseLocalBusy(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1027):    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1028):    virtual EventHandler::Rc RaiseLocalProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1030):    virtual EventHandler::Rc RaiseLocalAlerting(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1031):    virtual EventHandler::Rc RaiseLocalAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1032):    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1033):    virtual EventHandler::Rc RaiseLocalSuspend(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1034):    virtual EventHandler::Rc RaiseLocalResume(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1035):    virtual EventHandler::Rc RaiseRemoteSuspend(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1036):    virtual EventHandler::Rc RaiseRemoteResume(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1043):    virtual EventHandler::Rc RaiseLocalRelease
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1045):    virtual EventHandler::Rc RaiseRemoteRelease
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1047):    virtual EventHandler::Rc RaiseReleaseCall
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1049):    virtual EventHandler::Rc RaiseApplyTreatment
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1056):    virtual EventHandler::Rc AnalyzeInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1061):    virtual EventHandler::Rc RequestService(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1068):    virtual EventHandler::Rc SelectRoute(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1074):    virtual EventHandler::Rc AnalyzeNPsmTimeout
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1081):    virtual EventHandler::Rc HandleLocalAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1086):    virtual EventHandler::Rc HandleLocalAnswer();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1090):    virtual EventHandler::Rc HandleRemoteRelease(Event& currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1097):    virtual EventHandler::Rc ClearCall(Cause::Ind cause);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1103):    virtual CipMessage* BuildCipIam();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1109):    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1211):    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(469):    virtual EventHandler::Rc RaiseReleaseUser
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(471):    virtual EventHandler::Rc RaiseProxyProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(473):    virtual EventHandler::Rc RaiseProxyAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(474):    virtual EventHandler::Rc RaiseProxyRelease
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(509):    virtual void SetUPsm(MediaPsm& psm) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(128):    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(135):    virtual Function* MatchFunc(const Function* curr, bool base) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(276):    virtual ClassInst* EnsureInstance(const TypeName* type);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(284):    virtual Class* BaseClass()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(289):    virtual BaseDecl* GetBaseDecl() const { return base_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(306):    virtual Class* GetClassTemplate() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(321):    virtual bool DerivesFrom(const Class* cls) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(439):    virtual bool AddAnonymousUnion(const ClassPtr& cls) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(456):    virtual void CheckIfUsed(Warning warning) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(464):    virtual Class* DirectClass() const override { return GetClass(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(869):    virtual CxxScoped* FindItem(const std::string& name) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(115):    virtual void SetScope(CxxScope* scope) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(240):    virtual CxxToken* GetValue() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(245):    virtual bool IsDefined() const { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(251):    virtual void SetExpr(ExprPtr& rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(280):    virtual CxxToken* RootType() const override { return GetValue(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(415):    virtual bool AddElif(Elif* e) { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(419):    virtual bool AddElse(const Else* e) { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(428):    virtual bool HasCompiledCode() const { return compile_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(469):    virtual void AddCondition(ExprPtr& c) override { condition_ = std::move(c); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(65):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(77):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(93):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(109):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(129):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(113):    virtual void SetLoc(CodeFile* file, size_t pos);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(126):    virtual void CopyContext(const CxxNamed* that);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(144):    virtual size_t GetRange(size_t& begin, size_t& end) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(149):    virtual CxxScope* GetScope() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(157):    virtual bool IsStatic() const { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(162):    virtual bool IsDeclaredInFunction() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(172):    virtual void SetTemplateParms(TemplateParmsPtr& parms);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(177):    virtual const TemplateParms* GetTemplateParms() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(185):    virtual CxxScope* GetTemplate() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(191):    virtual std::string QualifiedName(bool scopes, bool templates)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(197):    virtual std::string ScopedName(bool templates) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(202):    virtual void GetScopedNames(stringVector& names) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(209):    virtual bool IsSuperscopeOf(const std::string& fqSub, bool tmplt) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(215):    virtual CxxArea* GetArea() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(220):    virtual Function* GetFunction() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(224):    virtual Cxx::Access GetAccess() const { return Cxx::Public; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(231):    virtual CodeFile* GetDeclFile() const { return GetFile(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(235):    virtual NodeBase::id_t GetDeclFid() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(240):    virtual CodeFile* GetDefnFile() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(249):    virtual CxxNamed* GetMate() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(262):    virtual bool EnterScope() { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(272):    virtual bool IsImplemented() const { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(278):    virtual CxxNamed* DirectType() const { return Referent(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(282):    virtual void FindReferent();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(288):    virtual void SetReferent(CxxNamed* item, const SymbolView* view) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(292):    virtual void SetAsReferent(const CxxNamed* user) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(297):    virtual bool Instantiate() { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(301):    virtual bool IsInTemplateInstance() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(308):    virtual StackArg NameToArg(Cxx::Operator op);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(314):    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(618):    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(830):    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(834):    virtual bool ResolveTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1031):    virtual void SetUserType(Cxx::ItemType user);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1043):    virtual Function* GetFuncSpec() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1053):    virtual TypeSpec* Clone() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1057):    virtual TypeTags* Tags() = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1058):    virtual const TypeTags* Tags() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1062):    virtual void AddArray(ArraySpecPtr& array) = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1068):    virtual TagCount Ptrs(bool arrays) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1074):    virtual TagCount Refs() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1079):    virtual TagCount Arrays() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1083):    virtual bool HasArrayDefn() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1087):    virtual void EnteringScope(const CxxScope* scope) = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1091):    virtual void EnterArrays() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1096):    virtual TypeTags GetAllTags() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1101):    virtual std::string TypeTagsString(const TypeTags& tags) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1106):    virtual void DisplayTags(std::ostream& stream) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1110):    virtual void DisplayArrays(std::ostream& stream) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1116):    virtual void SetPtrs(TagCount count) = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1121):    virtual void RemoveRefs() = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1126):    virtual bool MatchesExactly(const TypeSpec* that) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1130):    virtual StackArg ResultType() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1134):    virtual void SetTemplateRole(TemplateRole role) const { role_ = role; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1145):    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1151):    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1156):    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1160):    virtual bool ItemIsTemplateArg(const CxxScoped* item) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1166):    virtual void Instantiating() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(77):    virtual Cxx::Access GetCurrAccess() const { return Cxx::Private; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(82):    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(90):    virtual void AccessibilityOf
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(328):    virtual void Promote
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(333):    virtual bool IsUnionMember() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1130):    virtual void CheckAccessControl() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1134):    virtual void CheckIfHiding() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1138):    virtual void CheckIfUsed(Warning warning) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1263):    virtual void WasCalled() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(68):    virtual void AccessibilityTo(const CxxScope* scope, SymbolView* view) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(77):    virtual void RecordAccess(Cxx::Access access) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(95):    virtual void AddFiles(SetOfIds& imSet) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(99):    virtual bool IsUnused() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(164):    virtual void SetAccess(Cxx::Access access) override { access_ = access; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(168):    virtual void SetScope(CxxScope* scope) override { scope_ = scope; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(473):    virtual void CheckAccessControl() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(869):    virtual bool ResolveTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1256):    virtual bool ResolveTypedef(Typedef* type, size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(79):    virtual Cxx::ItemType Type() const { return Cxx::Undefined; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(85):    virtual const std::string* Name() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(89):    virtual QualName* GetQualName() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(94):    virtual std::string TypeString(bool arg) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(99):    virtual TypeSpec* GetTypeSpec() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(103):    virtual bool IsConst() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(107):    virtual bool IsConstPtr() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(111):    virtual bool IsConstPtr(size_t n) const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(116):    virtual bool IsAuto() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(121):    virtual bool IsIndirect() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(125):    virtual bool IsInitializing() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(130):    virtual CxxToken* AutoType() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(135):    virtual Namespace* GetSpace() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(140):    virtual Class* GetClass() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(145):    virtual Class* Declarer() const { return GetClass(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(151):    virtual TypeName* GetTemplateArgs() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(156):    virtual Numeric GetNumeric() const { return Numeric::Nil; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(160):    virtual void GetConvertibleTypes(StackArgVector& types) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(165):    virtual CxxNamed* Referent() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(171):    virtual void EnterBlock();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(176):    virtual void ExitBlock() { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(182):    virtual bool AppendUnary() { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(186):    virtual CxxToken* Back() { return this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(191):    virtual bool WasRead() { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(203):    virtual bool WasWritten(const StackArg* arg, bool passed);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(208):    virtual bool SetNonConst() { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(213):    virtual void WasMutated(const StackArg* arg) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(219):    virtual void RecordUsage() const { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(224):    virtual void GetUsages(const CodeFile& file, CxxUsageSets& symbols) const { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(228):    virtual void Check() const { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(232):    virtual std::string Trace() const { return NodeBase::EMPTY_STR; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(236):    virtual bool InLine() const { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(241):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(247):    virtual void Shrink() { }
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(77):    virtual LibSetType GetType() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(83):    virtual NodeBase::word Check(std::ostream* stream, std::string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(89):    virtual NodeBase::word Count(std::string& result) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(95):    virtual NodeBase::word Countlines(std::string& result) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(101):    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(107):    virtual NodeBase::word Format(std::string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(113):    virtual NodeBase::word List(std::ostream& stream, std::string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(121):    virtual NodeBase::word Parse
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(128):    virtual NodeBase::word Scan(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(135):    virtual NodeBase::word Show(std::string& result) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(141):    virtual NodeBase::word Sort(std::ostream& stream, std::string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(147):    virtual NodeBase::word Trim(std::ostream& stream, std::string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(156):    virtual LibrarySet* Create(const std::string& name, SetOfIds* set) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(157):    virtual LibrarySet* Assign(LibrarySet* rhs);
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(158):    virtual LibrarySet* Intersection(const LibrarySet* rhs) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(159):    virtual LibrarySet* Difference(const LibrarySet* rhs) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(160):    virtual LibrarySet* Union(const LibrarySet* rhs) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(161):    virtual LibrarySet* Directories() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(162):    virtual LibrarySet* Files() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(163):    virtual LibrarySet* FileName(const LibrarySet* that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(164):    virtual LibrarySet* FileType(const LibrarySet* that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(165):    virtual LibrarySet* MatchString(const LibrarySet* that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(166):    virtual LibrarySet* FoundIn(const LibrarySet* that) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(167):    virtual LibrarySet* Implements() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(168):    virtual LibrarySet* UsedBy(bool self) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(169):    virtual LibrarySet* Users(bool self) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(170):    virtual LibrarySet* AffectedBy() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(171):    virtual LibrarySet* Affecters() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(172):    virtual LibrarySet* CommonAffecters() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(173):    virtual LibrarySet* NeededBy() const;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(174):    virtual LibrarySet* Needers() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(91):    virtual bool process_command_line_parameter(char token, std::string& value);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(97):    virtual std::string report_command_line_parameters();
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(64):    virtual std::string Name() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(68):    virtual bool Supports(ProtocolId prid) const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(62):    virtual void SetState(StateId stid);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(78):    virtual void Deallocate();
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(67):    virtual void SetOgPsm(MediaPsm* ogPsm);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(72):    virtual void SetOgTone(Tone::Id ogTone);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(77):    virtual void SetIcTone(Tone::Id icTone);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(47):    virtual bool SetMgwPsm(ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(78):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(97):    virtual void GetSubtended(Base* objects[], size_t& count) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(109):    virtual void Claim() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(114):    virtual void ClaimBlocks();
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(132):    virtual void Cleanup() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(140):    virtual void Startup(RestartLevel level) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(148):    virtual void Shutdown(RestartLevel level) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(152):    virtual MemoryType MemType() const { return MemPerm; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(156):    virtual const char* ClassName() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(64):    virtual void Explain(std::string& expl) const { expl = expl_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(57):    virtual void Initialize();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(62):    virtual Object* Create();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(66):    virtual Object* GetQuasiSingleton();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(70):    virtual void FreeQuasiSingleton(Object* obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h(66):    virtual void EventOccurred(Event evt);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(71):    virtual Rc GetTextParmRc
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(66):    virtual void Enter();
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(71):    virtual void Exit();
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(135):    virtual CliParm* AccessParm(CliCookie& cookie, uint32_t depth) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(143):    virtual void Explain(std::ostream& stream, col_t indent) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(153):    virtual Rc GetIntParmRc(word& n, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(163):    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(173):    virtual Rc GetCharParmRc(char& c, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(183):    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(211):    virtual Rc GetTextParmRc(id_t& i, std::string& s, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(221):    virtual Rc GetStringRc(std::string& s, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(231):    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(244):    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(69):    virtual bool BindParm(CliParm& parm);
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(45):    virtual void Display(std::ostream& stream, const std::string& prefix) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(111):    virtual ModuleId* Dependencies(size_t& count) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h(62):    virtual TraceStatus GetStatus() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(57):    virtual void Patch(sel_t selector, void* arguments) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(82):    virtual Class* GetClass() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(90):    virtual void PostInitialize() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(101):    virtual InstanceId GetInstanceId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(99):    virtual Pooled* DeqBlock(size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(104):    virtual void EnqBlock(Pooled* obj, bool deleted);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(168):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(58):    virtual uint64_t Overall() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(62):    virtual void DisplayStat(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(69):    virtual void DisplayStats(std::ostream& stream, id_t id) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(46):    virtual void GetName(std::string& fileName) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(50):    virtual bool IsSubdir() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(54):    virtual bool AtEnd() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(59):    virtual bool Advance() = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(186):    virtual TraceStatus CalcStatus(bool dynamic) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(210):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(56):    virtual const char* Name() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(60):    virtual const char* Expl() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(66):    virtual std::string Status() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(80):    virtual bool Display(std::ostream& stream, bool diff);
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(95):    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(103):    virtual void NetworkToHost
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(122):    virtual void ReceiveBuff
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(131):    virtual byte_t* HostToNetwork
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(137):    virtual void SocketFailed(SysSocket* socket) const { }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(116):    virtual size_t PayloadSize() const;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(135):    virtual bool AddBytes(const byte_t* source, size_t size, bool& moved);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(89):    virtual SysTcpSocket* CreateAppSocket();
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(124):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(54):    virtual const char* Name() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(58):    virtual IpProtocol Protocol() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(63):    virtual ipport_t Port() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(67):    virtual Faction GetFaction() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(71):    virtual size_t RxSize() const { return IoThread::MaxRxBuffSize; }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(75):    virtual size_t TxSize() const { return IoThread::MaxTxBuffSize; }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(82):    virtual CliText* CreateText() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(88):    virtual bool HasSharedSocket() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(96):    virtual void GetAppSocketSizes(size_t& rxSize, size_t& txSize) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(79):    virtual std::string to_str() const;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(90):    virtual IpProtocol Protocol() const { return IpAny; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(116):    virtual AllocRc SetService(const IpService* service, bool shared);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(120):    virtual SendRc SendBuff(IpBuffer& buff) = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(173):    virtual void Acquire();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(177):    virtual void Release();
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(40):    virtual bool AcceptsConns() const { return true; }
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(45):    virtual size_t MaxConns() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(50):    virtual size_t MaxBacklog() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(54):    virtual bool Keepalive() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(86):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(50):    virtual bool Activate(PotsProfile& profile, CliThread& cli);  //d
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(55):    virtual bool Deactivate(PotsProfile& profile);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(101):    virtual ContextType Type() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(105):    virtual RootServiceSM* RootSsm() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(109):    virtual ProtocolSM* FirstPsm() const { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(113):    virtual void NextPsm(ProtocolSM*& psm) const { psm = nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(117):    virtual void NextPort(MsgPort*& port) const { port = nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(114):    virtual bool SaveContext();
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(125):    virtual Event* RestoreContext(EventHandler::Rc& rc);
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(131):    virtual void FreeContext(bool freeMsg);
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(117):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(121):    virtual CliText* CreateText() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(127):    virtual Message* AllocOgMsg(SignalId sid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(134):    virtual bool InjectMsg(Message& msg) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(140):    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(150):    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(172):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(87):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(149):    virtual InspectRc InspectMsg(debug32_t& errval) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(169):    virtual void Save();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(174):    virtual void Unsave();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(182):    virtual bool Retrieve(ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(189):    virtual bool Relay(ProtocolSM& ogPsm);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(193):    virtual bool SendToSelf();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(250):    virtual void SetReceiver(const GlobalAddress& receiver);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(254):    virtual void SetSender(const GlobalAddress& sender);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(279):    virtual bool Send(Route route);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(283):    virtual bool Restore();
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(93):    virtual void DisplayMsg(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(102):    virtual CliParm* CreateCliParm(Usage use) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(131):    virtual TestRc InjectMsg(CliThread& cli, Message& msg, Usage use) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(143):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(80):    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(112):    virtual void DisplayMsg(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(59):    virtual MsgPort* Port() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(63):    virtual ProtocolSM* UppermostPsm() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(96):    virtual FactoryId GetFactory() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(100):    virtual Message::Route Route() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(109):    virtual SysTcpSocket* CreateAppSocket();
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(119):    virtual ProtocolLayer* JoinPeer
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(126):    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(50):    virtual Event* RaiseProtocolError(ProtocolSM& psm, ProtocolSM::Error err);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h(42):    virtual bool RejectIngressWork() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(81):    virtual const char* PortName(PortId pid) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(111):    virtual ServiceSM* AllocModifier() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(69):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(75):    virtual EventHandler::Rc ProcessSap(Event& currEvent, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(81):    virtual EventHandler::Rc ProcessSnp(Event& currEvent, Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(102):    virtual void SetNextState(StateId stid);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(109):    virtual void PsmDeleted(ProtocolSM& exPsm);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(123):    virtual void SetNextSap(TriggerId sap);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(129):    virtual void SetNextSnp(TriggerId snp);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(141):    virtual void MorphToService(ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(86):    virtual CliText* CreateText() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(41):    virtual RootServiceSM* AllocRoot(const Message& msg, ProtocolSM& psm) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(47):    virtual ProtocolSM* AllocOgPsm(const Message& msg) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(75):    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(181):    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(196):    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(200):    virtual void DeleteParm(TlvParmLayout& parm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(257):    virtual void Cancel() override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(137):    virtual EventHandler::Rc ApplyTreatment
W076 Virtual function is overloaded
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1057):    virtual TypeTags* Tags() = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1058):    virtual const TypeTags* Tags() const = 0;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(107):    virtual bool IsConstPtr() const { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(111):    virtual bool IsConstPtr(size_t n) const { return false; }
W077 Virtual function has no overrides
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1008):    virtual EventHandler::Rc RaiseAuthorizeOrigination(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1009):    virtual EventHandler::Rc RaiseCollectInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1010):    virtual EventHandler::Rc RaiseLocalInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1011):    virtual EventHandler::Rc RaiseCollectionTimeout(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1012):    virtual EventHandler::Rc RaiseAnalyzeInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1013):    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1014):    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1015):    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1016):    virtual EventHandler::Rc RaiseSendCall(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1017):    virtual EventHandler::Rc RaiseRemoteBusy(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1018):    virtual EventHandler::Rc RaiseRemoteProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1020):    virtual EventHandler::Rc RaiseRemoteAlerting(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1021):    virtual EventHandler::Rc RaiseRemoteNoAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1022):    virtual EventHandler::Rc RaiseRemoteAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1023):    virtual EventHandler::Rc RaiseAuthorizeTermination(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1024):    virtual EventHandler::Rc RaiseSelectFacility(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1025):    virtual EventHandler::Rc RaisePresentCall(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1026):    virtual EventHandler::Rc RaiseLocalBusy(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1027):    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1028):    virtual EventHandler::Rc RaiseLocalProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1030):    virtual EventHandler::Rc RaiseLocalAlerting(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1031):    virtual EventHandler::Rc RaiseLocalAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1032):    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1033):    virtual EventHandler::Rc RaiseLocalSuspend(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1034):    virtual EventHandler::Rc RaiseLocalResume(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1035):    virtual EventHandler::Rc RaiseRemoteSuspend(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1036):    virtual EventHandler::Rc RaiseRemoteResume(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1043):    virtual EventHandler::Rc RaiseLocalRelease
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1045):    virtual EventHandler::Rc RaiseRemoteRelease
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1047):    virtual EventHandler::Rc RaiseReleaseCall
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1049):    virtual EventHandler::Rc RaiseApplyTreatment
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1056):    virtual EventHandler::Rc AnalyzeInformation(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1061):    virtual EventHandler::Rc RequestService(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1068):    virtual EventHandler::Rc SelectRoute(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1081):    virtual EventHandler::Rc HandleLocalAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1086):    virtual EventHandler::Rc HandleLocalAnswer();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1090):    virtual EventHandler::Rc HandleRemoteRelease(Event& currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1103):    virtual CipMessage* BuildCipIam();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1109):    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(469):    virtual EventHandler::Rc RaiseReleaseUser
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(471):    virtual EventHandler::Rc RaiseProxyProgress
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(473):    virtual EventHandler::Rc RaiseProxyAnswer(Event*& nextEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(474):    virtual EventHandler::Rc RaiseProxyRelease
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(91):    virtual bool process_command_line_parameter(char token, std::string& value);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(97):    virtual std::string report_command_line_parameters();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(191):    virtual StartupResult initialise(const StartupParameters& parameters);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(196):    virtual void set_title(token_t msg, bool rcvd);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(201):    virtual void send_nme_or_obs();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(206):    virtual void process_ccd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(212):    virtual void process_drw_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(217):    virtual const std::vector< Token >& get_try_tokens() const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(222):    virtual void process_frm_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(226):    virtual void process_huh_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(230):    virtual void process_lod_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(234):    virtual void process_mis_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(238):    virtual void process_off_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(243):    virtual void process_out_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(247):    virtual void process_prn_message(const Token* message, size_t size);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(251):    virtual void process_smr_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(255):    virtual void process_sve_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(260):    virtual void process_thx_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(264):    virtual void process_tme_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(268):    virtual void process_adm_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(273):    virtual void process_not_ccd_message(const TokenMessage& message,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(278):    virtual void process_not_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(285):    virtual bool get_reconnect_details(Token& power, int& passcode) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(293):    virtual uint8_t reconnection_delay();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(298):    virtual void process_rej_nme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(303):    virtual void process_rej_iam_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(308):    virtual void process_rej_hlo_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(313):    virtual void process_rej_now_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(318):    virtual void process_rej_sco_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(323):    virtual void process_rej_hst_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(328):    virtual void process_rej_sub_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(333):    virtual void process_rej_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(338):    virtual void process_rej_ord_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(343):    virtual void process_rej_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(348):    virtual void process_rej_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(353):    virtual void process_rej_snd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(358):    virtual void process_rej_adm_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(363):    virtual void process_rej_mis_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(368):    virtual void process_rej_not_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(373):    virtual void process_rej_not_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(378):    virtual void process_yes_nme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(383):    virtual void process_yes_obs_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(389):    virtual void process_yes_iam_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(394):    virtual void process_yes_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(399):    virtual void process_yes_tme_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(404):    virtual void process_yes_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(410):    virtual void process_yes_snd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(415):    virtual void process_yes_not_gof_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(420):    virtual void process_yes_not_drw_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(425):    virtual void process_yes_not_sub_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(431):    virtual void process_unexpected_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(436):    virtual void process_unexpected_rej_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(441):    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(446):    virtual void process_unexpected_yes_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(451):    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(456):    virtual void process_bm_message(const DipMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(467):    virtual void process_hlo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(472):    virtual void process_map_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(476):    virtual void process_mdf_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(480):    virtual void process_ord_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(484):    virtual void process_sco_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(488):    virtual void process_now_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(492):    virtual void process_slo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(502):    virtual void report_failed_press
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(508):    virtual void report_failed_connect();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(513):    virtual void report_close(ProtocolError error);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(62):    virtual void SetState(StateId stid);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(78):    virtual void Deallocate();
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(104):    virtual void EndOfTransaction();
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(109):    virtual void ProcessIcMsg(Message& msg);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(67):    virtual void SetOgPsm(MediaPsm* ogPsm);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(72):    virtual void SetOgTone(Tone::Id ogTone);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(77):    virtual void SetIcTone(Tone::Id icTone);
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(47):    virtual bool SetMgwPsm(ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(156):    virtual const char* ClassName() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(57):    virtual void Initialize();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(62):    virtual Object* Create();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(66):    virtual Object* GetQuasiSingleton();
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(70):    virtual void FreeQuasiSingleton(Object* obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(71):    virtual void Exit();
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(111):    virtual ModuleId* Dependencies(size_t& count) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(82):    virtual Class* GetClass() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(90):    virtual void PostInitialize() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(101):    virtual InstanceId GetInstanceId() const;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(99):    virtual Pooled* DeqBlock(size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(104):    virtual void EnqBlock(Pooled* obj, bool deleted);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(210):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(292):    virtual bool EnqMsg(MsgBuffer& msg);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(298):    virtual MsgBuffer* DeqMsg(msecs_t timeout);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(124):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(71):    virtual size_t RxSize() const { return IoThread::MaxRxBuffSize; }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(75):    virtual size_t TxSize() const { return IoThread::MaxTxBuffSize; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(173):    virtual void Acquire();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(177):    virtual void Release();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(89):    virtual bool Unsubscribe(PotsProfile& profile);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(172):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(87):    virtual void DisplayStats(std::ostream& stream) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(169):    virtual void Save();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(174):    virtual void Unsave();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(182):    virtual bool Retrieve(ProtocolSM* psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(189):    virtual bool Relay(ProtocolSM& ogPsm);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(193):    virtual bool SendToSelf();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(250):    virtual void SetReceiver(const GlobalAddress& receiver);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(254):    virtual void SetSender(const GlobalAddress& sender);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(283):    virtual bool Restore();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(337):    virtual void Refresh();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(350):    virtual void Handled(bool retain);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(354):    virtual bool SendFailure(debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(362):    virtual void ClearContext() const;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(240):    virtual void SetState(StateId stid);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(295):    virtual Priority GetPriority() const { return NormalPriority; }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(300):    virtual void MsgHandled(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(306):    virtual void RestoreIcMsg(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(312):    virtual void RefreshMsg(Message& msg) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(141):    virtual void MorphToService(ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(79):    virtual SbIpBufferPtr Parse() = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(86):    virtual SbIpBufferPtr Build() = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(75):    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(181):    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(196):    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(200):    virtual void DeleteParm(TlvParmLayout& parm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(255):    virtual bool MatchParm(TlvParmPtr pptr, ParmIterator& pit, bool& last) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(260):    virtual void AddFence();
W078 Remove virtual tag: function is an override or final
  C:/Users/gregu/Documents/rsc/rsc/an/AnIncrement.cpp(76):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(49):    virtual const char* Name() const override { return "POTS Shelf"; }
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(50):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(51):    virtual Faction GetFaction() const override { return PayloadFaction; }
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(63):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(67):    virtual InputHandler* CreateHandler(IpPort* port) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(96):    virtual void ReceiveBuff
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(122):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(126):    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(130):    virtual void ProcessIcMsg(Message& msg) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(135):    virtual Message* AllocOgMsg(SignalId sid) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(139):    virtual bool InjectMsg(Message& msg) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(143):    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(109):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(96):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(153):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(157):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(161):    virtual msecs_t InitialMsecs() const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(165):    virtual bool ExitOnRestart(RestartLevel level) const override;
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(169):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(266):    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(271):    virtual TestRc InjectMsg
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(276):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.h(110):    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.h(115):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.h(95):    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.h(100):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(65):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(78):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(91):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(104):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(117):    virtual void DisplayMsg(ostream& stream, const string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(119):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(120):    virtual TestRc InjectMsg
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(122):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(153):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(161):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(169):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(177):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(216):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(236):    virtual void EnsureMediaMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(240):    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(244):    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(249):    virtual void InjectFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(258):    virtual void SendFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(287):    virtual SysTcpSocket* CreateAppSocket() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(291):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(304):    virtual const char* Name() const override { return "Call Interworking"; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(305):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(306):    virtual Faction GetFaction() const override { return PayloadFaction; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(318):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(322):    virtual InputHandler* CreateHandler(IpPort* port) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(343):    virtual const char* Name() const override { return "Call Interworking"; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(344):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(345):    virtual Faction GetFaction() const override { return PayloadFaction; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(346):    virtual size_t MaxConns() const override { return TcpIoThread::MaxConns; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(347):    virtual size_t MaxBacklog() const override { return 200; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(359):    virtual void GetAppSocketSizes
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(364):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(368):    virtual InputHandler* CreateHandler(IpPort* port) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(412):    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(416):    virtual Message* AllocOgMsg(SignalId sid) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(420):    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(441):    virtual ProtocolSM* AllocOgPsm(const Message& msg) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(445):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(466):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(470):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(476):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(333):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(349):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1122):    virtual void SetNextState(StateId stid) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1126):    virtual Event* RaiseProtocolError
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1131):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1146):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1162):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1235):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1245):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1255):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1265):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1275):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1301):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1306):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1311):    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(64):    virtual const char* PortName(PortId pid) const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(323):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(333):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(343):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(353):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(433):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(438):    virtual bool UsesIamTimer() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(442):    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(446):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(509):    virtual void SetUPsm(MediaPsm& psm) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(513):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(527):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(532):    virtual void EndOfTransaction() override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(536):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(561):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(566):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(572):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h(54):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h(58):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(79):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDir.h(81):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h(44):    virtual LibrarySet* Create
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h(46):    virtual LibrarySet* Files() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h(50):    virtual LibSetType GetType() const override { return DIR_SET; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h(54):    virtual NodeBase::word List
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h(59):    virtual NodeBase::word Show(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(291):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(44):    virtual LibrarySet* AffectedBy() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(45):    virtual LibrarySet* Affecters() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(46):    virtual LibrarySet* CommonAffecters() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(47):    virtual LibrarySet* Create
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(49):    virtual LibrarySet* Directories() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(50):    virtual LibrarySet* FileName(const LibrarySet* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(51):    virtual LibrarySet* FileType(const LibrarySet* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(52):    virtual LibrarySet* FoundIn(const LibrarySet* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(53):    virtual LibrarySet* Implements() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(54):    virtual LibrarySet* MatchString(const LibrarySet* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(55):    virtual LibrarySet* NeededBy() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(56):    virtual LibrarySet* Needers() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(57):    virtual LibrarySet* UsedBy(bool self) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(58):    virtual LibrarySet* Users(bool self) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(62):    virtual NodeBase::word Check
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(67):    virtual NodeBase::word Countlines(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(71):    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(76):    virtual NodeBase::word Format(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(80):    virtual LibSetType GetType() const override { return FILE_SET; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(84):    virtual NodeBase::word List
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(89):    virtual NodeBase::word Parse
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(94):    virtual NodeBase::word Scan(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(99):    virtual NodeBase::word Sort
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(104):    virtual NodeBase::word Show(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h(108):    virtual NodeBase::word Trim
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(153):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(193):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(361):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(517):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(586):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(622):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(668):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(723):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(770):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(829):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(874):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(920):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(968):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1023):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1071):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1112):       virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1198):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1322):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1353):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1390):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1440):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(1476):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(47):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(52):    virtual LibrarySet* Assign(LibrarySet* rhs) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(53):    virtual LibrarySet* Difference(const LibrarySet* rhs) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(54):    virtual LibrarySet* Intersection(const LibrarySet* rhs) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(55):    virtual LibrarySet* Union(const LibrarySet* rhs) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(59):    virtual NodeBase::word Count(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h(72):    virtual NodeBase::word PreAssign(std::string& expl) const override
  C:/Users/gregu/Documents/rsc/rsc/ct/CtModule.h(40):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CtModule.h(44):    virtual void Startup(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(139):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(143):    virtual CxxArea* GetArea() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(148):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(427):    virtual void AccessibilityTo
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(433):    virtual void AccessibilityOf(const CxxScope* scope,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(439):    virtual bool AddAnonymousUnion(const ClassPtr& cls) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(444):    virtual void AddFiles(SetOfIds& imSet) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(448):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(452):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(456):    virtual void CheckIfUsed(Warning warning) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(460):    virtual Class* Declarer() const override { return OuterClass(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(464):    virtual Class* DirectClass() const override { return GetClass(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(468):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(473):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(478):    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(483):    virtual Class* GetClass() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(489):    virtual void GetConvertibleTypes(StackArgVector& types) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(493):    virtual Cxx::Access GetCurrAccess() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(497):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(501):    virtual size_t GetRange(size_t& begin, size_t& end) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(505):    virtual CxxScope* GetTemplate() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(509):    virtual const TemplateParms* GetTemplateParms() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(515):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(520):    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(525):    virtual bool IsImplemented() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(529):    virtual Function* MatchFunc(const Function* curr, bool base) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(533):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(538):    virtual StackArg NameToArg(Cxx::Operator op) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(542):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(546):    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(550):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(554):    virtual Cxx::ItemType Type() const override { return Cxx::Class; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(559):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(564):    virtual bool WasWritten(const StackArg* arg, bool passed)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(573):    virtual void AddItem(CxxNamed* item) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(729):    virtual Class* BaseClass() const override { return tmplt_->BaseClass(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(736):    virtual bool DerivesFrom(const Class* cls) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(741):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(747):    virtual ClassInst* EnsureInstance(const TypeName* type)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(752):    virtual BaseDecl* GetBaseDecl() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(757):    virtual Class* GetClassTemplate() const override { return tmplt_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(761):    virtual CxxScope* GetTemplate() const override { return tmplt_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(765):    virtual TypeName* GetTemplateArgs() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(769):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(774):    virtual bool Instantiate() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(778):    virtual bool IsInTemplateInstance() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(782):    virtual void RecordUsage() const override { tmplt_->RecordUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(786):    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(790):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(795):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(854):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(858):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(864):    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(869):    virtual CxxScoped* FindItem(const std::string& name) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(873):    virtual Class* GetClass() const override { return nullptr; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(877):    virtual Cxx::Access GetCurrAccess() const override { return Cxx::Public; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(881):    virtual Namespace* GetSpace() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(886):    virtual bool IsInTemplateInstance() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(890):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(894):    virtual void SetLoc(CodeFile* file, size_t pos) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(898):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(902):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(906):    virtual Cxx::ItemType Type() const override { return Cxx::Namespace; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(910):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(915):    virtual void AccessibilityOf(const CxxScope* scope,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(48):    virtual void EnterBlock() override { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(52):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(72):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(76):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(110):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(115):    virtual void SetScope(CxxScope* scope) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(119):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(143):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(148):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(172):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(176):    virtual CxxScope* GetScope() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(180):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(185):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(189):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(194):    virtual std::string QualifiedName
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(199):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(203):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(207):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(255):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(260):    virtual Numeric GetNumeric() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(264):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(268):    virtual bool IsUnused() const override { return (refs_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(272):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(276):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(280):    virtual CxxToken* RootType() const override { return GetValue(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(284):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(288):    virtual Cxx::ItemType Type() const override { return Cxx::Macro; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(292):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(296):    virtual bool WasRead() override { ++refs_; return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(340):    virtual CxxToken* AutoType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(344):    virtual bool IsDefined() const override { return defined_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(349):    virtual void SetExpr(ExprPtr& rhs) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(353):    virtual CxxToken* GetValue() const override { return value_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(357):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(362):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(366):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(423):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(469):    virtual void AddCondition(ExprPtr& c) override { condition_ = std::move(c); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(473):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(478):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(482):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(487):    virtual void Shrink() override { ShrinkExpression(condition_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(511):    virtual bool AddElse(const Else* e) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(515):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(520):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(525):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(529):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(566):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(571):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(591):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(596):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(616):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(637):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(642):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(662):    virtual bool AddElif(Elif* e) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(666):    virtual bool AddElse(const Else* e) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(670):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(675):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(680):    virtual bool HasCompiledCode() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(684):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(712):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(717):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(737):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(766):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(787):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(792):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h(812):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(65):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(77):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(93):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(109):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(129):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(78):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(345):    virtual Class* GetClass() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(349):    virtual Namespace* GetSpace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(353):    virtual std::string Trace() const override { return ScopedName(true); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(442):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(447):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(451):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(456):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(460):    virtual std::string Trace() const override { return name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(579):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(583):    virtual CxxNamed* DirectType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(587):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(591):    virtual TypeName* GetTemplateArgs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(595):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(600):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(604):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(609):    virtual std::string QualifiedName
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(614):    virtual CxxNamed* Referent() const override { return ref_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(618):    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(622):    virtual void SetReferent
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(627):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(632):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(781):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(785):    virtual void CopyContext(const CxxNamed* that) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(789):    virtual CxxNamed* DirectType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(794):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(798):    virtual QualName* GetQualName() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(803):    virtual TypeName* GetTemplateArgs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(807):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(812):    virtual const std::string* Name() const override { return Last()->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(816):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(821):    virtual std::string QualifiedName
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(826):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(830):    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(834):    virtual bool ResolveTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(844):    virtual void SetReferent
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(849):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(853):    virtual Cxx::ItemType Type() const override { return Cxx::QualName; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(857):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1170):    virtual Cxx::ItemType Type() const override { return Cxx::TypeSpec; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1250):    virtual void AddArray(ArraySpecPtr& array) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1255):    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1260):    virtual TagCount Arrays() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1264):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1269):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1273):    virtual TypeSpec* Clone() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1277):    virtual void CopyContext(const CxxNamed* that) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1282):    virtual Class* DirectClass() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1286):    virtual CxxNamed* DirectType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1290):    virtual void DisplayArrays(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1294):    virtual void DisplayTags(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1298):    virtual void EnterArrays() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1302):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1307):    virtual void EnteringScope(const CxxScope* scope) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1312):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1316):    virtual Numeric GetNumeric() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1320):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1324):    virtual TypeTags GetAllTags() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1328):    virtual TypeSpec* GetTypeSpec() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1332):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1337):    virtual bool HasArrayDefn() const override { return (arrays_ == nullptr); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1341):    virtual void Instantiating() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1346):    virtual bool IsAuto() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1350):    virtual bool ItemIsTemplateArg(const CxxScoped* item) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1354):    virtual bool IsConst() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1358):    virtual bool IsConstPtr() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1362):    virtual bool IsConstPtr(size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1366):    virtual bool IsIndirect() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1370):    virtual bool MatchesExactly(const TypeSpec* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1374):    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1380):    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1384):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1388):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1394):    virtual TagCount Ptrs(bool arrays) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1398):    virtual std::string QualifiedName(bool scopes, bool templates) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1403):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1408):    virtual TagCount Refs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1412):    virtual void RemoveRefs() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1417):    virtual bool ResolveForward(CxxScoped* decl, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1421):    virtual bool ResolveTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1426):    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1431):    virtual StackArg ResultType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1435):    virtual CxxToken* RootType() const override { return Referent(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1440):    virtual void SetPtrs(TagCount count) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1444):    virtual void SetReferent
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1450):    virtual void SetTemplateRole(TemplateRole role) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1454):    virtual void SetUserType(Cxx::ItemType user) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1458):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1462):    virtual TypeTags* Tags() override { return &tags_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1463):    virtual const TypeTags* Tags() const override { return &tags_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1468):    virtual std::string Trace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1473):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1477):    virtual std::string TypeTagsString(const TypeTags& tags) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1481):    virtual bool WasWritten(const StackArg* arg, bool passed)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1521):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1525):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1529):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1534):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1538):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1585):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1589):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1594):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1598):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(65):    virtual CxxToken* GetValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(66):    virtual CxxNamed* Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(108):    virtual CxxToken* GetValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(109):    virtual CxxNamed* Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(157):    virtual CxxToken* GetValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(158):    virtual CxxNamed* Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(206):    virtual CxxToken* GetValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(207):    virtual CxxNamed* Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(248):    virtual CxxToken* GetValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(249):    virtual CxxNamed* Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(294):    virtual const char* Name() const override { return ParserTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp(295):    virtual const char* Expl() const override { return ParserTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.h(78):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.h(83):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.h(87):    virtual void Startup(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(187):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(194):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(200):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(204):    virtual Function* GetFunction() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(208):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(213):    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(218):    virtual bool InLine() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(222):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(226):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(232):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(236):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(240):    virtual Cxx::ItemType Type() const override { return Cxx::Block; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(337):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(341):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(345):    virtual CodeFile* GetDeclFile() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(350):    virtual CodeFile* GetDefnFile() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(355):    virtual CxxNamed* GetMate() const override { return mate_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(359):    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(363):    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(367):    virtual TypeName* GetTemplateArgs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(371):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(376):    virtual bool IsConst() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(380):    virtual bool IsInitializing() const override { return initing_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(384):    virtual bool IsStatic() const override { return static_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(388):    virtual bool IsUnused() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(393):    virtual StackArg NameToArg(Cxx::Operator op) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(397):    virtual bool SetNonConst() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(401):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(405):    virtual Cxx::ItemType Type() const override { return Cxx::Data; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(409):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(413):    virtual bool WasRead() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(417):    virtual bool WasWritten(const StackArg* arg, bool passed) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(485):    virtual CxxToken* RootType() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(570):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(574):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(579):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(583):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(587):    virtual const TemplateParms* GetTemplateParms() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(592):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(596):    virtual std::string QualifiedName(bool scopes, bool templates) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(601):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(605):    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(609):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(613):    virtual void GetInitName(QualNamePtr& qualName) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(663):    virtual StackArg NameToArg(Cxx::Operator op) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(668):    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(672):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(676):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(681):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(685):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(689):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(694):    virtual bool IsUnionMember() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(698):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(703):    virtual void Promote
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(708):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(712):    virtual void WasMutated(const StackArg* arg) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(716):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(720):    virtual std::string Trace() const override {return *Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(724):    virtual bool WasWritten(const StackArg* arg, bool passed) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(728):    virtual void CheckAccessControl() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(796):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(800):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(805):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(809):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(813):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(818):    virtual bool InLine() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(822):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(826):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(831):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(835):    virtual std::string Trace() const override {return *Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1126):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1130):    virtual void CheckAccessControl() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1134):    virtual void CheckIfHiding() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1138):    virtual void CheckIfUsed(Warning warning) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1142):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1147):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1151):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1155):    virtual CodeFile* GetDeclFile() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1159):    virtual CodeFile* GetDefnFile() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1163):    virtual Function* GetFunction()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1169):    virtual CxxNamed* GetMate() const override { return mate_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1173):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1178):    virtual size_t GetRange(size_t& begin, size_t& end) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1182):    virtual CxxScope* GetScope() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1190):    virtual CxxScope* GetTemplate() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1194):    virtual const TemplateParms* GetTemplateParms() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1199):    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1204):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1209):    virtual bool IsConst() const override { return const_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1213):    virtual bool IsImplemented() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1217):    virtual bool IsInTemplateInstance() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1221):    virtual bool IsStatic() const override { return static_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1225):    virtual bool IsUnused() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1229):    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1233):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1237):    virtual std::string QualifiedName(bool scopes, bool templates) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1242):    virtual void RecordUsage() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1246):    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1250):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1254):    virtual Cxx::ItemType Type() const override { return Cxx::Function; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1259):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1263):    virtual void WasCalled() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1267):    virtual bool WasRead() override { ++calls_; return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1580):    virtual Function* GetFuncSpec() const override { return func_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1581):    virtual CxxNamed* Referent() const override { return func_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1582):    virtual CxxToken* RootType() const override { return func_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1586):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1588):    virtual void EnteringScope(const CxxScope* scope) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1589):    virtual bool IsConst() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1590):    virtual const std::string* Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1591):    virtual std::string Trace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1592):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1593):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1597):    virtual void AddArray(ArraySpecPtr& array) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1598):    virtual TagCount Arrays() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1599):    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1600):    virtual void DisplayArrays(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1601):    virtual void DisplayTags(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1602):    virtual TypeTags GetAllTags() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1603):    virtual TypeSpec* GetTypeSpec() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1604):    virtual bool HasArrayDefn() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1605):    virtual TagCount Ptrs(bool arrays) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1606):    virtual TagCount Refs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1607):    virtual void RemoveRefs() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1608):    virtual StackArg ResultType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1609):    virtual void SetPtrs(TagCount count) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1610):    virtual TypeTags* Tags() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1611):    virtual const TypeTags* Tags() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1612):    virtual std::string TypeTagsString(const TypeTags& tags) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1617):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1618):    virtual TypeName* GetTemplateArgs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1619):    virtual void Instantiating() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1620):    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1621):    virtual bool ItemIsTemplateArg(const CxxScoped* item) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1622):    virtual bool MatchesExactly(const TypeSpec* that) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1623):    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1629):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1630):    virtual void EnterArrays() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1631):    virtual void SetReferent
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1637):    virtual TypeSpec* Clone() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(103):    virtual Cxx::Access GetAccess() const override { return access_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(108):    virtual size_t GetRange(size_t& begin, size_t& end) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(112):    virtual CxxScope* GetScope() const override { return scope_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(116):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(121):    virtual bool IsConst() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(126):    virtual bool IsConstPtr() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(131):    virtual bool IsConstPtr(size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(136):    virtual bool IsDeclaredInFunction() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(141):    virtual bool IsAuto() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(146):    virtual bool IsIndirect() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(155):    virtual bool IsSuperscopeOf
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(160):    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(164):    virtual void SetAccess(Cxx::Access access) override { access_ = access; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(168):    virtual void SetScope(CxxScope* scope) override { scope_ = scope; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(237):    virtual CxxToken* AutoType() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(241):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(245):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(249):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(254):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(258):    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(262):    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(266):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(271):    virtual bool InLine() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(275):    virtual bool IsStatic() const override { return (name_ != THIS_STR); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(279):    virtual bool IsUnused() const override { return ((reads_ + writes_) == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(283):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(287):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(292):    virtual bool SetNonConst() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(296):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(300):    virtual Cxx::ItemType Type() const override { return Cxx::Argument; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(304):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(308):    virtual bool WasRead() override { ++reads_; return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(312):    virtual bool WasWritten(const StackArg* arg, bool passed) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(316):    virtual CxxToken* RootType() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(369):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(373):    virtual Class* GetClass() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(377):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(381):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(386):    virtual bool InLine() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(390):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(394):    virtual std::string QualifiedName(bool scopes, bool templates) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(399):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(403):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(407):    virtual void SetAccess(Cxx::Access access) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(411):    virtual void Shrink() override{ name_->Shrink(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(415):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(419):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(464):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(468):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(473):    virtual void CheckAccessControl() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(477):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(482):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(486):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(492):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(496):    virtual Numeric GetNumeric() const override { return Numeric::Enum; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(501):    virtual TypeSpec* GetTypeSpec() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(505):    virtual bool IsUnused() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(509):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(513):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(517):    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(521):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(525):    virtual Cxx::ItemType Type() const override { return Cxx::Enum; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(529):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(534):    virtual bool WasWritten(const StackArg* arg, bool passed)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(571):    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(575):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(579):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(584):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(588):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(594):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(598):    virtual bool WasRead() override { ++refs_; return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(602):    virtual Numeric GetNumeric() const override { return Numeric::Enum; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(607):    virtual void GetScopedNames(stringVector& names) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(611):    virtual bool IsUnused() const override { return (refs_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(615):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(619):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(623):    virtual void RecordAccess(Cxx::Access access) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(627):    virtual void RecordUsage() const override { AddUsage(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(631):    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(635):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(639):    virtual Cxx::ItemType Type() const override { return Cxx::Enumerator; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(643):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(679):    virtual CxxToken* AutoType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(683):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(687):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(692):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(696):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(700):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(704):    virtual const TemplateParms* GetTemplateParms() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(709):    virtual bool IsUnused() const override { return (users_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(713):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(717):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(721):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(725):    virtual void SetAsReferent(const CxxNamed* user) override { ++users_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(729):    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(733):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(737):    virtual Cxx::ItemType Type() const override { return Cxx::Forward; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(741):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(745):    virtual CxxToken* RootType() const override { return Referent(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(807):    virtual CxxToken* AutoType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(811):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(816):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(821):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(825):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(829):    virtual Function* GetFunction() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(833):    virtual QualName* GetQualName() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(837):    virtual const TemplateParms* GetTemplateParms() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(842):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(847):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(851):    virtual bool IsUnused() const override { return (users_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(855):    virtual const std::string* Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(859):    virtual std::string QualifiedName
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(864):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(869):    virtual bool ResolveTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(874):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(879):    virtual void SetAsReferent(const CxxNamed* user) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(883):    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(887):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(891):    virtual Cxx::ItemType Type() const override { return Cxx::Friend; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(895):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(899):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(903):    virtual bool ResolveForward(CxxScoped* decl, size_t n) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(907):    virtual CxxToken* RootType() const override { return Referent(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(911):    virtual void SetReferent
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(988):    virtual bool IsAuto() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(992):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(996):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1001):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1005):    virtual bool EnterScope() override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1009):    virtual NodeBase::id_t GetDeclFid() const override
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1014):    virtual Numeric GetNumeric() const override { return attrs_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1018):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1022):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1026):    virtual Cxx::ItemType Type() const override { return Cxx::Terminal; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1030):    virtual std::string TypeString(bool arg) const override { return type_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1035):    virtual bool WasWritten(const StackArg* arg, bool passed)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1069):    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1073):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1077):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1082):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1087):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1091):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1095):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1099):    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1103):    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1107):    virtual TypeName* GetTemplateArgs() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1111):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1116):    virtual bool IsUnused() const override { return (refs_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1120):    virtual const std::string* Name() const override { return &name_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1124):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1128):    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1132):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1136):    virtual Cxx::ItemType Type() const override { return Cxx::Typedef; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1140):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1145):    virtual bool WasWritten(const StackArg* arg, bool passed)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1150):    virtual CxxToken* RootType() const override { return spec_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1209):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1214):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1219):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1223):    virtual bool EnterScope() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1227):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1231):    virtual QualName* GetQualName() const override { return name_.get(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1235):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1239):    virtual bool IsUnused() const override { return (users_ == 0); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1243):    virtual const std::string* Name() const override { return name_->Name(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1247):    virtual std::string QualifiedName(bool scopes, bool templates) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1252):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1256):    virtual bool ResolveTypedef(Typedef* type, size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1261):    virtual std::string ScopedName(bool templates) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1265):    virtual void SetScope(CxxScope* scope) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1269):    virtual void Shrink() override { name_->Shrink(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1273):    virtual void FindReferent() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(43):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(59):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(61):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(62):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(64):    virtual void Shrink() override { ShrinkExpression(condition_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(81):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(83):    virtual void EnterBlock() override { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(95):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(97):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(98):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(100):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(101):    virtual void Shrink() override { ShrinkExpression(expr_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(117):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(118):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(120):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(121):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(122):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(124):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(125):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(140):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(142):    virtual void EnterBlock() override { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(155):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(156):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(158):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(160):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(161):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(163):    virtual bool InLine() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(164):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(178):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(180):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(181):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(183):    virtual void Shrink() override { ShrinkExpression(expr_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(200):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(201):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(203):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(205):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(206):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(207):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(209):    virtual bool InLine() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(210):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(229):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(230):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(232):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(234):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(235):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(237):    virtual bool InLine() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(238):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(239):    virtual Cxx::ItemType Type() const override { return Cxx::If; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(255):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(257):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(258):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(259):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(260):    virtual void Shrink() override { name_.shrink_to_fit(); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(274):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(276):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(278):    virtual void EnterBlock() override { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(279):    virtual bool InLine() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(280):    virtual Cxx::ItemType Type() const override { return Cxx::NoOp; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(293):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(295):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(296):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(298):    virtual void Shrink() override { ShrinkExpression(expr_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(314):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(315):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(317):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(318):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(320):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(321):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(338):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(339):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(341):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(342):    virtual void ExitBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(343):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(345):    virtual bool InLine() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(346):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(362):    virtual void Check() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(363):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(365):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(367):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(368):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(370):    virtual bool InLine() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h(371):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(160):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(164):    virtual void Startup(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(270):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(311):    virtual CxxToken* AutoType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(315):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(319):    virtual const std::string* Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(323):    virtual std::string Trace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(327):    virtual Cxx::ItemType Type() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(335):    virtual CxxToken* RootType() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(379):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(381):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(382):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(384):    virtual Numeric GetNumeric() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(421):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(423):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(424):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(426):    virtual Numeric GetNumeric() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(441):    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(443):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(444):    virtual std::string TypeString(bool arg) const override { return BOOL_STR; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(446):    virtual Numeric GetNumeric() const override { return Numeric::Bool; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(460):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(462):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(463):    virtual std::string TypeString(bool arg) const override { return CHAR_STR; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(465):    virtual Numeric GetNumeric() const override { return Numeric::Char; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(480):    virtual TypeSpec* GetTypeSpec() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(481):    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(483):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(484):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(485):    virtual std::string TypeString(bool arg) const override { return "char*"; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(489):    virtual Numeric GetNumeric() const override { return Numeric::Pointer; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(503):    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(505):    virtual bool IsConstPtr() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(506):    virtual bool IsConstPtr(size_t n) const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(507):    virtual CxxNamed* Referent() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(508):    virtual std::string TypeString(bool arg)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(511):    virtual Numeric GetNumeric() const override { return Numeric::Pointer; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(571):    virtual bool AppendUnary() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(576):    virtual CxxToken* Back() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(580):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(585):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(589):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(594):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(598):    virtual std::string Trace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(602):    virtual Cxx::ItemType Type() const override { return Cxx::Operation; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(696):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(698):    virtual void EnterBlock() override { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(699):    virtual Cxx::ItemType Type() const override { return Cxx::Elision; }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(712):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(714):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(715):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(717):    virtual void Shrink() override { ShrinkExpression(expr_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(733):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(735):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(736):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(738):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(784):    virtual CxxToken* Back() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(788):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(794):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(798):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(803):    virtual void Shrink() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(807):    virtual std::string Trace() const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(856):    virtual void Print
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(861):    virtual void EnterBlock() override;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(865):    virtual void GetUsages
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(870):    virtual void Shrink() override { ShrinkExpression(expr_); }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(874):    virtual std::string TypeString(bool arg) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(154):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(159):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(163):    virtual void Startup(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(61):    virtual NodeBase::word Check
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(66):    virtual NodeBase::word Count(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(70):    virtual NodeBase::word Countlines(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(74):    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(79):    virtual NodeBase::word Format(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(83):    virtual LibSetType GetType() const override { return ERR_SET; }
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(87):    virtual NodeBase::word List
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(92):    virtual NodeBase::word Parse
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(97):    virtual NodeBase::word PreAssign(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(101):    virtual NodeBase::word Scan(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(106):    virtual NodeBase::word Show(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(110):    virtual NodeBase::word Sort
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h(115):    virtual NodeBase::word Trim
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryItem.h(47):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(182):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryVarSet.h(44):    virtual NodeBase::word Count(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryVarSet.h(48):    virtual LibSetType GetType() const override { return VAR_SET; }
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryVarSet.h(52):    virtual NodeBase::word Show(std::string& result) const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(105):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(78):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(98):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(102):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(106):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(68):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(72):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(76):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(80):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.cpp(45):    virtual const char* Name() const override { return BotTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.cpp(46):    virtual const char* Expl() const override { return BotTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(52):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(56):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(219):    virtual const char* Name() const override { return "Diplomacy"; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(220):    virtual ipport_t Port() const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(221):    virtual Faction GetFaction() const override { return PayloadFaction; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(222):    virtual bool AcceptsConns() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(223):    virtual size_t MaxConns() const override { return 4; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(224):    virtual size_t MaxBacklog() const override { return 0; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(225):    virtual bool Keepalive() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(233):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(246):    virtual void GetAppSocketSizes
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(251):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(255):    virtual InputHandler* CreateHandler(IpPort* port) const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(280):    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(285):    virtual void NetworkToHost(IpBuffer& buff,
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(290):    virtual void ReceiveBuff
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(295):    virtual byte_t* HostToNetwork(IpBuffer& buff,
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(300):    virtual void SocketFailed(SysSocket* socket) const override;
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(329):    virtual size_t PayloadSize() const override { return currSize_; }
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(333):    virtual bool AddBytes
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(338):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h(76):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h(82):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(59):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(65):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h(70):    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h(80):    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h(85):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(140):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(144):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(188):    virtual Event* ReceiveMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(192):    virtual void PrepareOgMsgq() override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h(196):    virtual void EndOfTransaction() override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(51):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(55):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h(70):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Switch.h(88):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.h(61):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(71):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(100):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(109):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(118):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(127):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(136):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(145):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(154):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(163):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(172):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(181):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/AllocationException.h(50):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/AllocationException.h(55):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/AssertionException.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/AssertionException.h(53):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(43):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(56):    virtual void Explain(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(61):    virtual std::string GetCurr() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(66):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(46):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(51):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(59):    virtual bool GetCurrValue() const override { return *curr_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(63):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(67):    virtual bool SetNextValue(bool value) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(57):    virtual bool GetCurrValue() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(61):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(65):    virtual bool SetNextValue(bool value) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(67):    virtual void Explain(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(72):    virtual std::string GetCurr() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(76):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(81):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(79):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(84):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.h(97):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.h(101):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.h(106):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(57):    virtual void Explain(std::string& expl) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(61):    virtual std::string GetCurr() const override { return *curr_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(65):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(71):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(101):    virtual bool SetNext(const std::string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(105):    virtual std::string GetInput() const override { return input_; }
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(95):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(100):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h(51):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h(56):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h(77):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h(82):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h(86):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(86):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(90):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(95):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ClassRegistry.h(53):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ClassRegistry.h(58):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h(70):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h(75):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBoolParm.h(48):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBoolParm.h(52):    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBoolParm.h(56):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBuffer.h(114):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliBuffer.h(119):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(57):    virtual Rc GetCharParmRc(char& c, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(61):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(55):    virtual Rc GetIntParmRc(word& n, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(59):    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(63):    virtual Rc GetCharParmRc(char& c, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(67):    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(71):    virtual Rc GetTextParmRc
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(76):    virtual Rc GetStringRc(std::string& s, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(80):    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(84):    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(94):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(126):    virtual bool Ascend() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h(48):    virtual bool BindParm(CliParm& parm) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h(52):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h(67):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCookie.h(81):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCookie.h(86):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(83):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(88):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(58):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(63):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(67):    virtual Rc GetIntParmRc(word& n, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(71):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(273):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(278):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h(47):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h(51):    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h(55):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliRegistry.h(69):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliRegistry.h(74):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliStack.h(67):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliStack.h(72):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(78):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(86):    virtual CliParm* AccessParm
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(91):    virtual void Explain(std::ostream& stream, col_t indent) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(95):    virtual Rc GetTextParmRc
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(100):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(64):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(69):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(73):    virtual CliParm* AccessParm
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(78):    virtual void Explain(std::ostream& stream, col_t indent) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(82):    virtual Rc GetTextParmRc
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(87):    virtual Rc GetStringRc(std::string& s, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(91):    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(95):    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h(100):    virtual bool ShowValues(std::string& values) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(165):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(169):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(174):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(221):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(226):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(230):    virtual void Recreated() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(234):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(238):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h(52):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h(64):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h(68):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h(72):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Dynamic.h(47):    virtual MemoryType MemType() const override { return MemDyn; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Dynamic.h(51):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Element.h(70):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Element.h(75):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ElementException.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ElementException.h(61):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h(74):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(71):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(76):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp(80):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(69):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(81):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(85):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(89):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.h(80):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Immutable.h(46):    virtual MemoryType MemType() const override { return MemImm; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Immutable.h(50):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h(47):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h(52):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h(106):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h(112):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h(116):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/LeakyBucketCounter.h(61):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/LeakyBucketCounter.h(66):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h(43):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h(48):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h(66):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h(70):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h(74):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.h(49):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.h(53):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(118):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(123):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(131):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Module.h(136):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h(59):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h(95):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h(99):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h(66):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h(71):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(115):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(206):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(285):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(521):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(561):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(608):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(716):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(757):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(960):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1113):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1197):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1253):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1314):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1348):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1452):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1511):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1592):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1812):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1963):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2220):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2260):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2335):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2562):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2625):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2794):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2863):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(44):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(70):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(72):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(99):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(101):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(129):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(131):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(158):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(160):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(188):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(190):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(216):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(218):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(250):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(252):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h(40):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h(52):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h(56):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbPools.h(45):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbPools.h(49):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbPools.h(72):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbPools.h(76):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(53):    virtual const char* Name() const override { return TraceBufferToolName; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(54):    virtual const char* Expl() const override { return TraceBufferToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(70):    virtual const char* Name() const override { return FunctionTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(71):    virtual const char* Expl() const override { return FunctionTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(72):    virtual string Status() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(100):    virtual const char* Name() const override { return MemoryTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(101):    virtual const char* Expl() const override { return MemoryTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(61):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(117):    virtual MemoryType MemType() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(81):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(186):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(190):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(194):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(199):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h(47):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h(52):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h(73):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h(77):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h(81):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.cpp(55):    virtual const char* Name() const override { return ObjPoolTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.cpp(56):    virtual const char* Expl() const override { return ObjPoolTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.cpp(66):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h(60):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h(64):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h(68):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h(73):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolTrace.h(53):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolTrace.h(57):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Permanent.h(48):    virtual MemoryType MemType() const override { return MemPerm; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Permanent.h(52):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(67):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(73):    virtual void Claim() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(77):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(82):    virtual MemoryType MemType() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(86):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(44):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(49):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h(73):    virtual Object* New(size_t size) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(89):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(94):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.h(74):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.h(79):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Protected.h(47):    virtual MemoryType MemType() const override { return MemProt; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Protected.h(51):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h(50):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h(55):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h(75):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h(82):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h(86):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SignalException.h(51):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SignalException.h(56):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.h(64):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.h(69):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.h(73):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h(52):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h(57):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(70):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(75):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(146):    virtual void DisplayStat(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(150):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(198):    virtual uint64_t Overall() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(202):    virtual void DisplayStat(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(206):    virtual void StartInterval(bool first) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(234):    virtual uint64_t Overall() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(238):    virtual void DisplayStat(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h(242):    virtual void StartInterval(bool first) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h(78):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(93):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(97):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(102):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(43):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(48):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(87):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(92):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h(96):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(76):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(81):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h(85):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(82):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(87):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SymbolRegistry.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SymbolRegistry.h(78):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(42):    virtual void GetName(string& fileName) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(43):    virtual bool IsSubdir() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(44):    virtual bool AtEnd() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(45):    virtual bool Advance() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(91):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(96):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.h(78):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.h(83):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(159):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(164):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(143):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(148):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Temporary.h(46):    virtual MemoryType MemType() const override { return MemTemp; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Temporary.h(50):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(92):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(100):    virtual bool IsFirstAfterContextSwitch() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(104):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(757):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(243):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(248):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(252):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(257):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(303):    virtual void Claim() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(308):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(78):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(89):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(143):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(147):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(151):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(156):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.cpp(45):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(74):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(78):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(82):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(86):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(91):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/TimedRecord.h(71):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(74):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h(79):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/ToolRegistry.h(68):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nb/ToolRegistry.h(73):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(66):    virtual bool Display(ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(228):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(232):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(236):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.h(75):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(194):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(634):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1082):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1090):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1181):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1198):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1223):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1231):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1239):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1247):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1255):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1263):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1271):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1279):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1287):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1295):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1693):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1710):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1735):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1743):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1751):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1759):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1767):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1775):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1783):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1791):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1799):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1807):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1815):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2259):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2275):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2315):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2323):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2331):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2339):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2347):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2355):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2363):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2371):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2379):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2853):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2861):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2869):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2877):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2885):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2893):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2901):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2909):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2917):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2925):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2933):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2941):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2949):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2957):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3441):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3449):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3450):    virtual bool IsCritical() const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3451):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3452):    virtual RecoveryAction Recover() override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3453):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3723):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(59):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(61):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(87):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(113):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(129):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(163):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h(165):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.h(86):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.h(80):    virtual void Shutdown(NodeBase::RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(141):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(146):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(59):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(64):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h(89):    virtual bool ExitOnRestart(RestartLevel level) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(147):    virtual TraceStatus GetStatus() const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(151):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(156):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(164):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(132):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(136):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(140):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(145):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(57):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(62):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(66):    virtual bool SetNextValue(word value) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(71):    virtual RestartLevel RestartRequired() const override { return RestartCold; }
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(54):    virtual void SetCurr() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(56):    virtual bool SetNext(const string& input) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(114):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h(71):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h(75):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h(79):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h(84):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(115):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(119):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(124):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h(54):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h(58):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h(63):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.cpp(226):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.cpp(325):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(59):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(85):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(111):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(126):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(139):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(42):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(54):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(58):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.h(80):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.h(84):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.cpp(47):    virtual const char* Name() const override { return NetworkTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.cpp(48):    virtual const char* Expl() const override { return NetworkTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(87):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(92):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(102):    virtual std::string to_str() const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(119):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(124):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(158):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(163):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(152):    virtual IpProtocol Protocol() const override { return IpTcp; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(156):    virtual AllocRc SetService(const IpService* service, bool shared) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(198):    virtual SendRc SendBuff(IpBuffer& buff) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(202):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(206):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(211):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(76):    virtual IpProtocol Protocol() const override { return IpUdp; }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(80):    virtual SendRc SendBuff(IpBuffer& buff) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(84):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h(89):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(60):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(64):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(69):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(77):    virtual void Unblock() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(81):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(85):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h(89):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.h(47):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.h(51):    virtual IoThread* CreateIoThread() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.h(55):    virtual SysTcpSocket* CreateAppSocket() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(58):    virtual IpProtocol Protocol() const override { return IpTcp; }
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(64):    virtual bool HasSharedSocket() const override { return false; }
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(68):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(73):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h(86):    virtual IpPort* CreatePort(ipport_t pid) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(50):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(58):    virtual void Unblock() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(62):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(66):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(70):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.h(47):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.h(51):    virtual IoThread* CreateIoThread() override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h(37):    virtual IpProtocol Protocol() const override { return IpUdp; }
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h(42):    virtual bool HasSharedSocket() const override { return true; }
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h(46):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h(59):    virtual IpPort* CreatePort(ipport_t pid) override;
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h(40):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h(41):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h(53):    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(41):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(42):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h(57):    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h(40):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h(41):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h(53):    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(149):    virtual std::string Name() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(153):    virtual bool Supports(ProtocolId prid) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h(158):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(95):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h(67):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h(58):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h(63):    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h(64):    virtual bool Deactivate(PotsProfile& profile) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(42):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(43):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h(55):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(112):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(155):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(184):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(230):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(268):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(341):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(397):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(481):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(519):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(622):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(666):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(722):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp(793):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h(43):    virtual void DisplaySizes(CliThread& cli, bool all) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h(45):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(138):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(142):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h(146):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h(71):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h(75):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h(79):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(57):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(70):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(83):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(96):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(109):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(122):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(135):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(143):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(161):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(174):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(196):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(208):    virtual void DisplayMsg(ostream& stream, const string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(210):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(211):    virtual TestRc InjectMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(213):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(242):    virtual void DisplayMsg(ostream& stream, const string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(244):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(245):    virtual TestRc InjectMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(247):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(275):    virtual void DisplayMsg(ostream& stream, const string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(277):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(278):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(292):    virtual void DisplayMsg(ostream& stream, const string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(294):    virtual CliParm* CreateCliParm(Usage use) const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(295):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(418):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(427):    virtual void EnsureMediaMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(431):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(435):    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(439):    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(443):    virtual void SendFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(447):    virtual void InjectFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.h(38):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.h(39):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(41):    virtual CliText* Attrs() const override;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(42):    virtual PotsFeatureProfile* Subscribe
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h(57):    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(75):    virtual void Display(ostream& stream, const string& prefix) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(79):    virtual const char* what() const noexcept override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(171):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(175):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(180):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(202):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(135):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(140):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(180):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(184):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(188):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(193):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.cpp(46):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h(53):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h(57):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h(61):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h(66):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(89):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(94):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(75):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(80):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(95):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(99):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(104):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(203):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.cpp(46):    virtual void DisplayStats(ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h(64):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h(68):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h(72):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h(77):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(75):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(80):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(106):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(111):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(116):    virtual bool BlockingAllowed(BlockingReason why, fn_name_arg func) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(120):    virtual void ScheduledIn(fn_name_arg func) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(124):    virtual TraceStatus CalcStatus(bool dynamic) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h(129):    virtual RecoveryAction Recover() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(299):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(303):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(308):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h(42):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h(54):    virtual ContextType Type() const override { return SingleMsg; }
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h(58):    virtual void EndOfTransaction() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h(62):    virtual void ProcessIcMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h(41):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h(53):    virtual Context* AllocContext() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h(64):    virtual Rc ReceiveMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(94):    virtual MsgPort* Port() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(98):    virtual ProtocolSM* UppermostPsm() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(102):    virtual FactoryId GetFactory()
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(108):    virtual ProtocolLayer* JoinPeer
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(113):    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(117):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(122):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(130):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(134):    virtual void AdjacentDeleted(bool upper) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(138):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(146):    virtual ProtocolLayer* AllocUpper(const Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(150):    virtual Event* ReceiveMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(155):    virtual bool SendMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(160):    virtual Message* WrapMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(156):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(161):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(121):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h(126):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(130):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(135):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.h(59):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(144):    virtual FactoryId GetFactory() const override { return fid_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(177):    virtual MsgPort* Port() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(181):    virtual ProtocolSM* UppermostPsm() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(188):    virtual ProtocolLayer* JoinPeer
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(194):    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(198):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(202):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(207):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(246):    virtual Event* ReceiveMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(250):    virtual bool SendMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(254):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(260):    virtual ProtocolLayer* AllocLower(const Message* msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(265):    virtual Message* UnwrapMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(43):    virtual ProtocolSM* FirstPsm() const override { return psmq_.First(); }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(47):    virtual void NextPsm(ProtocolSM*& psm) const override { psmq_.Next(psm); }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(51):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(55):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(60):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(76):    virtual ContextType Type() const override { return SinglePort; }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(80):    virtual MsgPort* FirstPort() const override { return portq_.First(); }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(84):    virtual void NextPort(MsgPort*& port) const override { portq_.Next(port); }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(89):    virtual void EndOfTransaction() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(93):    virtual bool IsIdle() const override { return psmq_.Empty(); }
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(97):    virtual void EnqPsm(ProtocolSM& psm) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(101):    virtual void HenqPsm(ProtocolSM& psm) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(105):    virtual void ExqPsm(ProtocolSM& psm) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(109):    virtual void EnqPort(MsgPort& port) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(113):    virtual void ExqPort(MsgPort& port) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h(117):    virtual void ProcessIcMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.h(41):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.h(53):    virtual Context* AllocContext() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.h(58):    virtual Rc ReceiveMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(59):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(77):    virtual EventHandler::Rc ProcessSap
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(82):    virtual EventHandler::Rc ProcessSnp
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(87):    virtual EventHandler::Rc ProcessSip
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(93):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h(99):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(53):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(58):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(63):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(68):    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(108):    virtual bool SaveContext() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(112):    virtual Event* RestoreContext(EventHandler::Rc& rc) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(116):    virtual void FreeContext(bool freeMsg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(120):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(125):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(129):    virtual bool Save() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(133):    virtual Event* Restore(EventHandler::Rc& rc) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(137):    virtual void Free() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(148):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(153):    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(157):    virtual void SetCurrSsm(ServiceSM* ssm) override { currSsm_ = ssm; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(161):    virtual void SetCurrInitiator(const Initiator* init) override
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(166):    virtual void Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(233):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(238):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(249):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(254):    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(258):    virtual void Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(306):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(311):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(316):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(403):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(408):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(413):    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(418):    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h(422):    virtual void Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.h(50):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.h(60):    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(45):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(59):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(73):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(87):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(101):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(274):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(318):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(465):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(521):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(662):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(723):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(765):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(860):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(944):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1016):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1072):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1177):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1233):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1304):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1388):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1515):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp(1601):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(64):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(93):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(122):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(137):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(150):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h(47):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h(57):    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h(87):    virtual void ReceiveBuff
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h(42):    virtual bool RejectIngressWork() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h(46):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h(51):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(68):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(73):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h(89):    virtual size_t PayloadSize() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(42):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(54):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(58):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(78):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(82):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(107):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(141):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(166):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(170):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(175):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(208):    virtual void DisplayStats(std::ostream& stream) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(212):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(216):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(220):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(224):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(253):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(278):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(305):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(309):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(93):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(97):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(182):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(191):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(195):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(199):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(232):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(270):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(274):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(299):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(303):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(332):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(336):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(378):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(382):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(431):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(435):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(476):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(488):    virtual const char* EventString() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(518):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(556):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(577):    virtual bool Display(std::ostream& stream, bool diff) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(55):    virtual const char* Name() const override { return TransTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(56):    virtual const char* Expl() const override { return TransTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(69):    virtual const char* Name() const override { return BufferTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(70):    virtual const char* Expl() const override { return BufferTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(83):    virtual const char* Name() const override { return ContextTraceToolName; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp(84):    virtual const char* Expl() const override { return ContextTraceToolExpl; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(161):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(162):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(167):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.h(49):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.h(54):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(145):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(149):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(154):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(94):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(99):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(44):    virtual RootServiceSM* RootSsm() const override { return root_; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(48):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(52):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(57):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(61):    virtual ContextType Type() const override { return MultiPort; }
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(65):    virtual void EndOfTransaction() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(77):    virtual void ProcessIcMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(81):    virtual bool IsIdle() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(51):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(63):    virtual Context* AllocContext() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(68):    virtual Rc ReceiveMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(74):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/State.h(79):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(48):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(53):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(74):    virtual bool Send(Route route) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(58):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(63):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h(104):    virtual void Cleanup() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.h(94):    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.h(50):    virtual void ClaimBlocks() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.h(54):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.h(59):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(43):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(51):    virtual const char* AbbrName() const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(59):    virtual TraceStatus CalcStatus(bool dynamic) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(64):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h(68):    virtual void Destroy() override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvIntParameter.h(62):    virtual TestRc InjectMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvIntParameter.h(96):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(204):    virtual InspectRc InspectMsg(debug32_t& errval) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(208):    virtual bool Send(Message::Route route) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(212):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(295):    virtual void ChangeDir(MsgDirection nextDir) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(77):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(94):    virtual TestRc VerifyMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.h(39):    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.h(43):    virtual void DisplayMsg(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.h(48):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(85):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(90):    virtual void Patch(sel_t selector, void* arguments) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(38):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(48):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(60):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(70):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(80):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(92):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(102):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(112):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(122):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(134):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(144):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(156):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(168):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(180):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(190):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(200):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(210):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(220):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(230):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(242):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(254):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(266):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(276):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(288):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(298):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(308):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(320):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(330):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(340):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(350):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(360):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(372):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(382):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(392):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(404):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(414):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(424):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(436):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(446):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(458):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(470):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(480):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(492):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(502):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(512):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(522):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h(532):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(57):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(58):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp(60):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.h(50):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(57):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(58):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp(60):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.h(50):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(78):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(89):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(90):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(92):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(94):    virtual EventHandler::Rc ProcessSip
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp(96):    virtual EventHandler::Rc ProcessSnp
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.h(40):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.h(52):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.h(52):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(52):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(63):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h(74):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(120):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(129):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(138):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(62):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(66):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(67):    virtual EventHandler::Rc ProcessSap
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(69):    virtual EventHandler::Rc ProcessSnp
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(77):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(79):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h(81):    virtual EventHandler::Rc ProcessSip
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(179):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(245):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(254):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(263):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(272):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(281):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(290):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(299):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(308):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(317):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(326):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(335):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(344):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(353):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(362):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(371):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(380):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(443):    virtual void SetNextState(StateId stid) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(444):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(457):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(458):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(460):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(462):    virtual EventHandler::Rc ProcessSip
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(144):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(168):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(177):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(186):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(195):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(204):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(213):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(224):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(225):    virtual EventHandler::Rc ProcessSap
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(227):    virtual EventHandler::Rc ProcessSnp
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(237):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(239):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(257):    virtual void Cancel() override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(258):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(261):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(263):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(41):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(58):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(67):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h(76):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(48):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp(49):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(58):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(59):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp(61):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.h(50):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(92):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(101):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(110):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(119):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(128):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(58):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(59):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(61):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(63):    virtual SsmContext* FindContext(const Message& msg) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(64):    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(65):    virtual Message* AllocOgMsg(SignalId sid) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(66):    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(85):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(88):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(89):    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(90):    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(91):    virtual void SendFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(92):    virtual void EnsureMediaMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(168):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(172):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(173):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h(188):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(38):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(48):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(60):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(72):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(82):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(92):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(102):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(114):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(124):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(136):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(148):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(158):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(168):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(180):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(192):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(204):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(214):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(224):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(234):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(244):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h(254):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(58):    virtual const char* Name() const override { return "POTS Call"; }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(59):    virtual ipport_t Port() const override { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(60):    virtual Faction GetFaction() const override { return PayloadFaction; }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(72):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(76):    virtual InputHandler* CreateHandler(IpPort* port) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(105):    virtual void ReceiveBuff
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(137):    virtual CliText* CreateText() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(142):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(147):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(152):    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(156):    virtual Message* AllocOgMsg(SignalId sid) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(160):    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(164):    virtual void PortAllocated
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(170):    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(174):    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(446):    virtual EventHandler::Rc ClearCall(Cause::Ind cause) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(450):    virtual void SetNextSap(TriggerId sap) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(454):    virtual void SetNextSnp(TriggerId snp) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(458):    virtual EventHandler::Rc AnalyzeNPsmTimeout
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(463):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(472):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.h(71):    virtual void DisplayStats(std::ostream& stream, id_t id) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(57):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(58):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp(60):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h(42):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h(64):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h(69):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h(73):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(103):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(146):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(184):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(189):    virtual EventHandler::Rc ApplyTreatment
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(216):    virtual EventHandler::Rc ApplyTreatment
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h(236):    virtual EventHandler::Rc ApplyTreatment
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(125):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(134):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(143):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(153):    virtual void Display(ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(157):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(158):    virtual EventHandler::Rc ProcessInitAck
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(160):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(162):    virtual EventHandler::Rc ProcessSap
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(164):    virtual EventHandler::Rc ProcessSip
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(166):    virtual EventHandler::Rc ProcessSnp
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(40):    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(50):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(59):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h(68):    virtual ServiceSM* AllocModifier() const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.cpp(62):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.cpp(63):    virtual void DisplaySizes(CliThread& cli, bool all) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.cpp(102):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.h(96):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.h(94):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.h(117):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.h(72):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(107):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(199):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(406):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(562):    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp(635):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(43):    virtual void DisplaySizes(CliThread& cli, bool all) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(45):    virtual word ProcessCommand(CliThread& cli) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h(66):    virtual void Enter() override;
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.h(50):    virtual void Startup(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.h(54):    virtual void Shutdown(RestartLevel level) override;
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(74):    virtual void EventOccurred(Event evt) override;
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(78):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(141):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(150):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(159):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(168):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(177):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(186):    virtual Rc ProcessEvent
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(134):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(143):    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(147):    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(151):    virtual Message::Route Route() const override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(155):    virtual void SendFinalMsg() override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(202):    virtual void GetSubtended(Base* objects[], size_t& count) const override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(206):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(268):    virtual void SetNextState(StateId stid) override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(272):    virtual void Display(std::ostream& stream,
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(282):    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(286):    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(316):    virtual RootServiceSM* AllocRoot
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(321):    virtual ProtocolSM* AllocIcPsm
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(358):    virtual void Display(std::ostream& stream,
W082 Adjacent arguments have the same type
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1215):    BcFactory(Id fid, ProtocolId prid, const char* name);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(363):    void LogCode(Warning warning, size_t line, size_t pos,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(296):    SymbolView(Accessibility a, TypeMatch m, bool u, bool f, bool r, Distance d);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(555): bool LinesCanBeMerged
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(126):    WarningLog(Warning warning, const CodeFile* file,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(244):    TypeMatch CalcMatchWith(const StackArg& that,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(295):    TypeMatch MatchWith(const StackArg& that,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(552):    TypeMatch MatchTemplate(const TypeName* that,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(768):    TypeMatch MatchTemplate(const QualName* that,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(1145):    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(328):    virtual void Promote
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1346):    static TypeMatch MatchTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h(1179):    Using(QualNamePtr& name, bool space, bool added = false);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.cpp(41): size_t FindTemplateBegin(const string& name, size_t pos, size_t depth);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.h(102):    size_t CompareScopes
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.h(140):    size_t Replace(std::string& code,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(637):    Function* FindNewOrDelete(const StackArg& arg, bool del, bool& pod) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(415):    word InsertNamespaceForward(const Iter& iter,
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(443):    static void DebugFtCode
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(197):    size_t FindClosing(char lhc, char rhc, size_t pos = std::string::npos) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(383):    void SetDepth(size_t& start, int8_t depth1, int8_t depth2);
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(62):    NodeBase::word Import
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(104):    NodeBase::word Assign(const std::string& name,
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(476):    static bool SetCompoundType
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(522):    bool GetParExpr(ExprPtr& expr, bool omit, bool opt = false);
  C:/Users/gregu/Documents/rsc/rsc/ct/SetOperations.h(33):    void SetDifference
  C:/Users/gregu/Documents/rsc/rsc/ct/SetOperations.h(42):    void SetIntersection
  C:/Users/gregu/Documents/rsc/rsc/ct/SetOperations.h(51):    void SetUnion
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(273):    virtual void process_not_ccd_message(const TokenMessage& message,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(502):    virtual void report_failed_press
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(190):    bool set_move_by_convoy_order(ProvinceId unit,
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(399):    bool has_route_to_province(const UnitOrder& unit, ProvinceId province,
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.h(50):    uint64_t pack3(uint16_t a, uint16_t b, uint16_t c);
  C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.h(54):    uint64_t pack4(uint16_t a, uint16_t b, uint16_t c, uint16_t d);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(48):    CfgBitParm(const char* key, const char* def, const char* expl);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h(38):    CfgBoolParm(const char* key, const char* def, bool* field, const char* expl);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h(39):    CfgFlagParm(const char* key, const char* def,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h(39):    CfgIntParm(const char* key, const char* def, word* field,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h(90):    CfgParm(const char* key, const char* def, const char* expl);
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(39):    CfgStrParm(const char* key, const char* def,
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(92):    CfgFileTimeParm(const char* key, const char* def,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h(39):    CliCharParm(const char* help, const char* chars,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(100):    CliCommand(const char* comm, const char* help, uint32_t size = 32);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h(58):    CliCommandSet(const char* comm, const char* help, uint32_t size = 32);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h(93):    CliIncrement(const char* name, const char* help, uint32_t size = 32);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h(49):    CliIntParm(const char* help, word min, word max,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(238):    bool GetIdentifier(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(244):    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h(48):    CliText(const char* help, const char* text,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(90):    char CharPrompt(const std::string& prompt,
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h(208):    void Report1
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h(69):    static void SwLog(fn_name_arg func, debug64_t errval,
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(56):    static void Spool(const std::string& name,
  C:/Users/gregu/Documents/rsc/rsc/nb/Formatters.h(100):    std::string strCenter(const std::string& s, size_t breadth, size_t blanks);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbCliParms.h(120): CliParm::Rc GetCBV(const CliCommand& comm, CliThread& cli, bool& c, bool& v);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(228):    bool BidToIndices(PooledObjectId bid, size_t& i, size_t& j) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(233):    bool IndicesToBid(size_t i, size_t j, PooledObjectId& bid) const;
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h(99):    PosixSignal(signal_t value, const char* name,
  C:/Users/gregu/Documents/rsc/rsc/nb/SymbolRegistry.h(52):    bool BindSymbol
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(99):    bool FindFiles(const char* dirName,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(105):    static SysThread_t Create(const ThreadEntry entry,
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(72):    static const char* GetFileLoc(DWORD64 frame, DWORD& line, DWORD& disp);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(71):    SysTime(int16_t year, int16_t month, int16_t day,
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(560):    void DisplaySummary
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(83):    static void CheckHigh(FunctionStats*& high, FunctionStats* curr,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(196):    word Sort(const string& input, const string& output, string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(52):    IpBuffer(MsgDirection dir, size_t header, size_t payload);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h(48):    IpPortCfgParm(const char* key, const char* def,
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h(59):    SysIpL3Addr
  C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h(106):    static word Poll(SysTcpSocket* sockets[], size_t size, msecs_t msecs);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h(103):    PotsFeature(PotsFeature::Id fid, bool deactivation,
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(133):    void TraceMsg(ProtocolId prid, SignalId sid, MsgDirection dir);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(157):    void RecordMsg(bool incoming, bool inter, size_t size) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h(53):    GlobalAddress(const SysIpL2Addr& l2Addr, ipport_t port, FactoryId fid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(88):    Initiator(ServiceId sid, ServiceId aid, TriggerId tid, Priority prio);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(169):    static BuffTrace* NextIcMsg
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(484):    static void DisplayEvent(std::ostream& stream, ServiceId sid, EventId eid);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(129):    TraceRc SelectSignal(ProtocolId prid, SignalId sid, TraceStatus status);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(181):       SignalFilter(ProtocolId p, SignalId s, TraceStatus ts);
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(174):    explicit Service(Id sid, bool modifiable = false, bool modifier = false);
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h(55):    SsmFactory(Id fid, ProtocolId prid, const char* name);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(112):    template< typename T > T* CopyType
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(70):    Message* NextIcMsg(FactoryId fid, SignalId sid, SkipInfo& skip);
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(346):    Message* NextIcMsg(FactoryId fid, SignalId sid, SkipInfo& skip);
W088 Argument could be const
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(293/4):       (Iter iter, size_t pos, const string& id, size_t* range = nullptr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(323/1):    bool GetStatements(BlockPtr& block, bool braced);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(412/1):    bool GetFuncSpecial(FunctionPtr& func);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(425/1):    bool GetCtorInit(FunctionPtr& func);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(444/1):    bool GetArguments(FunctionPtr& func);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(477/1):       (QualNamePtr& name, Cxx::Type type, int size, int sign);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(537/1):    bool GetNum(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(538/1):    bool GetChar(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(539/1):    bool GetStr(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(549/1):    bool GetCast(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(550/1):    bool GetPrecedence(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(557/1):    bool HandleTilde(ExprPtr& expr, size_t start);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(561/1):    bool GetSubscript(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(570/1):    bool GetCxxCast(ExprPtr& expr, Cxx::Operator op);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(571/1):    bool GetConditional(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(572/1):    bool GetDefined(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(573/1):    bool GetDelete(ExprPtr& expr, Cxx::Operator op);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(574/1):    bool GetNew(ExprPtr& expr, Cxx::Operator op);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(575/1):    bool GetNoExcept(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(576/1):    bool GetSizeOf(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(577/1):    bool GetThrow(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(578/1):    bool GetTypeId(ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(79/1):    bool Enq(T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(100/1):    bool Henq(T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(122/1):    bool Insert(T* prev, T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(157/1):    bool Exq(T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(321/1):    void Corrupt(T* elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(135/1):    bool Exq(T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(266/1):    bool Erase(T& item)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(106/4):       const Thread* client, size_t stackSize, SysThreadId& nid);
  C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h(132/1):       (IpBuffer& buff, byte_t* src, size_t size) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(291/1):    bool ProcessMsg(Q1Way< Message >& msgq, const InvokerThread* inv);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(150/1):    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
  C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h(107/2):       (const ServiceSM& parentSsm, Event& currEvent, Event*& nextEvent) const;
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(200/1):    virtual void DeleteParm(TlvParmLayout& parm);
W090 Function could be const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1109):    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1166):    CipMessage* BuildCipRel(Cause::Ind cause);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(122):    void InsertClass(Class* cls);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(123):    void InsertData(Data* data);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(124):    void InsertEtor(Enumerator* etor);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(125):    void InsertEnum(Enum* item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(126):    void InsertForw(Forward* forw);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(127):    void InsertFriend(Friend* frnd);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(128):    void InsertFunc(Function* func);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(129):    void InsertMacro(Macro* macro);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(130):    void InsertSpace(Namespace* space);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(131):    void InsertTerm(Terminal* term);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(132):    void InsertType(Typedef* type);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(137):    void EraseClass(const Class* cls);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(138):    void EraseData(const Data* data);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(139):    void EraseEtor(const Enumerator* etor);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(140):    void EraseEnum(const Enum* item);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(141):    void EraseForw(const Forward* forw);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(142):    void EraseFriend(const Friend* frnd);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(143):    void EraseFunc(const Function* func);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(144):    void EraseMacro(const Macro* macro);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(145):    void EraseSpace(const Namespace* space);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(146):    void EraseTerm(const Terminal* term);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(147):    void EraseType(const Typedef* type);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(148):    void EraseLocal(const CxxScoped* name);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(152):    void EraseLocals();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(176):    virtual void ExitBlock() { }
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(72):    CodeFile* EnsureFile(const std::string& file, CodeDir* dir = nullptr);
  C:/Users/gregu/Documents/rsc/rsc/ct/Library.h(104):    NodeBase::word Assign(const std::string& name,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(206):    virtual void process_ccd_message
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(212):    virtual void process_drw_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(243):    virtual void process_out_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(251):    virtual void process_smr_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(268):    virtual void process_adm_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(273):    virtual void process_not_ccd_message(const TokenMessage& message,
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(467):    virtual void process_hlo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(472):    virtual void process_map_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(476):    virtual void process_mdf_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(484):    virtual void process_sco_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(488):    virtual void process_now_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(492):    virtual void process_slo_message(const TokenMessage& message);
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(124):    bool Replace(size_t index, const T& item)
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.h(93):    void AddMainArg(const std::string& arg);
  C:/Users/gregu/Documents/rsc/rsc/nb/Class.h(113):    virtual Object* New(size_t size);
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(135):    bool Exq(T& elem)
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h(115):    void StartInterval(bool first);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(55):    bool Validate(const void* addr);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(141):    DelayRc Delay(msecs_t msecs);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(147):    bool Interrupt();
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(117):    bool Interrupt(const Flags& mask = Flags());
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(508):    void SetTrap(bool on);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(516):    void StackCheck();
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(528):    void SetSignal(signal_t sig);
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h(112):    void AssociateIds(const Thread& thread);
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h(116):    virtual void ClaimBlocks() { }
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(77):    FunctionStats* EnsureRecord(fn_name_arg func, size_t count);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.h(82):    void Reset();
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h(161):    virtual IoThread* CreateIoThread();
  C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h(148):    virtual IpPort* CreatePort(ipport_t pid) = 0;
  C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h(78):    void ReleaseResources();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.h(57):    void Audit();
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(159):    bool StopTimer(const Base& owner, TimerId tid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h(150):    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(147):    void KickThread();
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(151):    Context* FindWork();
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(175):    void Requeue(Context& ctx);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(183):    void ScheduledOut();
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(127):    void SetSignal(SignalId sid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(131):    void SetJoin(bool join);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(242):    void SetProtocol(ProtocolId prid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(246):    void SetPriority(Priority prio);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(250):    virtual void SetReceiver(const GlobalAddress& receiver);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(254):    virtual void SetSender(const GlobalAddress& sender);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(379):    void SetRxAddr(const LocalAddress& rxaddr);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(191):    virtual Message* UnwrapMsg(Message& msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h(198):    virtual Message* WrapMsg(Message& msg);
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h(117):    void StopTimer(const Base& owner, TimerId tid);
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(188):    virtual EventHandler::Rc ProcessInitNack
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(237):    EventHandler::Rc ProcessSsmqSap
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h(248):    void ProcessSsmqSnp(ServiceSM* modifier, Event& snpEvent);
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(79):    virtual SbIpBufferPtr Parse() = 0;
  C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h(86):    virtual SbIpBufferPtr Build() = 0;
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h(264):    void UpdateTestPsm();
W092 Function could be free
  C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(168):    static const char* strState(State state);
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h(87):    static void DisplayStateCounts
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(100):    static bool IsValidDN(DN dn) { return ((dn >= FirstDN) && (dn <= LastDN)); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(116):    static bool IsValidSC(SC sc) { return ((sc >= FirstSC) && (sc <= LastSC)); }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(120):    static uint32_t DNToIndex(Address::DN dn) { return dn - FirstDN + 1; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(124):    static Address::DN IndexToDN(uint32_t i) { return i + FirstDN - 1; }
  C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h(175):    static bool IsValidDigit(Digit d)
  C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(112):    static NodeBase::word Report
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h(270):    static void GenerateReport(std::ostream* stream, const SetOfIds& set);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(117):    static LibrarySet* Evaluate(const CliThread& cli);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(84):    static void Initialize();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(186):    static bool IsSortedForFixing
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(199):    static std::string WarningCode(Warning warning);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(203):    static bool IsSortedByFile(const WarningLog& log1, const WarningLog& log2);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h(207):    static bool IsSortedByWarning
  C:/Users/gregu/Documents/rsc/rsc/ct/CtModule.h(56):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(186):    static Function* FoundFunc
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(593):    static size_t CreateCodeError
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(306):    static void ContextFunctionIsNonConst();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(579):    static void SetPos(const CxxLocation& loc);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(642):    static void Startup(NodeBase::RestartLevel level) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(711):    static std::string Location();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1346):    static TypeMatch MatchTemplate
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h(1359):    static Function* InstantiateError
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(285):    static void ShrinkExpression(const ExprPtr& expr);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(488):    static TypeSpecPtr CreateRef();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(626):    static void PushType(const std::string& name);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(402):    string DemangleInclude(string code) const;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h(457):    static bool IsSorted2(const string& line1, const string& line2);
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(52):    static const OperatorInfo* GetAttrs(LibTokenType type);
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.h(62):    static bool IsOperator(const std::string& s);
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(198):    static NodeBase::word Counted(std::string& result, const size_t* count);
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h(203):    static NodeBase::word Shown(std::string& result);
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(476):    static bool SetCompoundType
  C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h(653):    static std::string Indent();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(75):    static BaseBot* instance();
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(101):    static void send_to_console(std::ostringstream& report);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(179):    void cancel_event(BotEvent event);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(524):    static void report_ccd(const Token& power, bool disorder);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(544):    static void report_out(const Token& power);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(556):    void report_exit(fixed_string reason);
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(716):    static bool send_buff(DipIpBuffer& buff);
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(60):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(157):    static MapAndUnits* instance();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(162):    static MapAndUnits* create_clone();
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(166):    static void delete_clone(MapAndUnits*& clone);
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(260):    std::string display_retreat_order(const UnitOrder& unit) const;
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.h(42):    static TokenTextMap* instance();
  C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/mb/Switch.h(65):    static bool IsValidPort(PortId pid)
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(76):    static fixed_string ValidTrueChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h(81):    static fixed_string ValidFalseChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(77):    static const std::string& ValidNameChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(82):    static const std::string& ValidValueChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h(87):    static const std::string& ValidBlankChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h(132):    static Rc Exhausted(const CliThread& cli, const std::string& type);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h(63):    static void DescendTo(CliCookie& cookie, uint32_t index);
  C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h(323):    static Rc Mismatch(const CliThread& cli, const std::string& type);
  C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h(48):    static void Spool(const char* s, bool eol = false);
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h(76):    static void Assert(bool condition, debug32_t errval = 0);
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h(81):    static void Progress(const std::string& s, bool force = false);
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h(85):    static void noop();
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h(129):    static void GenerateSwLog(fn_name_arg func, const std::string& errstr,
  C:/Users/gregu/Documents/rsc/rsc/nb/Element.h(46):    static std::string strTimePlace();
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(44):    static ostringstreamPtr CreateStream();
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(56):    static void Spool(const std::string& name,
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(61):    static void Record(const std::string& s, bool eol = false);
  C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h(65):    static void Truncate(const std::string& name);
  C:/Users/gregu/Documents/rsc/rsc/nb/Log.h(46):    static void Spool(ostringstreamPtr& log);
  C:/Users/gregu/Documents/rsc/rsc/nb/Log.h(50):    static std::string FileName();
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(151):    static size_t Size();
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(44):    static size_t Align(size_t size, size_t log2align = BYTES_PER_WORD_LOG2);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(48):    static size_t Words(size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(52):    static void Copy(void* dest, const void* source, size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(56):    static void Set(void* dest, byte_t value, size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(74):    static void* Realloc(void* addr, size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(83):    static MemoryType Type(const void* addr);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(91):    static void Shutdown(RestartLevel level);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(99):    static SysHeap* EnsureHeap(MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h(103):    static SysHeap* AccessHeap(MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.h(57):    static const char* TypeString(MemoryType type);
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h(87):    static RestartLevel NextLevel();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(758):    static word DisplayHelpFile(const CliThread& cli, const string& name);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(1961):    static void SendAckToOutputFile(const CliThread& cli);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h(60):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h(73):    static TraceRc SelectThread(ThreadId tid, TraceStatus status);
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h(77):    static bool ThreadsEmpty();
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(113):    static bool GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid);
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h(247):    static ObjectBlock* ObjToBlock(const Pooled* obj);
  C:/Users/gregu/Documents/rsc/rsc/nb/PermanentHeap.h(41):    static PermanentHeap* Instance();
  C:/Users/gregu/Documents/rsc/rsc/nb/Restart.h(80):    static void Initiate(reinit_t reason, debug32_t errval);
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(52):    static const std::string& ValidNameChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h(57):    static const std::string& InvalidInitialChars();
  C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h(87):    static void DisplayHeaps(std::ostream& stream);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h(37):    static void CreateNativeSignals();
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(52):    static SysThreadId RunningThreadId();
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(112):    static SysThread_t Wrap();
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(116):    static void Delete(SysThread_t& thread);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(121):    static SysSentry_t CreateSentry();
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h(125):    static void DeleteSentry(SysSentry_t& sentry);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(88):    static bool IsLeapYear(int16_t year);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h(153):    static const int16_t* DaysPerMonth(int16_t year);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(88):    static void CaptureEvent(fn_name_arg func, Id rid, word info = 0);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(105):    static void PauseOver(word limit);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(219):    static double PercentIdle();
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(223):    static TraceRc LogContextSwitches(bool on);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(227):    static void DisplayContextSwitches(std::ostream& stream);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h(438):    static SysThread::Priority FactionToPriority(Faction& faction);
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(90):    static int WarpFactor();
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(83):    static void CheckHigh(FunctionStats*& high, FunctionStats* curr,
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(196):    word Sort(const string& input, const string& output, string& expl) const;
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3446):    static void UseBadPointer();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3447):    static void LoopForever();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.h(45):    static NtTestData* Access(CliThread& cli);
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h(169):    static size_t BuffSize(size_t nBytes);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h(62):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(67):    static SysIpL2Addr LoopbackAddr();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h(83):    static bool HostName(std::string& name);
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(134):    static bool StartLayer();
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h(138):    static void StopLayer();
  C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(122):    static void Kill(fn_name_arg func, debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.h(127):    static void Dump(fn_name_arg func, debug64_t errval, debug32_t offset);
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(56):    static bool IsValidId(Id eid)
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.h(72):    static bool AppCanHandle(Id eid)
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(86):    static bool AppCanRegister(Id ehid)
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(94):    static bool AppCanUse(Id ehid)
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(187):    static bool GenerateLog(Factory::Rc rc);
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h(199):    static TransTrace* TraceRxNet(Message& msg, const Factory& fac);
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.h(291):    static const char* strPriority(Priority prio);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h(58):    static void CaptureMsg(Context& ctx, const Message& msg, TransTrace* tt);
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h(185):    static MsgPort* FindPeer(const GlobalAddress& remAddr);
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h(148):    static const char* ExplainRc(TestRc rc);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h(62):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(243):    static std::string OutputId(const std::string& label, id_t id);
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h(484):    static void DisplayEvent(std::ostream& stream, ServiceId sid, EventId eid);
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.h(73):    static bool IsValidPortId(PortId pid)
  C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h(60):    static bool IsValidId(Id sid)
  C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h(86):    static RootServiceSM* AllocRoot(const Message& msg, ProtocolSM& psm);
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(222):    static size_t Pad(size_t size)
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(299):    inline static fn_name TlvMessage_FindType()
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(301):    inline static fn_name TlvMessage_AddType()
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(303):    inline static fn_name TlvMessage_CopyType()
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h(305):    inline static fn_name TlvMessage_VerifyParm()
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h(73):    static Id ExtractPid(const TlvParmLayout& parm);
  C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h(74):    static bool IsValidId(Id tid)
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(454):    static EventHandler::Rc SendFacilityNack(PotsMuxPsm* npsm, ServiceId sid);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(133):    static void SendRelease(const Message& msg1);
  C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/st/StModule.h(58):    static bool Register();
  C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h(47):    static StTestData* Access(CliThread& cli);
W097 Line indentation is not a multiple of the standard value
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.cpp(225):     const string& line2, size_t begin2, size_t end2)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(557):     const std::string& line2, size_t begin2, size_t end2);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(191):        tagpos = loc.iter->code.find(tag, tagpos + 1))
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(266):        loc.pos != string::npos;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(267):        loc = FindWord(loc.iter, loc.pos + 1, *defnName, &range))
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(967):        tag.pos != string::npos;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(968):        tag = FindWord(tag.iter, tag.pos + 1, CONST_STR))
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1137):        next->code, 0, next->code.size() - 1)) return false;
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(1303):        arg = FindWord(arg.iter, arg.pos + 1, VOID_STR))
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2967):           loc = FindWord(loc.iter, loc.pos, name))
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(113):           a != orders.adjustments.end(); ++a)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(423):           a != orders.adjustments.end(); ++a)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(739):        a != attacks.upper_bound(to_prov); ++a)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(953):                     (client.order_type_copy != MOVE_BY_CONVOY_ORDER))
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(1007):              f != subverted_army.convoyers.end(); ++f)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(1525):        a != attacks.upper_bound(province); ++a)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(1689):                  (attacker.order_type_copy != MOVE_BY_CONVOY_ORDER))
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(2046):        b != balanced_head_to_heads.end(); ++b)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(2143):                 f != subverting_army.convoyers.end(); ++f)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(2146):                    a != attacks.upper_bound(*f); ++a)
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(2200):        u != unbalanced_head_to_heads.end(); ++u)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(127):              (our_winter_orders.number_of_waives != 0));
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(239):           o != our_winter_orders.adjustments.end(); ++o)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(923):           b != r->second.adjustments.end(); ++b)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(1055):           o != orders.adjustments.end(); ++o, ++count)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(1425):                       loc != n->second.end(); ++loc)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2122):               winter->number_of_waives >= winter->number_of_orders_required)
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2144):               game_map[build_loc.province].home_powers.end())
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2151):               game_map[build_loc.province].neighbours.end())
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2190):               winter->number_of_waives >= winter->number_of_orders_required)
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(393):              that.length_ * sizeof(Token));
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(437):              that.length_ * sizeof(Token));
W099 Line contains adjacent spaces
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(79):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(80):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(81):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(82):    auto&         bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(84):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(136):    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(137):    auto       msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(138):    auto       sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(139):    auto&      bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(181):    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(182):    auto       msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(183):    auto       sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(184):    auto&      bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(215):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(216):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(217):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(218):    auto&         bcssm = static_cast< BcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp(220):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(483):    id_t        idx;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(484):    word        fid, rid;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(486):    auto&       tlvmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(515):    TestRc       rc;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(516):    auto&        tlvmsg = static_cast< const TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(518):    id_t         idx;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(519):    word         fid, rid;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(861):    auto          state = GetState();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(862):    auto&         tmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(863):    auto          sig = tmsg.GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(864):    TimeoutInfo*  toi = nullptr;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(866):    auto          err = true;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(867):    debug64_t     error;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(991):    auto          state = GetState();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(992):    auto&         tmsg = static_cast< TlvMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(993):    auto          sig = msg.GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(995):    auto          err = true;
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(996):    debug64_t     error;
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(423):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(424):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(425):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(426):    auto&         pssm = static_cast< ProxyBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(428):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(98):    CxxWord("-",   "-",    "D",  F),  // AUTO
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(99):    CxxWord("-",   "-",    "b",  T),  // BREAK
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(100):    CxxWord("-",   "-",    "c",  T),  // CASE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(101):    CxxWord("C",   "C",    "-",  T),  // CLASS
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(102):    CxxWord("DP",  "DP",   "D",  F),  // CONST
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(103):    CxxWord("DP",  "DP",   "D",  F),  // CONSTEXPR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(104):    CxxWord("-",   "-",    "n",  T),  // CONTINUE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(105):    CxxWord("-",   "-",    "o",  T),  // DEFAULT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(106):    CxxWord("-",   "-",    "d",  T),  // DO
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(107):    CxxWord("E",   "E",    "E",  T),  // ENUM
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(108):    CxxWord("-",   "P",    "-",  F),  // EXPLICIT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(109):    CxxWord("DP",  "-",    "-",  T),  // EXTERN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(110):    CxxWord("-",   "-",    "f",  T),  // FOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(111):    CxxWord("-",   "F",    "-",  T),  // FRIEND
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(112):    CxxWord("H",   "H",    "H",  F),  // HASH
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(113):    CxxWord("-",   "-",    "i",  T),  // IF
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(114):    CxxWord("P",   "P",    "-",  T),  // INLINE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(115):    CxxWord("-",   "D",    "-",  F),  // MUTABLE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(116):    CxxWord("N",   "-",    "-",  T),  // NAMESPACE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(117):    CxxWord("-",   "P",    "-",  F),  // OPERATOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(118):    CxxWord("-",   "A",    "-",  T),  // PRIVATE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(119):    CxxWord("-",   "A",    "-",  T),  // PROTECTED
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(120):    CxxWord("-",   "A",    "-",  T),  // PUBLIC
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(121):    CxxWord("-",   "-",    "r",  T),  // RETURN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(122):    CxxWord("D",   "DP",   "D",  F),  // STATIC
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(123):    CxxWord("C",   "C",    "-",  T),  // STRUCT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(124):    CxxWord("-",   "-",    "s",  T),  // SWITCH
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(125):    CxxWord("DCP", "DCFP", "-",  F),  // TEMPLATE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(126):    CxxWord("-",   "-",    "t",  T),  // TRY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(127):    CxxWord("T",   "T",    "T",  T),  // TYPEDEF
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(128):    CxxWord("C",   "C",    "-",  T),  // UNION
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(129):    CxxWord("U",   "U",    "U",  T),  // USING
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(130):    CxxWord("-",   "P",    "-",  F),  // VIRTUAL
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(131):    CxxWord("-",   "-",    "w",  T),  // WHILE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(132):    CxxWord("-",   "P",    "-",  F),  // NVDTOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(133):    CxxWord("DP",  "DP",   "xD", F)   // NIL_KEYWORD
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(155):    CxxOp(           SCOPE_STR, 2, 18, F, F, F),  // SCOPE_RESOLUTION
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(156):    CxxOp(                 ".", 2, 17, F, F, F),  // REFERENCE_SELECT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(157):    CxxOp(                "->", 2, 17, T, F, F),  // POINTER_SELECT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(158):    CxxOp(                 "[", 2, 17, T, F, F),  // ARRAY_SUBSCRIPT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(159):    CxxOp(                 "(", 0, 17, F, F, F),  // FUNCTION_CALL
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(160):    CxxOp(                "++", 1, 17, T, F, F),  // POSTFIX_INCREMENT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(161):    CxxOp(                "--", 1, 17, T, F, F),  // POSTFIX_DECREMENT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(162):    CxxOp(         DEFINED_STR, 1, 17, F, F, F),  // DEFINED
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(163):    CxxOp(          TYPEID_STR, 1, 17, F, F, F),  // TYPE_NAME
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(164):    CxxOp(      CONST_CAST_STR, 2, 17, F, F, F),  // CONST_CAST
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(165):    CxxOp(    DYNAMIC_CAST_STR, 2, 17, F, F, F),  // DYNAMIC_CAST
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(167):    CxxOp(     STATIC_CAST_STR, 2, 17, F, F, F),  // STATIC_CAST
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(168):    CxxOp(          SIZEOF_STR, 1, 16, F, T, F),  // SIZEOF_TYPE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(169):    CxxOp(        NOEXCEPT_STR, 1, 16, F, T, F),  // NOEXCEPT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(170):    CxxOp(                "++", 1, 16, T, T, F),  // PREFIX_INCREMENT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(171):    CxxOp(                "--", 1, 16, T, T, F),  // PREFIX_DECREMENT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(172):    CxxOp(                 "~", 1, 16, T, T, F),  // ONES_COMPLEMENT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(173):    CxxOp(                 "!", 1, 16, T, T, F),  // LOGICAL_NOT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(174):    CxxOp(                 "+", 1, 16, T, T, F),  // UNARY_PLUS
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(175):    CxxOp(                 "-", 1, 16, T, T, F),  // UNARY_MINUS
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(176):    CxxOp(                 "&", 1, 16, T, T, F),  // ADDRESS_OF
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(177):    CxxOp(                 "*", 1, 16, T, T, F),  // INDIRECTION
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(178):    CxxOp(             NEW_STR, 0, 16, T, T, F),  // OBJECT_CREATE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(179):    CxxOp(       NEW_ARRAY_STR, 0, 16, T, T, F),  // OBJECT_CREATE_ARRAY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(180):    CxxOp(          DELETE_STR, 1, 16, T, T, F),  // OBJECT_DELETE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(181):    CxxOp(    DELETE_ARRAY_STR, 1, 16, T, T, F),  // OBJECT_DELETE_ARRAY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(182):    CxxOp(                 "(", 2, 16, T, T, F),  // CAST
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(183):    CxxOp(                ".*", 2, 15, F, F, F),  // REFERENCE_SELECT_MEMBER
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(184):    CxxOp(               "->*", 2, 15, T, F, F),  // POINTER_SELECT_MEMBER
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(185):    CxxOp(                 "*", 2, 14, T, F, T),  // MULTIPLY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(186):    CxxOp(                 "/", 2, 14, T, F, F),  // DIVIDE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(187):    CxxOp(                 "%", 2, 14, T, F, F),  // MODULO
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(188):    CxxOp(                 "+", 2, 13, T, F, T),  // ADD
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(189):    CxxOp(                 "-", 2, 13, T, F, F),  // SUBTRACT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(190):    CxxOp(                "<<", 2, 12, T, F, F),  // LEFT_SHIFT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(191):    CxxOp(                ">>", 2, 12, T, F, F),  // RIGHT_SHIFT
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(192):    CxxOp(                 "<", 2, 11, T, F, T),  // LESS
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(193):    CxxOp(                "<=", 2, 11, T, F, T),  // LESS_OR_EQUAL
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(194):    CxxOp(                 ">", 2, 11, T, F, T),  // GREATER
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(195):    CxxOp(                ">=", 2, 11, T, F, T),  // GREATER_OR_EQUAL
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(196):    CxxOp(                "==", 2, 10, T, F, T),  // EQUALITY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(197):    CxxOp(                "!=", 2, 10, T, F, T),  // INEQUALITY
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(198):    CxxOp(                 "&", 2,  9, T, F, T),  // BITWISE_AND
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(199):    CxxOp(                 "^", 2,  8, T, F, T),  // BITWISE_XOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(200):    CxxOp(                 "|", 2,  7, T, F, T),  // BITWISE_OR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(201):    CxxOp(                "&&", 2,  6, T, F, T),  // LOGICAL_AND
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(202):    CxxOp(                "||", 2,  5, T, F, T),  // LOGICAL_OR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(203):    CxxOp(                 "?", 3,  4, F, F, F),  // CONDITIONAL
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(204):    CxxOp(                 "=", 2,  3, T, T, F),  // ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(205):    CxxOp(                "*=", 2,  3, T, T, F),  // MULTIPLY_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(206):    CxxOp(                "/=", 2,  3, T, T, F),  // DIVIDE_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(207):    CxxOp(                "%=", 2,  3, T, T, F),  // MODULO_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(208):    CxxOp(                "+=", 2,  3, T, T, F),  // ADD_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(209):    CxxOp(                "-=", 2,  3, T, T, F),  // SUBTRACT_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(210):    CxxOp(               "<<=", 2,  3, T, T, F),  // LEFT_SHIFT_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(211):    CxxOp(               ">>=", 2,  3, T, T, F),  // RIGHT_SHIFT_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(212):    CxxOp(                "&=", 2,  3, T, T, F),  // BITWISE_AND_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(213):    CxxOp(                "^=", 2,  3, T, T, F),  // BITWISE_XOR_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(214):    CxxOp(                "|=", 2,  3, T, T, F),  // BITWISE_OR_ASSIGN
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(215):    CxxOp(           THROW_STR, 0,  2, F, T, F),  // THROW
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(216):    CxxOp(                 ",", 2,  1, F, F, F),  // STATEMENT_SEPARATOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(217):    CxxOp(                 "$", 0,  0, F, F, F),  // START_OF_EXPRESSION
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(218):    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // FALSE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(219):    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // TRUE
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(220):    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // NULLPTR
  C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp(221):    CxxOp(           ERROR_STR, 0,  0, F, F, F)   // NIL_OPERATOR
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(94):    OperatorInfo(" ",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpNil
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(95):    OperatorInfo("(",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpLeftPar
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(96):    OperatorInfo(")",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpRightPar
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(97):    OperatorInfo("&",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpIntersection
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(98):    OperatorInfo("-",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpDifference
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(99):    OperatorInfo("|",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpUnion
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(100):    OperatorInfo("|",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpAutoUnion
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(101):    OperatorInfo("d",  1, DIR_SET,  FILE_SET, ERR_SET),   // OpDirectories
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(102):    OperatorInfo("f",  1, FILE_SET, DIR_SET,  ERR_SET),   // OpFiles
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(251):    inline static fn_name Array_ctor()     { return "Array.ctor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(252):    inline static fn_name Array_dtor()     { return "Array.dtor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(253):    inline static fn_name Array_Init()     { return "Array.Init"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(254):    inline static fn_name Array_Reserve()  { return "Array.Reserve"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(256):    inline static fn_name Array_Erase()    { return "Array.Erase"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(257):    inline static fn_name Array_Replace()  { return "Array.Replace"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Array.h(258):    inline static fn_name Array_Extend()   { return "Array.Extend"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(174): typedef std::basic_string<char, CharTraits, DynAllocator<char>>  DynString;
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h(175): typedef std::basic_string<char, CharTraits, ImmAllocator<char>>  ImmString;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(95):    CounterPtr      allocCount_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(96):    CounterPtr      freeCount_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(97):    CounterPtr      failCount_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(98):    CounterPtr      auditCount_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(387):    inline static fn_name Q1Way_ctor()   { return "Q1Way.ctor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(388):    inline static fn_name Q1Way_dtor()   { return "Q1Way.dtor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(389):    inline static fn_name Q1Way_Init()   { return "Q1Way.Init"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(390):    inline static fn_name Q1Way_Enq()    { return "Q1Way.Enq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(391):    inline static fn_name Q1Way_Henq()   { return "Q1Way.Henq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(393):    inline static fn_name Q1Way_Deq()    { return "Q1Way.Deq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(394):    inline static fn_name Q1Way_Exq()    { return "Q1Way.Exq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(395):    inline static fn_name Q1Way_Next()   { return "Q1Way.Next"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(396):    inline static fn_name Q1Way_Size()   { return "Q1Way.Size"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(397):    inline static fn_name Q1Way_Purge()  { return "Q1Way.Purge"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(398):    inline static fn_name Q1Way_Item()   { return "Q1Way.Item"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(360):    inline static fn_name Q2Way_ctor()  { return "Q2Way.ctor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(361):    inline static fn_name Q2Way_dtor()  { return "Q2Way.dtor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(362):    inline static fn_name Q2Way_Init()  { return "Q2Way.Init"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(363):    inline static fn_name Q2Way_Enq()   { return "Q2Way.Enq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(364):    inline static fn_name Q2Way_Henq()  { return "Q2Way.Henq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(365):    inline static fn_name Q2Way_Deq()   { return "Q2Way.Deq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(366):    inline static fn_name Q2Way_Exq()   { return "Q2Way.Exq"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(367):    inline static fn_name Q2Way_Next()  { return "Q2Way.Next"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(368):    inline static fn_name Q2Way_Prev()  { return "Q2Way.Prev"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(369):    inline static fn_name Q2Way_Size()  { return "Q2Way.Size"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(371):    inline static fn_name Q2Way_Item()  { return "Q2Way.Item"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(625):    inline static fn_name Registry_ctor()   { return "Registry.ctor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(626):    inline static fn_name Registry_dtor()   { return "Registry.dtor"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(627):    inline static fn_name Registry_Init()   { return "Registry.Init"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(629):    inline static fn_name Registry_Erase()  { return "Registry.Erase"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(630):    inline static fn_name Registry_Next()   { return "Registry.Next"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(631):    inline static fn_name Registry_Prev()   { return "Registry.Prev"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(632):    inline static fn_name Registry_Size()   { return "Registry.Size"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(633):    inline static fn_name Registry_Empty()  { return "Registry.Empty"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(634):    inline static fn_name Registry_Purge()  { return "Registry.Purge"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h(635):    inline static fn_name Registry_Cell()   { return "Registry.Cell"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/Singleton.h(126):       Singleton_Destroy()  { return "Singleton.Destroy"; }
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.cpp(39): fixed_string StatisticsGroup::ReportHeader =   "      Curr      Prev         All";
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(264):    CounterPtr       traps_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(265):    CounterPtr       yields_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(266):    CounterPtr       exceeds_;
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(270):    AccumulatorPtr   totUsecs_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(176):    CfgIntParmPtr  initTimeoutMsecs_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(177):    CfgIntParmPtr  schedTimeoutMsecs_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(179):    CfgIntParmPtr  rtcTimeoutMsecs_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(181):    CfgIntParmPtr  rtcLimit_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(182):    CfgIntParmPtr  rtcInterval_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(184):    CfgIntParmPtr  trapLimit_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(185):    CfgIntParmPtr  trapInterval_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(187):    CfgIntParmPtr  stackUsageLimit_;
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h(188):    CfgIntParmPtr  stackCheckInterval_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(55):    CounterPtr       recvs_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(56):    AccumulatorPtr   bytesRcvd_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(59):    CounterPtr       discards_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(60):    CounterPtr       rejects_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(61):    CounterPtr       sends_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(62):    AccumulatorPtr   bytesSent_;
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(64):    CounterPtr       overflows_;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(589):    id_t             index;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(590):    word             sid, ind;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(592):    auto&            pmsg = static_cast< PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(652):    TestRc            rc;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(653):    auto&             pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(655):    id_t              index;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(656):    word              sid, ind;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(758):    word           port;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(760):    auto&          pmsg = static_cast< PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(785):    TestRc          rc;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(786):    auto&           pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(787):    word            port;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(879):    TestRc        rc;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(880):    auto&         pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(882):    bool          ring = false;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(883):    auto          exists = false;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(967):    TestRc        rc;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(968):    auto&         pmsg = static_cast< const PotsMessage& >(msg);
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(970):    string        scan;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(971):    auto          digits = false;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(972):    auto          flash = false;
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(973):    auto          exists = false;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(49):    CounterPtr       icMsgsIntra_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(50):    CounterPtr       icMsgsInter_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(52):    CounterPtr       ogMsgsIntra_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(53):    CounterPtr       ogMsgsInter_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(55):    CounterPtr       contexts_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(56):    CounterPtr       msgsDeleted_;
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(57):    CounterPtr       ctxsDeleted_;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(65):    CounterPtr       requeues_;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(66):    CounterPtr       trojans_;
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(67):    CounterPtr       lockouts_;
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(44):    LocalAddress      txAddr;         // source address
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(45):    LocalAddress      rxAddr;         // destination address
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(47):    bool              initial  : 1;   // true for initial message
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(48):    bool              final    : 1;   // true for final message
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(49):    bool              join     : 1;   // true to create PSM and join root SSM
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(50):    bool              self     : 1;   // true for message to self
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(51):    bool              injected : 1;   // true if sent by InjectCommand
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(52):    bool              kill     : 1;   // true to kill context on arrival
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(53):    uint8_t           spare    : 6;   // reserved for future use
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(54):    Message::Route    route    : 2;   // the route that the message took
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(55):    ProtocolId        protocol : 16;  // message's protocol
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(56):    SignalId          signal   : 16;  // message's signal
  C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h(57):    uint16_t          length   : 16;  // total bytes in all parameters
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(134):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(135):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(136):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(137):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(139):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(245):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(246):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(247):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(248):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(250):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(313):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(314):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(315):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(316):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(318):    CauseInfo*    cci;
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(358):    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(359):    auto          msg = static_cast< CipMessage* >(ame.Msg());
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(360):    auto          sid = msg->GetSignal();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(361):    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp(363):    CauseInfo*    cci;
W102 Line length exceeds the standard maximum
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp(300):    for(auto s = BcState::AuthorizingOrigination; s <= BcState::OrigAlerting; ++s)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1180):       if((s.front() != '/') && (s.front() != QUOTE)) warnings.insert(Indentation);
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2228):       (lpar.iter->code.find_first_not_of(WhitespaceChars, lpar.pos + 1) == rpar))
W103 Function not sorted in standard order
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.cpp(76): char FactionChar(Faction faction)
  C:/Users/gregu/Documents/rsc/rsc/nb/ToolTypes.cpp(67): ostream& operator<<(ostream& stream, TraceStatus status)
W104 File heading is not standard
  C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.cpp(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.cpp(7): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h(7): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.cpp(7): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.h(7): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/BotType.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.cpp(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h(5): //  Copyright (C) 2019  Greg Utas
  C:/Users/gregu/Documents/rsc/rsc/dip/DipTypes.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Province.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Province.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/StartupParameters.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/StartupParameters.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/UnitOrder.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/UnitOrder.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.cpp(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.h(5): //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
W106 Function does not invoke Debug::ft
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(1380): void PotsTrafficThread::RecordHoldingTime(secs_t secs)
  C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.cpp(123): CliParm* CauseParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.cpp(109): CliParm* ProgressParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(379): CliText* CipIamSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(393): CliText* CipCpgSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(407): CliText* CipAnmSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(421): CliText* CipRelSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(461): CliParm* CipRouteParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(565): CliParm* CipCallingParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(589): CliParm* CipCalledParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(615): CliParm* CipOriginalCallingParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp(641): CliParm* CipOriginalCalledParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/cb/DigitString.cpp(169): Digit DigitString::GetDigit(DigitCount i) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1763): int8_t CodeFile::GetDepth(size_t line) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1808): void CodeFile::GetLineCounts() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1824): LineType CodeFile::GetLineType(size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1979): void CodeFile::InsertClass(Class* cls)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1987): void CodeFile::InsertData(Data* data)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(1995): bool CodeFile::InsertDirective(DirectivePtr& dir)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2004): void CodeFile::InsertEnum(Enum* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2012): void CodeFile::InsertForw(Forward* forw)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2020): void CodeFile::InsertFunc(Function* func)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2028): void CodeFile::InsertInclude(IncludePtr& incl)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2057): void CodeFile::InsertMacro(Macro* macro)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2065): void CodeFile::InsertType(Typedef* type)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp(2073): void CodeFile::InsertUsing(Using* use)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.cpp(223): bool LinesCanBeMerged
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(639): word CodeInfo::FindWarning(const WarningLog& log)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(833): bool CodeInfo::IsSortedByFile(const WarningLog& log1, const WarningLog& log2)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(851): bool CodeInfo::IsSortedByWarning(const WarningLog& log1, const WarningLog& log2)
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(869): bool CodeInfo::IsSortedForFixing(const WarningLog& log1, const WarningLog& log2)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(376): void Class::AddItem(CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1276): Class* Class::GetClassTemplate() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1308): Cxx::Access Class::GetCurrAccess() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1384): size_t Class::GetRange(size_t& begin, size_t& end) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1399): CxxScope* Class::GetTemplate() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(1770): Class* Class::OuterClass() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp(2501): const FunctionPtrVector* CxxArea::FuncVector(const string& name) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp(48): void AlignLeft(ostream& stream, const string& prefix)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp(151): CxxToken* Define::AutoType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp(822): CxxScope* MacroName::GetScope() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(235): const Parser* Context::GetParser()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(297): bool Context::OptionIsOn(char opt)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(304): bool Context::ParsingTemplateInstance()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(382): void Context::SetPos(size_t pos)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(414): void Context::SetPos(const CxxLocation& loc)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(504): void Context::Trace(CxxTrace::Action act)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(512): void Context::Trace(CxxTrace::Action act, const StackArg& arg)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(520): void Context::Trace(CxxTrace::Action act, word err, const string& expl)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(528): void Context::Trace(CxxTrace::Action act, const CodeFile& file)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(536): void Context::Trace(CxxTrace::Action act, const CxxToken* token)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(735): OptionalCode* ParseFrame::Optional() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(922): CxxScope* ParseFrame::Scope() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp(953): bool SourceLoc::operator<(const SourceLoc& that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(74): size_t CxxLocation::GetPos() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(81): void CxxLocation::SetLoc(CodeFile* file, size_t pos)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(203): CxxArea* CxxNamed::GetArea() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(212): Class* CxxNamed::GetClass() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(221): id_t CxxNamed::GetDeclFid() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(230): size_t CxxNamed::GetRange(size_t& begin, size_t& end) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(239): void CxxNamed::GetScopedNames(stringVector& names) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(246): Namespace* CxxNamed::GetSpace() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(255): bool CxxNamed::IsInTemplateInstance() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(612): void CxxNamed::strName(ostream& stream, bool fq, const QualName* name) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(953): TypeTags DataSpec::GetAllTags() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(976): TypeSpec* DataSpec::GetTypeSpec() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(1105): bool DataSpec::IsAutoDecl() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(1837): TypeName* QualName::At(size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(1946): TypeName* QualName::GetTemplateArgs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2026): TypeName* QualName::Last() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2273): size_t QualName::Size() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2550): CxxNamed* TypeName::DirectType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2574): TypeName* TypeName::GetTemplateArgs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(2742): void TypeName::PushBack(TypeNamePtr& type)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(3241): int TypeTags::IsConstPtr() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp(3249): bool TypeTags::IsConstPtr(size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(113): bool Block::CrlfOver(Form form) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(232): CxxToken* Block::FirstStatement() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(240): Function* Block::GetFunction() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(280): bool Block::InLine() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(826): id_t CxxScope::GetDistinctDeclFid() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1184): CodeFile* Data::GetDeclFile() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1191): const Data* Data::GetDefn() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1200): CodeFile* Data::GetDefnFile() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1247): TypeName* Data::GetTemplateArgs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1403): bool Data::IsConst() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(1516): bool Data::WasRead()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3358): FunctionRole Function::FuncRole() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3395): FunctionType Function::FuncType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3406): CodeFile* Function::GetDeclFile() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3413): const Function* Function::GetDefn() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3422): CodeFile* Function::GetDefnFile() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3431): size_t Function::GetRange(size_t& begin, size_t& end) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3447): CxxScope* Function::GetScope() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3459): CxxScope* Function::GetTemplate() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3471): TemplateType Function::GetTemplateType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3951): bool Function::IsImplemented() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(3959): bool Function::IsInTemplateInstance() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4673): void FuncSpec::AddArray(ArraySpecPtr& array)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4687): TagCount FuncSpec::Arrays() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4694): void FuncSpec::Check() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4701): TypeSpec* FuncSpec::Clone() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4723): void FuncSpec::EnterArrays() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4742): void FuncSpec::FindReferent()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4750): TypeTags FuncSpec::GetAllTags() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4757): TypeName* FuncSpec::GetTemplateArgs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4764): TypeSpec* FuncSpec::GetTypeSpec() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4771): bool FuncSpec::HasArrayDefn() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4778): void FuncSpec::Instantiating() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4786): bool FuncSpec::IsConst() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4793): bool FuncSpec::ItemIsTemplateArg(const CxxScoped* item) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4801): bool FuncSpec::MatchesExactly(const TypeSpec* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4809): TypeMatch FuncSpec::MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4819): TypeMatch FuncSpec::MatchTemplateArg(const TypeSpec* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4841): TagCount FuncSpec::Ptrs(bool arrays) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4848): TagCount FuncSpec::Refs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4855): void FuncSpec::RemoveRefs()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4862): StackArg FuncSpec::ResultType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4869): void FuncSpec::SetPtrs(TagCount count)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4876): void FuncSpec::SetReferent(CxxNamed* item, const SymbolView* view) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4891): const TypeTags* FuncSpec::Tags() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp(4898): TypeTags* FuncSpec::Tags()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(296): Class* BaseDecl::GetClass() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(397): void CxxScoped::AddFiles(SetOfIds& imSet) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(532): CodeFile* CxxScoped::GetImplFile() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(541): size_t CxxScoped::GetRange(size_t& begin, size_t& end) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(552): bool CxxScoped::IsAuto() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(561): bool CxxScoped::IsConst() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(570): bool CxxScoped::IsConstPtr() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(579): bool CxxScoped::IsConstPtr(size_t n) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(588): bool CxxScoped::IsDeclaredInFunction() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(596): bool CxxScoped::IsDefinedIn(const CxxArea* area) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(609): bool CxxScoped::IsIndirect() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1007): TypeSpec* Enum::GetTypeSpec() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1182): void Enumerator::RecordAccess(Cxx::Access access) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1246): CxxToken* Forward::AutoType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1439): CxxToken* Friend::AutoType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1705): Function* Friend::GetFunction() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1714): QualName* Friend::GetQualName() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(1723): CxxNamed* Friend::GetReferent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp(2206): TypeName* Typedef::GetTemplateArgs() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp(284): void CxxStatement::EnterBlock()
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp(364): bool Do::InLine() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp(574): bool For::InLine() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp(680): bool If::InLine() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp(1082): bool While::InLine() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(91): template< typename T > void Erase(const CxxScoped* item,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(189): template< typename T > void ListSymbols(const string& name,
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(226): void CxxSymbols::EraseClass(const Class* cls)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(233): void CxxSymbols::EraseData(const Data* data)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(240): void CxxSymbols::EraseEnum(const Enum* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(247): void CxxSymbols::EraseEtor(const Enumerator* etor)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(254): void CxxSymbols::EraseForw(const Forward* forw)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(261): void CxxSymbols::EraseFriend(const Friend* frnd)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(268): void CxxSymbols::EraseFunc(const Function* func)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(297): void CxxSymbols::EraseMacro(const Macro* macro)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(304): void CxxSymbols::EraseSpace(const Namespace* space)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(311): void CxxSymbols::EraseTerm(const Terminal* term)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(318): void CxxSymbols::EraseType(const Typedef* type)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(666): void CxxSymbols::InsertClass(Class* cls)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(673): void CxxSymbols::InsertData(Data* data)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(680): void CxxSymbols::InsertEnum(Enum* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(687): void CxxSymbols::InsertEtor(Enumerator* etor)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(694): void CxxSymbols::InsertForw(Forward* forw)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(701): void CxxSymbols::InsertFriend(Friend* frnd)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(708): void CxxSymbols::InsertFunc(Function* func)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(742): void CxxSymbols::InsertMacro(Macro* macro)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(749): void CxxSymbols::InsertSpace(Namespace* space)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(756): void CxxSymbols::InsertTerm(Terminal* term)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp(763): void CxxSymbols::InsertType(Typedef* type)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(262): bool CxxToken::IsPointer(bool arrays) const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(353): void CxxUsageSets::AddBase(const CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(361): void CxxUsageSets::AddDirect(const CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(369): void CxxUsageSets::AddForward(const CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(380): void CxxUsageSets::AddIndirect(const CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(388): void CxxUsageSets::AddUser(const CxxNamed* item)
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(734): Numeric FloatLiteral::GetNumeric() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(795): Numeric IntLiteral::BaseNumeric() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(938): CxxToken* Literal::AutoType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(963): CxxToken* Literal::RootType() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(979): Cxx::ItemType Literal::Type() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(2707): TypeSpec* StrLiteral::GetTypeSpec() const
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp(2714): CxxNamed* StrLiteral::Referent() const
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(81): bool IsBlank(char c)
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(88): bool IsWordChar(char c)
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2087): LineType Editor::GetLineType(const Iter& iter) const
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2773): bool Editor::IsSorted1(const SourceLine& line1, const SourceLine& line2)
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2780): bool Editor::IsSorted2(const string& line1, const string& line2)
  C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp(2911): void Editor::PushBack(const string& code)
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(134): const OperatorInfo* OperatorInfo::GetAttrs(LibTokenType type)
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp(142): bool OperatorInfo::GetType(const string& op, LibTokenType& type)
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(57): IndentRule ClassifyIndent(string& id)
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(705): void Lexer::GetDepth(size_t line, int8_t& depth, bool& cont) const
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(873): size_t Lexer::GetLineNum(size_t pos) const
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(897): size_t Lexer::GetLineStart(size_t line) const
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(970): bool Lexer::GetNthLine(size_t n, string& s) const
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(1868): void Lexer::SetDepth(size_t& start, int8_t depth1, int8_t depth2)
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.cpp(103): word LibraryErrSet::Error(string& expl) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(76): LibrarySet* LibrarySet::AffectedBy() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(83): LibrarySet* LibrarySet::Affecters() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(90): LibrarySet* LibrarySet::Assign(LibrarySet* rhs)
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(108): LibrarySet* LibrarySet::CommonAffecters() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(155): LibrarySet* LibrarySet::Create(const string& name, SetOfIds* set) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(162): LibrarySet* LibrarySet::Difference(const LibrarySet* rhs) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(169): LibrarySet* LibrarySet::Directories() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(188): LibrarySet* LibrarySet::FileName(const LibrarySet* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(195): LibrarySet* LibrarySet::Files() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(202): LibrarySet* LibrarySet::FileType(const LibrarySet* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(231): LibrarySet* LibrarySet::FoundIn(const LibrarySet* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(250): LibrarySet* LibrarySet::Implements() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(257): LibrarySet* LibrarySet::Intersection(const LibrarySet* rhs) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(264): bool LibrarySet::IsReadOnly() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(271): bool LibrarySet::IsTemporary() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(298): LibrarySet* LibrarySet::MatchString(const LibrarySet* that) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(305): LibrarySet* LibrarySet::NeededBy() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(312): LibrarySet* LibrarySet::Needers() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(321): word LibrarySet::NotImplemented(string& expl) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(347): LibrarySet* LibrarySet::OpError() const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(463): LibrarySet* LibrarySet::Union(const LibrarySet* rhs) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(470): LibrarySet* LibrarySet::UsedBy(bool self) const
  C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp(477): LibrarySet* LibrarySet::Users(bool self) const
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(453): BaseBot::StartupResult BaseBot::initialise(const StartupParameters& parameters)
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(460): BaseBot* BaseBot::instance()
  C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.cpp(29): void ConvoySubversion::clear()  // <b>
  C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.cpp(37): void ConvoySubversion::decrement()
  C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp(447): ipport_t BotTcpService::Port() const { return ipport_t(port_); }
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.cpp(47): bool Location::operator<(const Location& that) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(271): bool MapAndUnits::can_move_to(const UnitOrder& unit, const Location& dest) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(289): bool MapAndUnits::can_move_to_province
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(585): TokenMessage MapAndUnits::encode_location(const Location& location) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(859): TokenMessage MapAndUnits::encode_unit(const UnitOrder& unit) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(1192): const LocationSet* MapAndUnits::get_neighbours(const Location& location) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(1440): MapAndUnits* MapAndUnits::instance()
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2539): Token MapAndUnits::province_token(ProvinceId province) const
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp(2669): bool MapAndUnits::set_move_by_single_step_convoy_order
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(32): Token::Token(const category_t cat, const subtoken_t sub)
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(40): int Token::get_number() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(49): bool Token::is_number() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(56): bool Token::is_power() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(63): bool Token::is_province() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(70): Token& Token::operator=(const Token& that)
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(126): Token::SeasonType Token::order_season() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(137): PowerId Token::power_id() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(145): ProvinceId Token::province_id() const
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(268): Token power_token(PowerId power)
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp(281): Token province_token(ProvinceId province)
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(125): Token TokenMessage::at(size_t index) const
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(137): void TokenMessage::clear()
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(267): Token TokenMessage::front() const
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(352): Token TokenMessage::operator[](size_t index) const
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp(477): bool TokenMessage::operator<(const TokenMessage& that) const
  C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.cpp(332): TokenTextMap* TokenTextMap::instance()
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.cpp(35): size_t WinterOrders::get_number_of_results() const
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.cpp(107): CliParm* MediaParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp(259): MediaPsm* MediaPsm::GetOgPsm() const
  C:/Users/gregu/Documents/rsc/rsc/mb/Switch.cpp(89): Circuit* Switch::GetCircuit(PortId pid) const
  C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.cpp(79): Tone* ToneRegistry::GetTone(Tone::Id tid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp(128): void Base::Nullify(size_t n)
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp(157): Base::vptr_t Base::Vptr() const
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.cpp(52): void CfgBitParm::Explain(string& expl) const
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.cpp(70): bool CfgFlagParm::GetCurrValue() const
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.cpp(72): void CfgIntParm::Explain(string& expl) const
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.cpp(275): void CfgParmRegistry::ListParms(ostream& stream, const string& prefix) const
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.cpp(68): void CfgStrParm::Explain(string& expl) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ClassRegistry.cpp(79): Class* ClassRegistry::Lookup(ClassId cid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/CliCookie.cpp(136): uint32_t CliCookie::Index(uint32_t depth) const
  C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.cpp(363): CliAppData* CliThread::GetAppData(CliAppData::Id aid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.cpp(47): void Debug::Assert(bool condition, debug32_t errval)
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.cpp(140): void Debug::Reset()
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.cpp(40): int FunctionName::compare(fn_name_arg func, const char* str)
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.cpp(47): size_t FunctionName::find(fn_name_arg func, const char* str)
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.cpp(55): size_t FunctionName::rfind(fn_name_arg func, const char* str)
  C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp(28): bool InitFlags::AllowBreak()
  C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp(39): bool InitFlags::CauseTimeout()
  C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp(48): bool InitFlags::ImmediateTrace()
  C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp(57): bool InitFlags::TraceInit()
  C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp(68): bool InitFlags::TraceWork()
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(154): size_t SegmentHeader::Size()
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(171): SysHeap* Memory::AccessHeap(MemoryType type)
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(189): size_t Memory::Align(size_t size, size_t log2align)
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(257): SysHeap* Memory::EnsureHeap(MemoryType type)
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(311): const SysHeap* Memory::Heap(MemoryType type)
  C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp(405): size_t Memory::Words(size_t nBytes)
  C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.cpp(152): Module* ModuleRegistry::GetModule(ModuleId mid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.cpp(74): TraceStatus MsgBuffer::GetStatus() const
  C:/Users/gregu/Documents/rsc/rsc/nb/NbCliParms.cpp(114): word ExplainTraceRc(const CliThread& cli, TraceRc rc)
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp(172): TraceStatus NbTracer::FactionStatus(Faction faction) const
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.cpp(45): char BlockingReasonChar(BlockingReason reason)
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.cpp(76): char FactionChar(Faction faction)
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.cpp(71): Object::ClassId Object::GetClassId() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.cpp(82): bool Object::GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid)
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.cpp(109): Object::ObjectId Object::GetObjectId() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(276): size_t ObjectPool::AllocCount() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(442): bool ObjectPool::BidToIndices(PooledObjectId bid, size_t& i, size_t& j) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(697): size_t ObjectPool::FailCount() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(742): size_t ObjectPool::FreeCount() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(749): bool ObjectPool::IndicesToBid(size_t i, size_t j, PooledObjectId& bid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(761): size_t ObjectPool::InUseCount() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(768): size_t ObjectPool::LowAvailCount() const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(775): ObjectBlock* ObjectPool::Next(PooledObjectId& bid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(794): Pooled* ObjectPool::NextUsed(PooledObjectId& bid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(867): ObjectPoolId ObjectPool::ObjPid(const Pooled* obj)
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(876): PooledObjectSeqNo ObjectPool::ObjSeq(const Pooled* obj)
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(885): ObjectBlock* ObjectPool::ObjToBlock(const Pooled* obj)
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.cpp(289): ObjectPool* ObjectPoolRegistry::Pool(ObjectPoolId pid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/PermanentHeap.cpp(48): PermanentHeap* PermanentHeap::Instance()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(124): Flags PS_Break()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(129): Flags PS_Delayed()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(134): Flags PS_Exit()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(139): Flags PS_Final()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(144): Flags PS_Interrupt()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(149): Flags PS_Native()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(154): Flags PS_NoError()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(159): Flags PS_NoLog()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp(164): Flags PS_NoRecover()
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.cpp(57): Flags PosixSignalRegistry::Attrs(signal_t value) const
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.cpp(90): PosixSignal* PosixSignalRegistry::Find(signal_t value) const
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.cpp(102): PosixSignal* PosixSignalRegistry::Find(const string& name) const
  C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.cpp(153): signal_t PosixSignalRegistry::Value(const string& name) const
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Link.cpp(40): Q2Link::~Q2Link()
  C:/Users/gregu/Documents/rsc/rsc/nb/RegCell.cpp(37): RegCell::~RegCell()
  C:/Users/gregu/Documents/rsc/rsc/nb/RegCell.cpp(49): void RegCell::SetId(id_t cid)
  C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.cpp(125): Singletons* Singletons::Instance()
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.cpp(117): uint64_t Statistic::Overall() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.cpp(258): uint64_t HighWatermark::Overall() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.cpp(334): uint64_t LowWatermark::Overall() const
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.cpp(147): StatisticsGroup* StatisticsRegistry::GetGroup(id_t gid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysConsole.cpp(32): std::istream& SysConsole::In()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysConsole.cpp(39): ostream& SysConsole::Out()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(99): bool FileWalker::AtEnd() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(106): void FileWalker::GetName(string& fileName) const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp(115): bool FileWalker::IsSubdir() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.cpp(48): Thread* SysMutex::Owner() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(269): void SysThread::RegisterForSignal(signal_t sig, sighandler_t handler)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(296): SysThreadId SysThread::RunningThreadId()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(121): DWORD64 StackInfo::GetFrame(fn_depth depth)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(137): fn_depth StackInfo::GetFrames()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(145): void StackInfo::Shutdown()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(154): DWORD StackInfo::Startup()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp(265): fn_depth SysThreadStack::FuncDepth()
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.win.cpp(71): ticks_t SysTickTimer::TicksNow() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(181): int16_t SysTime::DayOfWeek() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(191): int16_t SysTime::DayOfYear() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(207): const int16_t* SysTime::DaysPerMonth(int16_t year)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(215): size_t SysTime::DaysSinceT0() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(245): bool SysTime::IsLeapYear(int16_t year)
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp(265): int64_t SysTime::MsecsSinceT0() const
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.cpp(30): uintptr_t BadPointer()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(29): bool ThisThread::EnterBlockingOperation(BlockingReason why, fn_name_arg func)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(36): void ThisThread::ExitBlockingOperation(fn_name_arg func)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(43): void ThisThread::MakePreemptable()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(50): void ThisThread::MakeUnpreemptable()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(57): void ThisThread::MemProtect()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(64): void ThisThread::MemUnprotect()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(71): DelayRc ThisThread::Pause(msecs_t msecs)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(78): void ThisThread::PauseOver(word limit)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(85): word ThisThread::RtcPercentUsed()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(92): ThreadId ThisThread::RunningThreadId()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(99): TraceRc ThisThread::StartTracing(bool immediate, bool autostop)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp(106): void ThisThread::StopTracing()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(438): ContextSwitch* ContextSwitches::AddSwitch()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1151): TraceStatus Thread::CalcStatus(bool dynamic) const
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1532): main_t Thread::EnterThread(void* arg)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1736): void Thread::FunctionInvoked(fn_name_arg func)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1833): bool Thread::HasExited() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1896): bool Thread::IsLocked() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1903): Thread* Thread::LockedThread()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1970): TraceRc Thread::LogContextSwitches(bool on)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2095): SysThreadId Thread::NativeThreadId() const
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2123): DelayRc Thread::Pause(msecs_t msecs)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2163): double Thread::PercentIdle()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2522): bool Thread::RunningLocked()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2673): void Thread::StackCheck()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2945): TraceRc Thread::StartTracing(bool immediate, bool autostop)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2981): void Thread::StopTracing()
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(3044): void Thread::Trace(Thread* thr, fn_name_arg func, TraceRecordId rid, word info)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(3060): bool Thread::TraceRunningThread(Thread*& thr)
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(3095): void Thread::TrapCheck()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(287): bool ThreadAdmin::BreakEnabled()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(385): void ThreadAdmin::Incr(Register r)
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(493): word ThreadAdmin::TrapCount()
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.cpp(209): ThreadId ThreadRegistry::FindThreadId(SysThreadId nid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.cpp(218): Thread* ThreadRegistry::GetThread(ThreadId tid) const
  C:/Users/gregu/Documents/rsc/rsc/nb/ToolRegistry.cpp(117): Tool* ToolRegistry::GetTool(FlagId id) const
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(112): TraceBuffer::TraceBuffer() :
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(140): TraceBuffer::~TraceBuffer()
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(154): void* TraceBuffer::AddRecord(size_t nBytes)
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(354): bool TraceBuffer::Empty() const
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(385): bool TraceBuffer::IsLocked()
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(394): void TraceBuffer::Lock()
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(414): void TraceBuffer::Next(TraceRecord*& record, const Flags& mask) const
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(475): void TraceBuffer::PurgeRecords(size_t end)
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(543): void TraceBuffer::RecordInvocation(fn_name_arg func) const
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp(746): void TraceBuffer::Unlock()
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.cpp(97): void FunctionProfiler::CheckHigh(FunctionStats*& high,
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.cpp(51): int FunctionStats::Compare(const FunctionStats& that) const
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.cpp(69): void FunctionStats::IncrCalls(usecs_t net)
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1304): Q1WayItem::~Q1WayItem()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1338): Q1WayPool::Q1WayPool()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1367): void Q1WayPool::Reallocate()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1824): Q2WayItem::~Q2WayItem()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1858): Q2WayPool::Q2WayPool()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1887): void Q2WayPool::Reallocate()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2388): RegistryItem::~RegistryItem()
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2419): RegistryPool::RegistryPool()
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.cpp(154): TestDatabase::State TestDatabase::GetState(const string& testcase)
  C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp(204): TraceStatus IpBuffer::GetStatus() const
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(205): size_t IpPort::Discards() const
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(283): IpPort* IpPortRegistry::GetPort(ipport_t port, IpProtocol protocol) const
  C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.cpp(78): IpService* IpServiceRegistry::GetService(const string& name) const
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.cpp(135): bool SysSocket::SetTracing(bool tracing)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.cpp(143): bool SysSocket::Trace(TraceStatus status)
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.cpp(154): bool SysSocket::TraceEnabled()
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(35): uint32_t htonl(uint32_t hostlong) { return ::htonl(hostlong); }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(37): uint64_t htonll(uint64_t hostllong) { return ::htonll(hostllong); }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(39): uint16_t htons(uint16_t hostshort) { return ::htons(hostshort); }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(41): uint32_t ntohl(uint32_t netlong) { return ::ntohl(netlong); }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(43): uint64_t ntohll(uint32_t netllong) { return ::ntohll(netllong); }
  C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp(45): uint16_t ntohs(uint16_t netshort) { return ::ntohs(netshort); }
  C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp(466): SysTcpSocket* TcpIoThread::Listener() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.cpp(97): CliText* PotsBicFeature::Attrs() const { return new PotsBicAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.cpp(82): CliText* PotsBocFeature::Attrs() const { return new PotsBocAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.cpp(79): CliText* PotsCfbFeature::Attrs() const { return new PotsCfbAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.cpp(97): CliText* PotsCfnFeature::Attrs() const { return new PotsCfnAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.cpp(79): CliText* PotsCfuFeature::Attrs() const { return new PotsCfuAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp(513): void PotsCircuit::Trace(const SignalEntry& entry)
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.cpp(76): CliText* PotsCwtFeature::Attrs() const { return new PotsCwtAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.cpp(69): CliText* PotsCxfFeature::Attrs() const { return new PotsCxfAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.cpp(148): PotsFeature* PotsFeatureRegistry::Feature(PotsFeature::Id fid) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.cpp(84): CliText* PotsHtlFeature::Attrs() const { return new PotsHtlAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.cpp(113): PotsProfile* PotsProfileRegistry::Profile(Address::DN dn) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(355): CliText* PotsAlertingSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(369): CliText* PotsDigitsSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(383): CliText* PotsFacilitySignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(397): CliText* PotsFlashSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(411): CliText* PotsLockoutSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(425): CliText* PotsOffhookSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(439): CliText* PotsOnhookSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(453): CliText* PotsProgressSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(467): CliText* PotsReleaseSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(481): CliText* PotsSuperviseSignal::CreateText() const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(524): CliParm* PotsDigitsParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(566): CliParm* PotsFacilityParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(736): CliParm* PotsHeaderParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(857): CliParm* PotsRingParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp(945): CliParm* PotsScanParameter::CreateCliParm(Usage use) const
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.cpp(74): CliText* PotsSusFeature::Attrs() const { return new PotsSusAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.cpp(85): CliText* PotsTwcFeature::Attrs() const { return new PotsTwcAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.cpp(96): CliText* PotsWmlFeature::Attrs() const { return new PotsWmlAttrs; }
  C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSapEvent.cpp(91): void AnalyzeSapEvent::Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSnpEvent.cpp(87): void AnalyzeSnpEvent::Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(329): void Context::Dump() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(953): bool Context::TraceOn()
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(963): bool Context::TraceOn(TransTrace*& trans)
  C:/Users/gregu/Documents/rsc/rsc/sb/Event.cpp(138): void Event::Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(219): size_t Factory::DiscardedContextCount() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(226): size_t Factory::DiscardedMessageCount() const
  C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.cpp(151): Factory* FactoryRegistry::GetFactory(FactoryId fid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InitiationReqEvent.cpp(89): void InitiationReqEvent::Capture
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(700): void InvokerPool::RecordDelay(Message::Priority prio, msecs_t delay) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(804): size_t InvokerPool::WorkQCurrLength(Message::Priority prio) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(812): msecs_t InvokerPool::WorkQMaxDelay(Message::Priority prio) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(820): size_t InvokerPool::WorkQMaxLength(Message::Priority prio) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.cpp(178): InvokerPool* InvokerPoolRegistry::Pool(Faction faction) const
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.cpp(113): TraceStatus InvokerThread::CalcStatus(bool dynamic) const
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(244): MsgDirection Message::Dir() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(331): ProtocolId Message::GetProtocol() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(366): SignalId Message::GetSignal() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp(422): MsgHeader* Message::Header() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.cpp(194): Parameter::Usage Parameter::GetUsage(SignalId sid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(135): Parameter* Protocol::FirstParm() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(148): Signal* Protocol::FirstSignal() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(161): Parameter* Protocol::GetParameter(ParameterId pid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(173): Signal* Protocol::GetSignal(SignalId sid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(185): void Protocol::NextParm(Parameter*& parm) const
  C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp(198): void Protocol::NextSignal(Signal*& sig) const
  C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.cpp(79): Protocol* ProtocolRegistry::GetProtocol(ProtocolId prid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp(397): void TimerPool::IncrTimeouts() const
  C:/Users/gregu/Documents/rsc/rsc/sb/Service.cpp(371): Trigger* Service::GetTrigger(TriggerId tid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.cpp(79): Service* ServiceRegistry::GetService(ServiceId sid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp(312): Service* ServiceSM::GetService() const
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(125): bool State::BindEventHandler(EventHandlerId ehid, EventId eid)
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(157): bool State::BindMsgAnalyzer(EventHandlerId ehid, ServicePortId pid)
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(237): EventHandlerId State::GetHandler(EventId eid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp(245): EventHandlerId State::MsgAnalyzer(ServicePortId pid) const
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.cpp(60): TraceStatus TimerThread::CalcStatus(bool dynamic) const
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp(384): PotsProfile* PotsBcSsm::Profile() const
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.cpp(119): void PotsTreatmentRegistry::SetCauseToTreatmentQ
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.cpp(201): PotsTreatmentQueue* PotsTreatmentRegistry::TreatmentQ
  C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.cpp(76): bool MscAddress::ExternalFid(FactoryId& fid) const
  C:/Users/gregu/Documents/rsc/rsc/st/MscContext.cpp(88): bool MscContext::IsEqualTo(const void* rcvr, uint16_t cid) const
  C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.cpp(56): void MscContextPair::Contexts(MscContext*& ctx1, MscContext*& ctx2) const
W107 Function does not invoke Debug::ft as first statement
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.cpp(106):       Debug::ft(CinThread_Enter);
  C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.cpp(151):    Debug::ft(CinThread_GetLine);
  C:/Users/gregu/Documents/rsc/rsc/nb/Debug.cpp(74):    Debug::ft(Debug_GenerateSwLog);
  C:/Users/gregu/Documents/rsc/rsc/nb/Exception.cpp(45):    Debug::ft(Exception_ctor1);
  C:/Users/gregu/Documents/rsc/rsc/nb/MutexGuard.cpp(38):    Debug::ft(MutexGuard_ctor);
  C:/Users/gregu/Documents/rsc/rsc/nb/MutexGuard.cpp(51):       Debug::ft(MutexGuard_dtor);
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Link.cpp(49):    Debug::ft(Q1Link_dtor);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.win.cpp(107):    Debug::ft(SysMutex_Acquire);
  C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp(57):    Debug::ft(NodeBase_SE_Handler);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(1656):    Debug::ft(Thread_ExitIfSafe);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2467):    Debug::ft(Thread_ResumeLocked);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2645):    Debug::ft(Thread_SignalHandler);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(2717):          Debug::ft(Thread_Start);
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(3229):       Debug::ft(Thread_Unlock);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3520):       Debug::ft(RecoveryTestThread_Enter);
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(3602):       Debug::ft(RecoveryTestThread_LoopForever);
  C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp(695):    Debug::ft(Context_ProcessWork);
W110 Override of Base.Display not found
  C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h(43): class PotsShelfIpService : public UdpIpService
  C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp(224): class TrafficCallPool : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(298): class CipUdpService : public UdpIpService
  C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h(337): class CipTcpService : public TcpIpService
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(43): class CodeCoverage : public NodeBase::Temporary
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h(85): class CxxSymbols: public NodeBase::Base
  C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.h(44): class Interpreter : public NodeBase::Temporary
  C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h(87): class CfgFileTimeParm : public CfgStrParm
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h(63): class NbTracer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(75): class ObjectPoolSizeCfg : public CfgIntParm
  C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp(88): class ObjectPoolStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.h(41): class SysTickTimer : public Immutable
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(258): class ThreadStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(351): class ContextSwitches : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(606): class Orphans : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp(51): class ThreadsStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h(62): class TraceBuffer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h(49): class FunctionProfiler : public Temporary
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(1051): class LbcPool : public Temporary
  C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp(2810): class SysTimePool : public Temporary
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.h(41): class TestDatabase : public NodeBase::Temporary
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp(49): class IpPortStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp(47): class HostAddrCfg : public CfgStrParm
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(42): class NwTracer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp(43): class FactoryStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(58): class InvokerPoolStats : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp(72): class InvokerWork : public Dynamic
  C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h(194): class TimerPool : public ObjectPool
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(115): class SbTracer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(52): class PotsCallIpService : public UdpIpService
W111 Override of Object.Patch not found
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(38): class StatusCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(59): class LogsCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(87): class SetCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(116): class IncludeCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(146): class ExcludeCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(175): class QueryCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(205): class SaveCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(233): class ClearCommand : public CliCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h(63): class NbTracer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/PermanentHeap.h(36): class PermanentHeap : public SysHeap
  C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.h(41): class SysTickTimer : public Immutable
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(351): class ContextSwitches : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(606): class Orphans : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(740): class ThreadPriv : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(45): class NwClearCommand : public ClearCommand
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(73): class NwExcludeCommand : public ExcludeCommand
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(99): class NwIncludeCommand : public IncludeCommand
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(118): class NwQueryCommand : public QueryCommand
  C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h(133): class NwStatusCommand : public StatusCommand
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(42): class NwTracer : public Permanent
  C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h(50): class EventHandler : public Protected
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(40): class SbAnalyzeMessage : public EventHandler
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(54): class SbAnalyzeSap : public EventHandler
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(68): class SbAnalyzeSnp : public EventHandler
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(82): class SbForceTransition : public EventHandler
  C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h(96): class SbInitiationReq : public EventHandler
  C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.h(88): class TimeoutParameter : public TlvParameter
W112 Function could be defaulted
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(133):    virtual ~BcNull();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(140):    virtual ~BcAuthorizingOrigination();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(147):    virtual ~BcCollectingInformation();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(154):    virtual ~BcAnalyzingInformation();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(161):    virtual ~BcSelectingRoute();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(168):    virtual ~BcAuthorizingCallSetup();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(175):    virtual ~BcSendingCall();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(182):    virtual ~BcOrigAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(189):    virtual ~BcAuthorizingTermination();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(196):    virtual ~BcSelectingFacility();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(203):    virtual ~BcPresentingCall();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(210):    virtual ~BcTermAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(217):    virtual ~BcActive();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(224):    virtual ~BcLocalSuspending();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(231):    virtual ~BcRemoteSuspending();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(238):    virtual ~BcDisconnecting();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(245):    virtual ~BcException();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(883):    BcEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(884):    virtual ~BcEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1233):    BcNuAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1234):    ~BcNuAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1243):    BcScAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1244):    ~BcScAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1253):    BcOaAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1254):    ~BcOaAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1263):    BcPcAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1264):    ~BcPcAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1273):    BcAcAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h(1274):    ~BcAcAnalyzeRemoteMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(88):    virtual ~ProxyBcNull();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(95):    virtual ~ProxyBcAuthorizingOrigination();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(102):    virtual ~ProxyBcCollectingInformation();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(109):    virtual ~ProxyBcAnalyzingInformation();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(116):    virtual ~ProxyBcSelectingRoute();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(123):    virtual ~ProxyBcAuthorizingCallSetup();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(130):    virtual ~ProxyBcSendingCall();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(137):    virtual ~ProxyBcOrigAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(144):    virtual ~ProxyBcAuthorizingTermination();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(151):    virtual ~ProxyBcSelectingFacility();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(158):    virtual ~ProxyBcPresentingCall();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(165):    virtual ~ProxyBcTermAlerting();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(172):    virtual ~ProxyBcActive();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(179):    virtual ~ProxyBcLocalSuspending();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(186):    virtual ~ProxyBcRemoteSuspending();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(193):    virtual ~ProxyBcDisconnecting();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(200):    virtual ~ProxyBcException();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(302):    ProxyBcEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(303):    virtual ~ProxyBcEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(321):    ProxyBcAnalyzeProxyMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(322):    ~ProxyBcAnalyzeProxyMessage();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(331):    ProxyBcProgressHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(332):    ~ProxyBcProgressHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(341):    ProxyBcAnswerHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(342):    ~ProxyBcAnswerHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(351):    ProxyBcReleaseHandler();
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h(352):    ~ProxyBcReleaseHandler();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(99):    ~ToneSilent();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(108):    ~ToneDial();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(117):    ~ToneStutteredDial();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(126):    ~ToneConfirmation();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(135):    ~ToneRingback();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(144):    ~ToneBusy();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(153):    ~ToneCallWaiting();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(162):    ~ToneReorder();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(171):    ~ToneReceiverOffHook();
  C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h(180):    ~ToneHeld();
  C:/Users/gregu/Documents/rsc/rsc/nb/Base.h(64):    virtual ~Base() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Dynamic.h(43):    virtual ~Dynamic() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.h(42):    virtual ~FunctionTrace() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Immutable.h(42):    virtual ~Immutable() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(42):    virtual ~StatusCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(56):    virtual ~LogsAction() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(68):    virtual ~LogsCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(84):    virtual ~SetWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(97):    virtual ~SetCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(113):    virtual ~IncludeWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(127):    virtual ~IncludeCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(143):    virtual ~ExcludeWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(156):    virtual ~ExcludeCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(172):    virtual ~QueryWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(186):    virtual ~QueryCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(202):    virtual ~SaveWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(214):    virtual ~SaveCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(230):    virtual ~ClearWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h(248):    virtual ~ClearCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Object.h(44):    virtual ~Object() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Permanent.h(44):    virtual ~Permanent() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h(49):    virtual ~Pooled() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Protected.h(43):    virtual ~Protected() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(41):    virtual ~FileList() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h(63):    FileList() { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Temporary.h(42):    virtual ~Temporary() { }
  C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.h(49):    ~FunctionStats();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(114):    virtual ~PotsSignal();
  C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h(142):    virtual ~PotsParameter();
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(42):    virtual ~SbClearWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(62):    virtual ~SbClearCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(75):    virtual ~SbExcludeWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(91):    virtual ~SbExcludeCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(104):    virtual ~SbIncludeWhatParm() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(120):    virtual ~SbIncludeCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(135):    virtual ~SbQueryCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(147):    SbStatusCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h(148):    virtual ~SbStatusCommand() { }
  C:/Users/gregu/Documents/rsc/rsc/sb/TlvIntParameter.h(58):    virtual ~TlvIntParameter() { }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(111):    PotsCfxEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp(112):    virtual ~PotsCfxEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(236):    PotsCwmEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(237):    virtual ~PotsCwmEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(159):    PotsCwtEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(160):    virtual ~PotsCwtEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(83):    PotsMuxEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(84):    virtual ~PotsMuxEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(59):    ~PotsProxyNull();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(67):    ~PotsProxyAuthorizingOrigination();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(75):    ~PotsProxyCollectingInformation();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(83):    ~PotsProxyAnalyzingInformation();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(91):    ~PotsProxySelectingRoute();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(99):    ~PotsProxyAuthorizingCallSetup();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(107):    ~PotsProxySendingCall();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(115):    ~PotsProxyOrigAlerting();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(123):    ~PotsProxyAuthorizingTermination();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(131):    ~PotsProxySelectingFacility();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(139):    ~PotsProxyPresentingCall();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(147):    ~PotsProxyTermAlerting();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(155):    ~PotsProxyActive();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(163):    ~PotsProxyLocalSuspending();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(171):    ~PotsProxyRemoteSuspending();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h(179):    ~PotsProxyException();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(204):    ~PotsBcNull();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(212):    ~PotsBcAuthorizingOrigination();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(220):    ~PotsBcCollectingInformation();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(228):    ~PotsBcAnalyzingInformation();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(236):    ~PotsBcSelectingRoute();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(244):    ~PotsBcAuthorizingCallSetup();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(252):    ~PotsBcSendingCall();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(260):    ~PotsBcOrigAlerting();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(268):    ~PotsBcAuthorizingTermination();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(276):    ~PotsBcSelectingFacility();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(284):    ~PotsBcPresentingCall();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(292):    ~PotsBcTermAlerting();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(300):    ~PotsBcActive();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(308):    ~PotsBcLocalSuspending();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(316):    ~PotsBcRemoteSuspending();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(324):    ~PotsBcException();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(341):    ~PotsAuthorizeOriginationSap();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(354):    ~PotsCollectInformationSap();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(368):    ~PotsAuthorizeTerminationSap();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(381):    ~PotsLocalBusySap();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h(391):    ~PotsLocalAlertingSnp();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h(40):    virtual ~PotsSusInitiator() { }
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(116):    PotsWmlEventHandler();
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(117):    virtual ~PotsWmlEventHandler();
W114 Function could be tagged noexcept
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(173):       FuncInfo(const std::string& file, uint32_t hash) :
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h(175):       explicit FuncInfo(uint32_t hash) : hash(hash) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(292):    SymbolView();
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(296):    SymbolView(Accessibility a, TypeMatch m, bool u, bool f, bool r, Distance d);
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h(549):    LineTypeAttr(bool code, bool exe, bool merge, bool blank);
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h(236):    DataInitAttrs(const Data* m, bool n, size_t o) :
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(112):    StackArg(const StackArg& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(116):    StackArg& operator=(const StackArg& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(497):    SourceLoc(const CodeFile* f, size_t n) : file(f), line(n) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h(642):    static void Startup(NodeBase::RestartLevel level) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(74):    CxxLocation();
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(893):    TypeTags(const TypeTags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h(897):    TypeTags& operator=(const TypeTags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(53):    CxxUsageSets() = default;  // create empty CxxNamedSets
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(371):       Tags(Radix r, bool u, Size s) : radix_(r), unsigned_(u), size_(s) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(372):       Tags(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(373):       Tags& operator=(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(413):       Tags(bool e, Size s) : exp_(e), size_(s) { }
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(414):       Tags(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h(415):       Tags& operator=(const Tags& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(49):    ~Lexer() = default;
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h(401):       explicit LineInfo(size_t start) :
  C:/Users/gregu/Documents/rsc/rsc/ct/LibraryTypes.h(58):    FileLevel(NodeBase::id_t f, size_t l) : fid(f), level(l) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h(674):       SentPressInfo() : resend_partial(false), is_broadcast(false) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h(115):       Wakeup(BotEvent e, secs_t s) : event(e), secs(s) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.h(49):    ConvoySubversion();  // sets members to default values
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(49):    Location();
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(53):    Location(ProvinceId p, const Token& c);
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(58):    Location(const TokenMessage& where, const Token& unit_type);
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(63):    Location(const TokenMessage& unit);
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(67):    Location(const Location& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/dip/Location.h(71):    Location& operator=(const Location& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(62):    explicit PowerCentres(const Token& power) : power(power) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(72):    UnitLocation(const Token& unit, const Location& loc) :
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(83):    explicit PowerUnits(const Token& power) : power(power) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(93):    explicit PowerOrders(const Token& power) : power(power) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h(345):    ~MapAndUnits() = default;
  C:/Users/gregu/Documents/rsc/rsc/dip/Province.h(48):    Province();
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(40):    Token() : full_(INVALID_TOKEN) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(44):    Token(token_t token) : full_(token) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(52):    Token(const Token& that) : full_(that.full_) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(56):    ~Token() = default;
  C:/Users/gregu/Documents/rsc/rsc/dip/Token.h(179):       split_t() : sub_(INVALID_TOKEN & 0xff), cat_(INVALID_TOKEN >> 8) { }
  C:/Users/gregu/Documents/rsc/rsc/dip/UnitOrder.h(99):    UnitOrder();
  C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.h(48):    WinterOrders();
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(74):    DynAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(76):    ~DynAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(117):    ImmAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(119):    ~ImmAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(160):    PermAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(162):    ~PermAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(203):    ProtAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(205):    ~ProtAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(246):    TempAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(248):    ~TempAllocator() = default;
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Link.h(48):    Q1Link();
  C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h(54):    Q1Way() : diff_(NilDiff) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Link.h(48):    Q2Link();
  C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h(51):    Q2Way() : diff_(NilDiff) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/RegCell.h(50):    RegCell();
  C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.cpp(42):    SingletonTuple(const Base** a, MemoryType t) : addr(a), type(t) { }
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(308):    ContextSwitch();
  C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.h(141):       TestInfo(State state, uint32_t hash) : state(state), hash(hash) { }
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(104):       PeerFilter();
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(105):       PeerFilter(const SysIpL3Addr& a, TraceStatus s);
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(115):       PortFilter();
  C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h(116):       PortFilter(ipport_t p, TraceStatus s);
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h(49):    LocalAddress() : bid(NIL_ID), seq(0), pid(NIL_ID), fid(NIL_ID) { }
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h(53):    LocalAddress(const LocalAddress& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h(57):    LocalAddress& operator=(const LocalAddress& that) = default;
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(180):       SignalFilter();
  C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h(181):       SignalFilter(ProtocolId p, SignalId s, TraceStatus ts);
W115 Function should not be tagged noexcept
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(84):    template< typename U > bool operator==
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(90):    template<typename U > bool operator!=
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(127):    template< typename U > bool operator==
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(133):    template<typename U > bool operator!=
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(170):    template< typename U > bool operator==
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(176):    template<typename U > bool operator!=
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(213):    template< typename U > bool operator==
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(219):    template<typename U > bool operator!=
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(256):    template< typename U > bool operator==
  C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h(262):    template<typename U > bool operator!=
W117 Line can merge with the next line and be under the length limit
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(49):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(53):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(55):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(57):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(68):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(76):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(78):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(89):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(99):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(101):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(112):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(122):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(124):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(135):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(137):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(145):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(147):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(158):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(166):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(168):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(179):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(183):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(189):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(191):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(193):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(195):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(199):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(203):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(205):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(218):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(222):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(224):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(226):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(230):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(232):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(255):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(257):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(268):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(272):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(276):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(280):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(282):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(293):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(297):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(301):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(303):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(305):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(309):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(313):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(315):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(328):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(332):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(334):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(336):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(338):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(340):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(354):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(358):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(362):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(364):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(366):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(368):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(383):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(387):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(389):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(391):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(393):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(408):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(414):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(416):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(418):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(420):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(451):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(453):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(457):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp(459):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp(266):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp(197): fixed_string BreakExpl =
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.cpp(273): const SymbolView NotAccessible
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.cpp(277): const SymbolView DeclaredLocally
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(91):       CodeWarning(T, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(94):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(97):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(100):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(103):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(106):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(109):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(112):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(115):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(118):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(121):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(124):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(127):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(130):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(133):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(136):       CodeWarning(T, U, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(139):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(142):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(145):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(148):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(151):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(154):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(157):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(160):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(163):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(166):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(169):       CodeWarning(F, X, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(172):       CodeWarning(F, X, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(175):       CodeWarning(F, X, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(178):       CodeWarning(T, D, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(181):       CodeWarning(T, D, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(184):       CodeWarning(T, D, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(187):       CodeWarning(F, X, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(190):       CodeWarning(T, D, T,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(193):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(196):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(202):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(205):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(208):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(211):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(214):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(217):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(220):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(223):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(226):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(229):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(232):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(235):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(238):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(241):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(244):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(247):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(250):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(253):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(256):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(262):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(265):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(268):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(271):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(274):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(283):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(286):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(289):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(295):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(298):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(301):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(304):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(307):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(310):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(313):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(316):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(319):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(322):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(328):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(331):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(334):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(337):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(340):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(343):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(346):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(349):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(352):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(355):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(358):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(361):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(364):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(367):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(373):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(379):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(385):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(388):       CodeWarning(T, E, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(391):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(394):       CodeWarning(T, D, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(397):       CodeWarning(F, S, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(400):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(403):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(406):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(409):       CodeWarning(T, C, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(421):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(424):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(427):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(430):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(433):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(436):       CodeWarning(T, I, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(439):       CodeWarning(T, R, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp(445):       CodeWarning(F, X, F,
  C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp(960):          (Keywords->lower_bound(name) == Keywords->cend()))
  C:/Users/gregu/Documents/rsc/rsc/ct/SetOperations.h(51):    void SetUnion
  C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp(1855):          (press->message == contents))
  C:/Users/gregu/Documents/rsc/rsc/nb/CliRegistry.cpp(85):    stream << prefix
  C:/Users/gregu/Documents/rsc/rsc/nb/CliStack.h(60):    const CliCommand* FindCommand
  C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp(2487): fixed_string PoolsHeader1 =
  C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h(41):    SoftwareException
  C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.cpp(110):    stream << prefix
  C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp(468): fixed_string SwitchFooter =
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(605):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(621):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(625):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(627):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(629):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(633):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(641):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp(643):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(442):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(483):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(485):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp(499):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(658):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp(674):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(381):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(393):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp(395):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(759):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(763):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(765):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(777):    BindMsgAnalyzer
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(781):    BindEventHandler
  C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp(783):    BindEventHandler
========================================================================================================================
WARNINGS SORTED BY FILE/TYPE/LINE
C:/Users/gregu/Documents/rsc/rsc/an/AnIncrement.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    76:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/an/AnIncrement.h
  W020 Using statement in header
    28: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/an/AnModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/an/AnModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/an/PotsShelf.h
  W005 Functional cast
    50:    virtual ipport_t Port() const override { return ipport_t(port_); }
  W020 Using statement in header
    34: using namespace SessionBase;
    35: using namespace MediaBase;
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
  W032 Unused function
    63:    virtual CliText* CreateText() const override;
  W078 Remove virtual tag: function is an override or final
    49:    virtual const char* Name() const override { return "POTS Shelf"; }
    50:    virtual ipport_t Port() const override { return ipport_t(port_); }
    51:    virtual Faction GetFaction() const override { return PayloadFaction; }
    63:    virtual CliText* CreateText() const override;
    67:    virtual InputHandler* CreateHandler(IpPort* port) const override;
    96:    virtual void ReceiveBuff
    122:    virtual CliText* CreateText() const override;
    126:    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
    130:    virtual void ProcessIcMsg(Message& msg) const override;
    135:    virtual Message* AllocOgMsg(SignalId sid) const override;
    139:    virtual bool InjectMsg(Message& msg) const override;
    143:    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
  W110 Override of Base.Display not found
    43: class PotsShelfIpService : public UdpIpService
C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfFactory.cpp
  W007 Cast down the inheritance hierarchy
    139:    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
    151:    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
    172:    auto& pmsg = static_cast< Pots_NU_Message& >(msg);
    182:    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfHandler.cpp
  W006 reinterpret_cast
    70:    auto pptr = reinterpret_cast< TlvParmPtr >(sbuff->PayloadPtr());
    71:    auto phi = reinterpret_cast< PotsHeaderInfo* >(pptr->bytes);
  W007 Cast down the inheritance hierarchy
    68:    auto sbuff = static_cast< SbIpBuffer* >(buff.get());
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/an/PotsShelfIpService.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.cpp
  W004 C-style cast
    502:    Singleton< TrafficCallPool >::Instance()->Enq((TrafficCall*) addr);
    1076:    timewheel_ = (Q1Way< TrafficCall >*) Memory::Alloc(size, MemDyn);
  W006 reinterpret_cast
    490:    auto fake = reinterpret_cast< const TrafficCall* >(&local);
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W053 Data could be const
    172:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    109:    virtual void Display(ostream& stream,
  W092 Function could be free
    168:    static const char* strState(State state);
  W106 Function does not invoke Debug::ft
    1380: void PotsTrafficThread::RecordHoldingTime(secs_t secs)
  W110 Override of Base.Display not found
    224: class TrafficCallPool : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/an/PotsTrafficThread.h
  W020 Using statement in header
    34: using namespace NodeBase;
    35: using namespace CallBase;
  W078 Remove virtual tag: function is an override or final
    96:    virtual void Display(std::ostream& stream,
    153:    virtual const char* AbbrName() const override;
    157:    virtual void Enter() override;
    161:    virtual msecs_t InitialMsecs() const override;
    165:    virtual bool ExitOnRestart(RestartLevel level) const override;
    169:    virtual void Destroy() override;
  W092 Function could be free
    87:    static void DisplayStateCounts
C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.cpp
  W006 reinterpret_cast
    97:    reinterpret_cast< const DigitString* >(bytes)->Display(stream, prefix);
  W007 Cast down the inheritance hierarchy
    114:    auto& tlvmsg = static_cast< TlvMessage& >(msg);
    165:    auto& tlvmsg = static_cast< const TlvMessage& >(msg);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cb/BcAddress.h
  W020 Using statement in header
    34: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    213:    Digit GetDigit(DigitCount i) const;
  W042 Member could be private
    145:    typedef uint8_t DigitCount;
    175:    static bool IsValidDigit(Digit d)
    182:    Rc AddDigit(Digit d);
    201:    DigitCount Size() const;
    225:    bool operator==(const DigitString& that) const;
  W043 Member could be protected
    124:    static Address::DN IndexToDN(uint32_t i) { return i + FirstDN - 1; }
  W078 Remove virtual tag: function is an override or final
    266:    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
    271:    virtual TestRc InjectMsg
    276:    virtual TestRc VerifyMsg
  W092 Function could be free
    100:    static bool IsValidDN(DN dn) { return ((dn >= FirstDN) && (dn <= LastDN)); }
    116:    static bool IsValidSC(SC sc) { return ((sc >= FirstSC) && (sc <= LastSC)); }
    120:    static uint32_t DNToIndex(Address::DN dn) { return dn - FirstDN + 1; }
    124:    static Address::DN IndexToDN(uint32_t i) { return i + FirstDN - 1; }
    175:    static bool IsValidDigit(Digit d)
C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.cpp
  W006 reinterpret_cast
    134:    reinterpret_cast< const CauseInfo* >(bytes)->Display(stream, prefix);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    123: CliParm* CauseParameter::CreateCliParm(Usage use) const
C:/Users/gregu/Documents/rsc/rsc/cb/BcCause.h
  W020 Using statement in header
    31: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    110:    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
    115:    virtual CliParm* CreateCliParm(Usage use) const override;
C:/Users/gregu/Documents/rsc/rsc/cb/BcEvents.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cb/BcFactory.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cb/BcHandlers.cpp
  W007 Cast down the inheritance hierarchy
    51:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    53:    auto& bcssm = static_cast< BcSsm& >(ssm);
    79:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    80:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    82:    auto&         bcssm = static_cast< BcSsm& >(ssm);
    136:    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    137:    auto       msg = static_cast< CipMessage* >(ame.Msg());
    139:    auto&      bcssm = static_cast< BcSsm& >(ssm);
    181:    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    182:    auto       msg = static_cast< CipMessage* >(ame.Msg());
    184:    auto&      bcssm = static_cast< BcSsm& >(ssm);
    215:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    216:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    218:    auto&         bcssm = static_cast< BcSsm& >(ssm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W099 Line contains adjacent spaces
    79:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    80:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    81:    auto          sid = msg->GetSignal();
    82:    auto&         bcssm = static_cast< BcSsm& >(ssm);
    84:    CauseInfo*    cci;
    136:    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    137:    auto       msg = static_cast< CipMessage* >(ame.Msg());
    138:    auto       sid = msg->GetSignal();
    139:    auto&      bcssm = static_cast< BcSsm& >(ssm);
    181:    auto&      ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    182:    auto       msg = static_cast< CipMessage* >(ame.Msg());
    183:    auto       sid = msg->GetSignal();
    184:    auto&      bcssm = static_cast< BcSsm& >(ssm);
    215:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    216:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    217:    auto          sid = msg->GetSignal();
    218:    auto&         bcssm = static_cast< BcSsm& >(ssm);
    220:    CauseInfo*    cci;
C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.cpp
  W006 reinterpret_cast
    120:    reinterpret_cast< const ProgressInfo* >(bytes)->Display(stream, prefix);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    109: CliParm* ProgressParameter::CreateCliParm(Usage use) const
C:/Users/gregu/Documents/rsc/rsc/cb/BcProgress.h
  W020 Using statement in header
    31: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    95:    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
    100:    virtual CliParm* CreateCliParm(Usage use) const override;
C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.cpp
  W006 reinterpret_cast
    471:    reinterpret_cast< const RouteResult* >(bytes)->Display(stream, prefix);
  W007 Cast down the inheritance hierarchy
    486:    auto&       tlvmsg = static_cast< TlvMessage& >(msg);
    516:    auto&        tlvmsg = static_cast< const TlvMessage& >(msg);
    828:       if(m->GetSignal() == sid) return static_cast< CipMessage* >(m);
    862:    auto&         tmsg = static_cast< TlvMessage& >(msg);
    992:    auto&         tmsg = static_cast< TlvMessage& >(msg);
    1390:    auto& tmsg = static_cast< const CipMessage& >(msg);
    1395:    auto fac = static_cast< SsmFactory* >(reg->GetFactory(rte->selector));
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    65:    virtual CliText* CreateText() const override;
    78:    virtual CliText* CreateText() const override;
    91:    virtual CliText* CreateText() const override;
    104:    virtual CliText* CreateText() const override;
    117:    virtual void DisplayMsg(ostream& stream, const string& prefix,
    119:    virtual CliParm* CreateCliParm(Usage use) const override;
    120:    virtual TestRc InjectMsg
    122:    virtual TestRc VerifyMsg
    153:    virtual CliParm* CreateCliParm(Usage use) const override;
    161:    virtual CliParm* CreateCliParm(Usage use) const override;
    169:    virtual CliParm* CreateCliParm(Usage use) const override;
    177:    virtual CliParm* CreateCliParm(Usage use) const override;
  W099 Line contains adjacent spaces
    483:    id_t        idx;
    484:    word        fid, rid;
    486:    auto&       tlvmsg = static_cast< TlvMessage& >(msg);
    515:    TestRc       rc;
    516:    auto&        tlvmsg = static_cast< const TlvMessage& >(msg);
    518:    id_t         idx;
    519:    word         fid, rid;
    861:    auto          state = GetState();
    862:    auto&         tmsg = static_cast< TlvMessage& >(msg);
    863:    auto          sig = tmsg.GetSignal();
    864:    TimeoutInfo*  toi = nullptr;
    866:    auto          err = true;
    867:    debug64_t     error;
    991:    auto          state = GetState();
    992:    auto&         tmsg = static_cast< TlvMessage& >(msg);
    993:    auto          sig = msg.GetSignal();
    995:    auto          err = true;
    996:    debug64_t     error;
  W106 Function does not invoke Debug::ft
    379: CliText* CipIamSignal::CreateText() const
    393: CliText* CipCpgSignal::CreateText() const
    407: CliText* CipAnmSignal::CreateText() const
    421: CliText* CipRelSignal::CreateText() const
    461: CliParm* CipRouteParameter::CreateCliParm(Usage use) const
    565: CliParm* CipCallingParameter::CreateCliParm(Usage use) const
    589: CliParm* CipCalledParameter::CreateCliParm(Usage use) const
    615: CliParm* CipOriginalCallingParameter::CreateCliParm(Usage use) const
    641: CliParm* CipOriginalCalledParameter::CreateCliParm(Usage use) const
C:/Users/gregu/Documents/rsc/rsc/cb/BcProtocol.h
  W005 Functional cast
    305:    virtual ipport_t Port() const override { return ipport_t(port_); }
    344:    virtual ipport_t Port() const override { return ipport_t(port_); }
  W020 Using statement in header
    50: using namespace NodeBase;
    51: using namespace NetworkBase;
    52: using namespace SessionBase;
    53: using namespace MediaBase;
  W027 Unused class
    298: class CipUdpService : public UdpIpService
  W032 Unused function
    182:    MediaInfo* AddMedia(const MediaInfo& media);
    249:    virtual void InjectFinalMsg() override;
    318:    virtual CliText* CreateText() const override;
    364:    virtual CliText* CreateText() const override;
  W042 Member could be private
    236:    virtual void EnsureMediaMsg() override;
    240:    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
    412:    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
  W078 Remove virtual tag: function is an override or final
    216:    virtual void Display(std::ostream& stream,
    236:    virtual void EnsureMediaMsg() override;
    240:    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
    244:    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
    249:    virtual void InjectFinalMsg() override;
    258:    virtual void SendFinalMsg() override;
    287:    virtual SysTcpSocket* CreateAppSocket() override;
    291:    virtual Message::Route Route() const override;
    304:    virtual const char* Name() const override { return "Call Interworking"; }
    305:    virtual ipport_t Port() const override { return ipport_t(port_); }
    306:    virtual Faction GetFaction() const override { return PayloadFaction; }
    318:    virtual CliText* CreateText() const override;
    322:    virtual InputHandler* CreateHandler(IpPort* port) const override;
    343:    virtual const char* Name() const override { return "Call Interworking"; }
    344:    virtual ipport_t Port() const override { return ipport_t(port_); }
    345:    virtual Faction GetFaction() const override { return PayloadFaction; }
    346:    virtual size_t MaxConns() const override { return TcpIoThread::MaxConns; }
    347:    virtual size_t MaxBacklog() const override { return 200; }
    359:    virtual void GetAppSocketSizes
    364:    virtual CliText* CreateText() const override;
    368:    virtual InputHandler* CreateHandler(IpPort* port) const override;
    412:    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
    416:    virtual Message* AllocOgMsg(SignalId sid) const override;
    420:    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
    441:    virtual ProtocolSM* AllocOgPsm(const Message& msg) const override;
    445:    virtual CliText* CreateText() const override;
    466:    virtual CliText* CreateText() const override;
    470:    virtual ProtocolSM* AllocIcPsm
    476:    virtual RootServiceSM* AllocRoot
  W110 Override of Base.Display not found
    298: class CipUdpService : public UdpIpService
    337: class CipTcpService : public TcpIpService
C:/Users/gregu/Documents/rsc/rsc/cb/BcRouting.cpp
  W022 Add using statement
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cb/BcRouting.h
  W020 Using statement in header
    31: using namespace SessionBase;
C:/Users/gregu/Documents/rsc/rsc/cb/BcService.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/cb/BcSessions.h
  W020 Using statement in header
    53: using namespace MediaBase;
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W037 Member hides inherited name
    314:    static const Id NextId = FirstId + 50;
    881:    static const Id NextId                 = FirstUn + 7;
  W042 Member could be private
    1013:    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
    1014:    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
    1015:    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
    1061:    virtual EventHandler::Rc RequestService(Event*& nextEvent);
    1150:    CipPsm* AllocNPsm();
  W043 Member could be protected
    1027:    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
    1032:    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
    1097:    virtual EventHandler::Rc ClearCall(Cause::Ind cause);
  W053 Data could be const
    338:    Progress::Ind progress_;
    354:    Cause::Ind cause_;
  W075 Virtual function is public
    1008:    virtual EventHandler::Rc RaiseAuthorizeOrigination(Event*& nextEvent);
    1009:    virtual EventHandler::Rc RaiseCollectInformation(Event*& nextEvent);
    1010:    virtual EventHandler::Rc RaiseLocalInformation(Event*& nextEvent);
    1011:    virtual EventHandler::Rc RaiseCollectionTimeout(Event*& nextEvent);
    1012:    virtual EventHandler::Rc RaiseAnalyzeInformation(Event*& nextEvent);
    1013:    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
    1014:    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
    1015:    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
    1016:    virtual EventHandler::Rc RaiseSendCall(Event*& nextEvent);
    1017:    virtual EventHandler::Rc RaiseRemoteBusy(Event*& nextEvent);
    1018:    virtual EventHandler::Rc RaiseRemoteProgress
    1020:    virtual EventHandler::Rc RaiseRemoteAlerting(Event*& nextEvent);
    1021:    virtual EventHandler::Rc RaiseRemoteNoAnswer(Event*& nextEvent);
    1022:    virtual EventHandler::Rc RaiseRemoteAnswer(Event*& nextEvent);
    1023:    virtual EventHandler::Rc RaiseAuthorizeTermination(Event*& nextEvent);
    1024:    virtual EventHandler::Rc RaiseSelectFacility(Event*& nextEvent);
    1025:    virtual EventHandler::Rc RaisePresentCall(Event*& nextEvent);
    1026:    virtual EventHandler::Rc RaiseLocalBusy(Event*& nextEvent);
    1027:    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
    1028:    virtual EventHandler::Rc RaiseLocalProgress
    1030:    virtual EventHandler::Rc RaiseLocalAlerting(Event*& nextEvent);
    1031:    virtual EventHandler::Rc RaiseLocalAnswer(Event*& nextEvent);
    1032:    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
    1033:    virtual EventHandler::Rc RaiseLocalSuspend(Event*& nextEvent);
    1034:    virtual EventHandler::Rc RaiseLocalResume(Event*& nextEvent);
    1035:    virtual EventHandler::Rc RaiseRemoteSuspend(Event*& nextEvent);
    1036:    virtual EventHandler::Rc RaiseRemoteResume(Event*& nextEvent);
    1043:    virtual EventHandler::Rc RaiseLocalRelease
    1045:    virtual EventHandler::Rc RaiseRemoteRelease
    1047:    virtual EventHandler::Rc RaiseReleaseCall
    1049:    virtual EventHandler::Rc RaiseApplyTreatment
    1056:    virtual EventHandler::Rc AnalyzeInformation(Event*& nextEvent);
    1061:    virtual EventHandler::Rc RequestService(Event*& nextEvent);
    1068:    virtual EventHandler::Rc SelectRoute(Event*& nextEvent);
    1074:    virtual EventHandler::Rc AnalyzeNPsmTimeout
    1081:    virtual EventHandler::Rc HandleLocalAlerting();
    1086:    virtual EventHandler::Rc HandleLocalAnswer();
    1090:    virtual EventHandler::Rc HandleRemoteRelease(Event& currEvent);
    1097:    virtual EventHandler::Rc ClearCall(Cause::Ind cause);
    1103:    virtual CipMessage* BuildCipIam();
    1109:    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
    1211:    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const;
  W077 Virtual function has no overrides
    1008:    virtual EventHandler::Rc RaiseAuthorizeOrigination(Event*& nextEvent);
    1009:    virtual EventHandler::Rc RaiseCollectInformation(Event*& nextEvent);
    1010:    virtual EventHandler::Rc RaiseLocalInformation(Event*& nextEvent);
    1011:    virtual EventHandler::Rc RaiseCollectionTimeout(Event*& nextEvent);
    1012:    virtual EventHandler::Rc RaiseAnalyzeInformation(Event*& nextEvent);
    1013:    virtual EventHandler::Rc RaiseInvalidInformation(Event*& nextEvent);
    1014:    virtual EventHandler::Rc RaiseSelectRoute(Event*& nextEvent);
    1015:    virtual EventHandler::Rc RaiseAuthorizeCallSetup(Event*& nextEvent);
    1016:    virtual EventHandler::Rc RaiseSendCall(Event*& nextEvent);
    1017:    virtual EventHandler::Rc RaiseRemoteBusy(Event*& nextEvent);
    1018:    virtual EventHandler::Rc RaiseRemoteProgress
    1020:    virtual EventHandler::Rc RaiseRemoteAlerting(Event*& nextEvent);
    1021:    virtual EventHandler::Rc RaiseRemoteNoAnswer(Event*& nextEvent);
    1022:    virtual EventHandler::Rc RaiseRemoteAnswer(Event*& nextEvent);
    1023:    virtual EventHandler::Rc RaiseAuthorizeTermination(Event*& nextEvent);
    1024:    virtual EventHandler::Rc RaiseSelectFacility(Event*& nextEvent);
    1025:    virtual EventHandler::Rc RaisePresentCall(Event*& nextEvent);
    1026:    virtual EventHandler::Rc RaiseLocalBusy(Event*& nextEvent);
    1027:    virtual EventHandler::Rc RaiseFacilityFailure(Event*& nextEvent);
    1028:    virtual EventHandler::Rc RaiseLocalProgress
    1030:    virtual EventHandler::Rc RaiseLocalAlerting(Event*& nextEvent);
    1031:    virtual EventHandler::Rc RaiseLocalAnswer(Event*& nextEvent);
    1032:    virtual EventHandler::Rc RaiseLocalNoAnswer(Event*& nextEvent);
    1033:    virtual EventHandler::Rc RaiseLocalSuspend(Event*& nextEvent);
    1034:    virtual EventHandler::Rc RaiseLocalResume(Event*& nextEvent);
    1035:    virtual EventHandler::Rc RaiseRemoteSuspend(Event*& nextEvent);
    1036:    virtual EventHandler::Rc RaiseRemoteResume(Event*& nextEvent);
    1043:    virtual EventHandler::Rc RaiseLocalRelease
    1045:    virtual EventHandler::Rc RaiseRemoteRelease
    1047:    virtual EventHandler::Rc RaiseReleaseCall
    1049:    virtual EventHandler::Rc RaiseApplyTreatment
    1056:    virtual EventHandler::Rc AnalyzeInformation(Event*& nextEvent);
    1061:    virtual EventHandler::Rc RequestService(Event*& nextEvent);
    1068:    virtual EventHandler::Rc SelectRoute(Event*& nextEvent);
    1081:    virtual EventHandler::Rc HandleLocalAlerting();
    1086:    virtual EventHandler::Rc HandleLocalAnswer();
    1090:    virtual EventHandler::Rc HandleRemoteRelease(Event& currEvent);
    1103:    virtual CipMessage* BuildCipIam();
    1109:    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
  W078 Remove virtual tag: function is an override or final
    333:    virtual void Display(std::ostream& stream,
    349:    virtual void Display(std::ostream& stream,
    1122:    virtual void SetNextState(StateId stid) override;
    1126:    virtual Event* RaiseProtocolError
    1131:    virtual void Display(std::ostream& stream,
    1146:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    1162:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
    1235:    virtual Rc ProcessEvent
    1245:    virtual Rc ProcessEvent
    1255:    virtual Rc ProcessEvent
    1265:    virtual Rc ProcessEvent
    1275:    virtual Rc ProcessEvent
    1301:    virtual RootServiceSM* AllocRoot
    1306:    virtual ProtocolSM* AllocIcPsm
    1311:    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const override;
  W082 Adjacent arguments have the same type
    1215:    BcFactory(Id fid, ProtocolId prid, const char* name);
  W090 Function could be const
    1109:    virtual CipMessage* BuildCipCpg(Progress::Ind progress);
    1166:    CipMessage* BuildCipRel(Cause::Ind cause);
  W112 Function could be defaulted
    133:    virtual ~BcNull();
    140:    virtual ~BcAuthorizingOrigination();
    147:    virtual ~BcCollectingInformation();
    154:    virtual ~BcAnalyzingInformation();
    161:    virtual ~BcSelectingRoute();
    168:    virtual ~BcAuthorizingCallSetup();
    175:    virtual ~BcSendingCall();
    182:    virtual ~BcOrigAlerting();
    189:    virtual ~BcAuthorizingTermination();
    196:    virtual ~BcSelectingFacility();
    203:    virtual ~BcPresentingCall();
    210:    virtual ~BcTermAlerting();
    217:    virtual ~BcActive();
    224:    virtual ~BcLocalSuspending();
    231:    virtual ~BcRemoteSuspending();
    238:    virtual ~BcDisconnecting();
    245:    virtual ~BcException();
    883:    BcEventHandler();
    884:    virtual ~BcEventHandler();
    1233:    BcNuAnalyzeRemoteMessage();
    1234:    ~BcNuAnalyzeRemoteMessage();
    1243:    BcScAnalyzeRemoteMessage();
    1244:    ~BcScAnalyzeRemoteMessage();
    1253:    BcOaAnalyzeRemoteMessage();
    1254:    ~BcOaAnalyzeRemoteMessage();
    1263:    BcPcAnalyzeRemoteMessage();
    1264:    ~BcPcAnalyzeRemoteMessage();
    1273:    BcAcAnalyzeRemoteMessage();
    1274:    ~BcAcAnalyzeRemoteMessage();
C:/Users/gregu/Documents/rsc/rsc/cb/BcSsm.cpp
  W007 Cast down the inheritance hierarchy
    405:    auto& rre = static_cast< BcRemoteReleaseEvent& >(currEvent);
    920:       auto fac = static_cast< BcFactory* >(reg->GetFactory(route_.selector));
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W102 Line length exceeds the standard maximum
    300:    for(auto s = BcState::AuthorizingOrigination; s <= BcState::OrigAlerting; ++s)
C:/Users/gregu/Documents/rsc/rsc/cb/BcStates.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W117 Line can merge with the next line and be under the length limit
    49:    BindMsgAnalyzer
    53:    BindEventHandler
    55:    BindEventHandler
    57:    BindEventHandler
    68:    BindMsgAnalyzer
    76:    BindEventHandler
    78:    BindEventHandler
    89:    BindMsgAnalyzer
    99:    BindEventHandler
    101:    BindEventHandler
    112:    BindMsgAnalyzer
    122:    BindEventHandler
    124:    BindEventHandler
    135:    BindMsgAnalyzer
    137:    BindEventHandler
    145:    BindEventHandler
    147:    BindEventHandler
    158:    BindMsgAnalyzer
    166:    BindEventHandler
    168:    BindEventHandler
    179:    BindMsgAnalyzer
    183:    BindEventHandler
    189:    BindEventHandler
    191:    BindEventHandler
    193:    BindEventHandler
    195:    BindEventHandler
    199:    BindEventHandler
    203:    BindEventHandler
    205:    BindEventHandler
    218:    BindMsgAnalyzer
    222:    BindEventHandler
    224:    BindEventHandler
    226:    BindEventHandler
    230:    BindEventHandler
    232:    BindEventHandler
    255:    BindEventHandler
    257:    BindEventHandler
    268:    BindMsgAnalyzer
    272:    BindEventHandler
    276:    BindEventHandler
    280:    BindEventHandler
    282:    BindEventHandler
    293:    BindMsgAnalyzer
    297:    BindEventHandler
    301:    BindEventHandler
    303:    BindEventHandler
    305:    BindEventHandler
    309:    BindEventHandler
    313:    BindEventHandler
    315:    BindEventHandler
    328:    BindMsgAnalyzer
    332:    BindEventHandler
    334:    BindEventHandler
    336:    BindEventHandler
    338:    BindEventHandler
    340:    BindEventHandler
    354:    BindMsgAnalyzer
    358:    BindEventHandler
    362:    BindEventHandler
    364:    BindEventHandler
    366:    BindEventHandler
    368:    BindEventHandler
    383:    BindMsgAnalyzer
    387:    BindEventHandler
    389:    BindEventHandler
    391:    BindEventHandler
    393:    BindEventHandler
    408:    BindMsgAnalyzer
    414:    BindEventHandler
    416:    BindEventHandler
    418:    BindEventHandler
    420:    BindEventHandler
    451:    BindMsgAnalyzer
    453:    BindEventHandler
    457:    BindEventHandler
    459:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/cb/BcTriggers.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/cb/CbModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/cb/DigitString.cpp
  W005 Functional cast
    139:       auto rc = AddDigit(Digit(ds.digits_[i]));
    171:    if(i < Size()) return Digit(digits_[i]);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    169: Digit DigitString::GetDigit(DigitCount i) const
C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.cpp
  W007 Cast down the inheritance hierarchy
    423:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    424:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    426:    auto&         pssm = static_cast< ProxyBcSsm& >(ssm);
    463:    auto& ppe = static_cast< ProxyBcProgressEvent& >(currEvent);
    472:       auto& pssm = static_cast< ProxyBcSsm& >(ssm);
    504:    auto& pssm = static_cast< ProxyBcSsm& >(ssm);
    505:    auto ppsm = static_cast< ProxyBcPsm* >(Context::ContextPsm());
    624:    auto pssm = static_cast< ProxyBcSsm* >(RootSsm());
    782:          return static_cast< ProxyBcPsm* >(p);
    818:          ppsm = static_cast< ProxyBcPsm* >(psm);
    1044:    auto& tmsg = static_cast< const CipMessage& >(msg);
    1049:    auto fac = static_cast< SsmFactory* >(reg->GetFactory(rte->selector));
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
  W099 Line contains adjacent spaces
    423:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    424:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    425:    auto          sid = msg->GetSignal();
    426:    auto&         pssm = static_cast< ProxyBcSsm& >(ssm);
    428:    CauseInfo*    cci;
  W117 Line can merge with the next line and be under the length limit
    266:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/cb/ProxyBcSessions.h
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W027 Unused class
    189: class ProxyBcDisconnecting : public BcDisconnecting
  W028 Unused data
    60:    static const ServicePortId NextPortId = FirstPortId + 1;
    216:    static const Id NextId        = FirstId + 4;
    300:    static const Id NextId              = FirstId + 7;
    385:    static const Id NextId          = FirstId + 3;
  W032 Unused function
    192:    explicit ProxyBcDisconnecting(ServiceId sid);
  W037 Member hides inherited name
    60:    static const ServicePortId NextPortId = FirstPortId + 1;
    210:    static const Id FirstId = BcEvent::NextId;
    216:    static const Id NextId        = FirstId + 4;
    300:    static const Id NextId              = FirstId + 7;
  W042 Member could be private
    492:    ProxyBcPsm* FirstBroadcast() const;
  W075 Virtual function is public
    469:    virtual EventHandler::Rc RaiseReleaseUser
    471:    virtual EventHandler::Rc RaiseProxyProgress
    473:    virtual EventHandler::Rc RaiseProxyAnswer(Event*& nextEvent);
    474:    virtual EventHandler::Rc RaiseProxyRelease
    509:    virtual void SetUPsm(MediaPsm& psm) override;
  W077 Virtual function has no overrides
    469:    virtual EventHandler::Rc RaiseReleaseUser
    471:    virtual EventHandler::Rc RaiseProxyProgress
    473:    virtual EventHandler::Rc RaiseProxyAnswer(Event*& nextEvent);
    474:    virtual EventHandler::Rc RaiseProxyRelease
  W078 Remove virtual tag: function is an override or final
    64:    virtual const char* PortName(PortId pid) const override;
    323:    virtual Rc ProcessEvent
    333:    virtual Rc ProcessEvent
    343:    virtual Rc ProcessEvent
    353:    virtual Rc ProcessEvent
    433:    virtual void Display(std::ostream& stream,
    438:    virtual bool UsesIamTimer() const override { return false; }
    442:    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
    446:    virtual Message::Route Route() const override;
    509:    virtual void SetUPsm(MediaPsm& psm) override;
    513:    virtual void Display(std::ostream& stream,
    527:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    532:    virtual void EndOfTransaction() override;
    536:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
    561:    virtual CliText* CreateText() const override;
    566:    virtual RootServiceSM* AllocRoot
    572:    virtual ProtocolSM* AllocIcPsm
  W112 Function could be defaulted
    88:    virtual ~ProxyBcNull();
    95:    virtual ~ProxyBcAuthorizingOrigination();
    102:    virtual ~ProxyBcCollectingInformation();
    109:    virtual ~ProxyBcAnalyzingInformation();
    116:    virtual ~ProxyBcSelectingRoute();
    123:    virtual ~ProxyBcAuthorizingCallSetup();
    130:    virtual ~ProxyBcSendingCall();
    137:    virtual ~ProxyBcOrigAlerting();
    144:    virtual ~ProxyBcAuthorizingTermination();
    151:    virtual ~ProxyBcSelectingFacility();
    158:    virtual ~ProxyBcPresentingCall();
    165:    virtual ~ProxyBcTermAlerting();
    172:    virtual ~ProxyBcActive();
    179:    virtual ~ProxyBcLocalSuspending();
    186:    virtual ~ProxyBcRemoteSuspending();
    193:    virtual ~ProxyBcDisconnecting();
    200:    virtual ~ProxyBcException();
    302:    ProxyBcEventHandler();
    303:    virtual ~ProxyBcEventHandler();
    321:    ProxyBcAnalyzeProxyMessage();
    322:    ~ProxyBcAnalyzeProxyMessage();
    331:    ProxyBcProgressHandler();
    332:    ~ProxyBcProgressHandler();
    341:    ProxyBcAnswerHandler();
    342:    ~ProxyBcAnswerHandler();
    351:    ProxyBcReleaseHandler();
    352:    ~ProxyBcReleaseHandler();
C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cb/ServiceCodeRegistry.h
  W020 Using statement in header
    30: using namespace NodeBase;
    31: using namespace SessionBase;
  W042 Member could be private
    46:    void SetService(Address::SC sc, ServiceId sid);
  W078 Remove virtual tag: function is an override or final
    54:    virtual void Startup(RestartLevel level) override;
    58:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/cb/TestCallFactory.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/cn/CnModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.cpp
  W047 Data is init-only
    80:    FunctionGuard guard(FunctionGuard::MakePreemptable);
    171:    FunctionGuard guard(FunctionGuard::MakePreemptable);
    381:    FunctionGuard guard(FunctionGuard::MakePreemptable);
C:/Users/gregu/Documents/rsc/rsc/ct/CodeCoverage.h
  W032 Unused function
    163:    static std::string Demangle(const std::string& s);
  W078 Remove virtual tag: function is an override or final
    79:    virtual void Shutdown(NodeBase::RestartLevel level) override;
  W092 Function could be free
    112:    static NodeBase::word Report
  W110 Override of Base.Display not found
    43: class CodeCoverage : public NodeBase::Temporary
  W114 Function could be tagged noexcept
    173:       FuncInfo(const std::string& file, uint32_t hash) :
    175:       explicit FuncInfo(uint32_t hash) : hash(hash) { }
C:/Users/gregu/Documents/rsc/rsc/ct/CodeDir.cpp
  W006 reinterpret_cast
    65:    auto fake = reinterpret_cast< const CodeDir* >(&local);
C:/Users/gregu/Documents/rsc/rsc/ct/CodeDir.h
  W078 Remove virtual tag: function is an override or final
    81:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/ct/CodeDirSet.h
  W078 Remove virtual tag: function is an override or final
    44:    virtual LibrarySet* Create
    46:    virtual LibrarySet* Files() const override;
    50:    virtual LibSetType GetType() const override { return DIR_SET; }
    54:    virtual NodeBase::word List
    59:    virtual NodeBase::word Show(std::string& result) const override;
C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.cpp
  W006 reinterpret_cast
    597:    auto fake = reinterpret_cast< const CodeFile* >(&local);
  W007 Cast down the inheritance hierarchy
    84:          auto base = static_cast< const Class* >(*b);
    217:       auto base = static_cast< const Class* >(*b);
    249:                auto type = static_cast< const Typedef* >(*item2);
    272:          auto type = static_cast< const Typedef* >(*item1);
    520:    affecterIds_ = static_cast< CodeFileSet* >(asSet)->Set();
    2423:    auto& affecterIds = static_cast< CodeFileSet* >(affecterSet)->Set();
    2561:       auto base = static_cast< const Class* >(*b);
  W102 Line length exceeds the standard maximum
    1180:       if((s.front() != '/') && (s.front() != QUOTE)) warnings.insert(Indentation);
  W106 Function does not invoke Debug::ft
    1763: int8_t CodeFile::GetDepth(size_t line) const
    1808: void CodeFile::GetLineCounts() const
    1824: LineType CodeFile::GetLineType(size_t n) const
    1979: void CodeFile::InsertClass(Class* cls)
    1987: void CodeFile::InsertData(Data* data)
    1995: bool CodeFile::InsertDirective(DirectivePtr& dir)
    2004: void CodeFile::InsertEnum(Enum* item)
    2012: void CodeFile::InsertForw(Forward* forw)
    2020: void CodeFile::InsertFunc(Function* func)
    2028: void CodeFile::InsertInclude(IncludePtr& incl)
    2057: void CodeFile::InsertMacro(Macro* macro)
    2065: void CodeFile::InsertType(Typedef* type)
    2073: void CodeFile::InsertUsing(Using* use)
C:/Users/gregu/Documents/rsc/rsc/ct/CodeFile.h
  W026 Unused argument
    347/3:       const CxxNamed* item, const CxxScope* scope) const;
  W042 Member could be private
    108:    bool IsTemplateHeader() const;
    211:    int CalcGroup(const Include& incl) const;
  W078 Remove virtual tag: function is an override or final
    291:    virtual void Display(std::ostream& stream,
  W082 Adjacent arguments have the same type
    363:    void LogCode(Warning warning, size_t line, size_t pos,
  W092 Function could be free
    270:    static void GenerateReport(std::ostream* stream, const SetOfIds& set);
C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.cpp
  W004 C-style cast
    579:    LibrarySet* nbSet = (LibrarySet*) this;
    611:    LibrarySet* nsSet = (LibrarySet*) this;
  W007 Cast down the inheritance hierarchy
    81:    auto curr = static_cast< CodeFileSet* >(Users(true));
    93:       curr = static_cast< CodeFileSet* >(prev->Users(true));
    113:    auto curr = static_cast< CodeFileSet* >(UsedBy(true));
    125:       curr = static_cast< CodeFileSet* >(prev->UsedBy(true));
    446:    auto& dirSet = static_cast< const CodeDirSet* >(that)->Set();
    478:    auto abSet = static_cast< CodeFileSet* >(this->AffectedBy());
    479:    auto asSet = static_cast< CodeFileSet* >(this->Affecters());
    590:       currCount = static_cast< CodeFileSet* >(nbSet)->Set().size();
    622:       currCount = static_cast< CodeFileSet* >(nsSet)->Set().size();
    657:    auto order = static_cast< CodeFileSet* >(affects)->SortInBuildOrder();
  W008 Cast removes const qualification
    579:    LibrarySet* nbSet = (LibrarySet*) this;
    611:    LibrarySet* nsSet = (LibrarySet*) this;
C:/Users/gregu/Documents/rsc/rsc/ct/CodeFileSet.h
  W078 Remove virtual tag: function is an override or final
    44:    virtual LibrarySet* AffectedBy() const override;
    45:    virtual LibrarySet* Affecters() const override;
    46:    virtual LibrarySet* CommonAffecters() const override;
    47:    virtual LibrarySet* Create
    49:    virtual LibrarySet* Directories() const override;
    50:    virtual LibrarySet* FileName(const LibrarySet* that) const override;
    51:    virtual LibrarySet* FileType(const LibrarySet* that) const override;
    52:    virtual LibrarySet* FoundIn(const LibrarySet* that) const override;
    53:    virtual LibrarySet* Implements() const override;
    54:    virtual LibrarySet* MatchString(const LibrarySet* that) const override;
    55:    virtual LibrarySet* NeededBy() const override;
    56:    virtual LibrarySet* Needers() const override;
    57:    virtual LibrarySet* UsedBy(bool self) const override;
    58:    virtual LibrarySet* Users(bool self) const override;
    62:    virtual NodeBase::word Check
    67:    virtual NodeBase::word Countlines(std::string& result) const override;
    71:    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
    76:    virtual NodeBase::word Format(std::string& expl) const override;
    80:    virtual LibSetType GetType() const override { return FILE_SET; }
    84:    virtual NodeBase::word List
    89:    virtual NodeBase::word Parse
    94:    virtual NodeBase::word Scan(std::ostream& stream,
    99:    virtual NodeBase::word Sort
    104:    virtual NodeBase::word Show(std::string& result) const override;
    108:    virtual NodeBase::word Trim
C:/Users/gregu/Documents/rsc/rsc/ct/CodeIncrement.cpp
  W043 Member could be protected
    117:    static LibrarySet* Evaluate(const CliThread& cli);
  W056 Default constructor invoked: POD members not initialized
    849:    FixOptions options;
  W078 Remove virtual tag: function is an override or final
    153:    virtual word ProcessCommand(CliThread& cli) const override;
    193:    virtual word ProcessCommand(CliThread& cli) const override;
    361:    virtual word ProcessCommand(CliThread& cli) const override;
    517:    virtual word ProcessCommand(CliThread& cli) const override;
    586:    virtual word ProcessCommand(CliThread& cli) const override;
    622:    virtual word ProcessCommand(CliThread& cli) const override;
    668:    virtual word ProcessCommand(CliThread& cli) const override;
    723:    virtual word ProcessCommand(CliThread& cli) const override;
    770:    virtual word ProcessCommand(CliThread& cli) const override;
    829:    virtual word ProcessCommand(CliThread& cli) const override;
    874:    virtual word ProcessCommand(CliThread& cli) const override;
    920:    virtual word ProcessCommand(CliThread& cli) const override;
    968:    virtual word ProcessCommand(CliThread& cli) const override;
    1023:    virtual word ProcessCommand(CliThread& cli) const override;
    1071:    virtual word ProcessCommand(CliThread& cli) const override;
    1112:       virtual word ProcessCommand(CliThread& cli) const override;
    1198:    virtual word ProcessCommand(CliThread& cli) const override;
    1322:    virtual word ProcessCommand(CliThread& cli) const override;
    1353:    virtual word ProcessCommand(CliThread& cli) const override;
    1390:    virtual word ProcessCommand(CliThread& cli) const override;
    1440:    virtual word ProcessCommand(CliThread& cli) const override;
    1476:    virtual word ProcessCommand(CliThread& cli) const override;
  W092 Function could be free
    117:    static LibrarySet* Evaluate(const CliThread& cli);
  W117 Line can merge with the next line and be under the length limit
    197: fixed_string BreakExpl =
C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.cpp
  W007 Cast down the inheritance hierarchy
    64:    auto that = static_cast< CodeSet* >(rhs);
    100:    auto that = static_cast< const CodeSet* >(rhs);
    137:    auto that = static_cast< const CodeSet* >(rhs);
    151:    auto that = static_cast< const CodeSet* >(rhs);
C:/Users/gregu/Documents/rsc/rsc/ct/CodeSet.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Display(std::ostream& stream,
    52:    virtual LibrarySet* Assign(LibrarySet* rhs) override;
    53:    virtual LibrarySet* Difference(const LibrarySet* rhs) const override;
    54:    virtual LibrarySet* Intersection(const LibrarySet* rhs) const override;
    55:    virtual LibrarySet* Union(const LibrarySet* rhs) const override;
    59:    virtual NodeBase::word Count(std::string& result) const override;
    72:    virtual NodeBase::word PreAssign(std::string& expl) const override
C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.cpp
  W097 Line indentation is not a multiple of the standard value
    225:     const string& line2, size_t begin2, size_t end2)
  W106 Function does not invoke Debug::ft
    223: bool LinesCanBeMerged
  W117 Line can merge with the next line and be under the length limit
    273: const SymbolView NotAccessible
    277: const SymbolView DeclaredLocally
C:/Users/gregu/Documents/rsc/rsc/ct/CodeTypes.h
  W018 Remove #include directive
    29: #include <vector>
  W020 Using statement in header
    32: using NodeBase::fixed_string;
    33: using NodeBase::Flags;
  W028 Unused data
    169: extern const std::string SingleRule;
    579: extern const Flags NoLF_Mask;
    580: extern const Flags Last_Mask;
    584: extern const Flags Stats_Mask;
  W056 Default constructor invoked: POD members not initialized
    486: struct FixOptions
  W082 Adjacent arguments have the same type
    296:    SymbolView(Accessibility a, TypeMatch m, bool u, bool f, bool r, Distance d);
    555: bool LinesCanBeMerged
  W097 Line indentation is not a multiple of the standard value
    557:     const std::string& line2, size_t begin2, size_t end2);
  W114 Function could be tagged noexcept
    292:    SymbolView();
    296:    SymbolView(Accessibility a, TypeMatch m, bool u, bool f, bool r, Distance d);
    549:    LineTypeAttr(bool code, bool exe, bool merge, bool blank);
C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.cpp
  W005 Functional cast
    723:       *stream << setw(12) << LineType(t)
    735:          *stream << setw(6) << WarningCode(Warning(w)) << setw(6)
    736:             << WarningCounts_[w] << spaces(2) << Warning(w) << CRLF;
  W007 Cast down the inheritance hierarchy
    581:       if(static_cast< const Function* >(item)->IsVirtual())
  W106 Function does not invoke Debug::ft
    639: word CodeInfo::FindWarning(const WarningLog& log)
    833: bool CodeInfo::IsSortedByFile(const WarningLog& log1, const WarningLog& log2)
    851: bool CodeInfo::IsSortedByWarning(const WarningLog& log1, const WarningLog& log2)
    869: bool CodeInfo::IsSortedForFixing(const WarningLog& log1, const WarningLog& log2)
  W117 Line can merge with the next line and be under the length limit
    91:       CodeWarning(T, X, F,
    94:       CodeWarning(T, R, F,
    97:       CodeWarning(T, R, F,
    100:       CodeWarning(T, R, F,
    103:       CodeWarning(F, X, F,
    106:       CodeWarning(F, X, F,
    109:       CodeWarning(F, X, F,
    112:       CodeWarning(F, X, F,
    115:       CodeWarning(F, X, F,
    118:       CodeWarning(F, X, F,
    121:       CodeWarning(T, E, F,
    124:       CodeWarning(T, E, F,
    127:       CodeWarning(F, X, F,
    130:       CodeWarning(F, X, F,
    133:       CodeWarning(T, C, F,
    136:       CodeWarning(T, U, F,
    139:       CodeWarning(T, D, F,
    142:       CodeWarning(T, C, F,
    145:       CodeWarning(T, D, F,
    148:       CodeWarning(T, E, F,
    151:       CodeWarning(T, I, F,
    154:       CodeWarning(T, D, F,
    157:       CodeWarning(T, C, F,
    160:       CodeWarning(T, D, F,
    163:       CodeWarning(T, C, F,
    166:       CodeWarning(T, D, F,
    169:       CodeWarning(F, X, T,
    172:       CodeWarning(F, X, T,
    175:       CodeWarning(F, X, T,
    178:       CodeWarning(T, D, T,
    181:       CodeWarning(T, D, T,
    184:       CodeWarning(T, D, T,
    187:       CodeWarning(F, X, T,
    190:       CodeWarning(T, D, T,
    193:       CodeWarning(T, D, F,
    196:       CodeWarning(T, D, F,
    202:       CodeWarning(F, X, F,
    205:       CodeWarning(F, X, F,
    208:       CodeWarning(T, R, F,
    211:       CodeWarning(T, R, F,
    214:       CodeWarning(T, D, F,
    217:       CodeWarning(F, X, F,
    220:       CodeWarning(F, X, F,
    223:       CodeWarning(F, X, F,
    226:       CodeWarning(F, X, F,
    229:       CodeWarning(F, X, F,
    232:       CodeWarning(F, X, F,
    235:       CodeWarning(F, X, F,
    238:       CodeWarning(F, X, F,
    241:       CodeWarning(F, X, F,
    244:       CodeWarning(F, X, F,
    247:       CodeWarning(F, X, F,
    250:       CodeWarning(T, I, F,
    253:       CodeWarning(T, I, F,
    256:       CodeWarning(T, E, F,
    262:       CodeWarning(T, C, F,
    265:       CodeWarning(T, C, F,
    268:       CodeWarning(T, C, F,
    271:       CodeWarning(F, X, F,
    274:       CodeWarning(T, I, F,
    283:       CodeWarning(T, C, F,
    286:       CodeWarning(F, X, F,
    289:       CodeWarning(F, X, F,
    295:       CodeWarning(F, X, F,
    298:       CodeWarning(F, X, F,
    301:       CodeWarning(T, I, F,
    304:       CodeWarning(T, I, F,
    307:       CodeWarning(F, X, F,
    310:       CodeWarning(T, D, F,
    313:       CodeWarning(F, X, F,
    316:       CodeWarning(F, X, F,
    319:       CodeWarning(F, X, F,
    322:       CodeWarning(F, X, F,
    328:       CodeWarning(T, I, F,
    331:       CodeWarning(T, E, F,
    334:       CodeWarning(F, X, F,
    337:       CodeWarning(F, X, F,
    340:       CodeWarning(T, R, F,
    343:       CodeWarning(T, R, F,
    346:       CodeWarning(F, X, F,
    349:       CodeWarning(F, X, F,
    352:       CodeWarning(T, I, F,
    355:       CodeWarning(T, I, F,
    358:       CodeWarning(F, X, F,
    361:       CodeWarning(T, I, F,
    364:       CodeWarning(T, I, F,
    367:       CodeWarning(F, X, F,
    373:       CodeWarning(F, X, F,
    379:       CodeWarning(T, R, F,
    385:       CodeWarning(T, E, F,
    388:       CodeWarning(T, E, F,
    391:       CodeWarning(T, C, F,
    394:       CodeWarning(T, D, F,
    397:       CodeWarning(F, S, F,
    400:       CodeWarning(F, X, F,
    403:       CodeWarning(F, X, F,
    406:       CodeWarning(T, R, F,
    409:       CodeWarning(T, C, F,
    421:       CodeWarning(F, X, F,
    424:       CodeWarning(F, X, F,
    427:       CodeWarning(T, R, F,
    430:       CodeWarning(T, R, F,
    433:       CodeWarning(T, I, F,
    436:       CodeWarning(T, I, F,
    439:       CodeWarning(T, R, F,
    445:       CodeWarning(F, X, F,
C:/Users/gregu/Documents/rsc/rsc/ct/CodeWarning.h
  W020 Using statement in header
    36: using NodeBase::fixed_string;
    37: using NodeBase::SPACE;
    38: using NodeBase::word;
  W032 Unused function
    133:    bool operator!=(const WarningLog& that) const;
  W040 Struct could be class
    112: struct WarningLog
  W042 Member could be private
    72:    typedef std::pair< Warning, CodeWarning > WarningPair;
    76:    typedef std::map< Warning, CodeWarning > AttrsMap;
  W047 Data is init-only
    64:    bool suppressed;
  W053 Data could be const
    114:    Warning warning;       // type of warning
    116:    size_t line;           // line where warning occurred
    117:    size_t pos;            // position in FILE where warning occurred
    119:    word offset;           // warning-specific; displayed if > 0
    120:    std::string info;      // warning-specific
    121:    bool hide;             // set to stop warning from being displayed
  W054 Data could be const pointer
    115:    const CodeFile* file;  // file where warning occurred
    118:    const CxxNamed* item;  // item associated with warning
  W082 Adjacent arguments have the same type
    126:    WarningLog(Warning warning, const CodeFile* file,
  W092 Function could be free
    84:    static void Initialize();
    186:    static bool IsSortedForFixing
    199:    static std::string WarningCode(Warning warning);
    203:    static bool IsSortedByFile(const WarningLog& log1, const WarningLog& log2);
    207:    static bool IsSortedByWarning
C:/Users/gregu/Documents/rsc/rsc/ct/CtModule.h
  W047 Data is init-only
    60:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    40:    virtual void Shutdown(NodeBase::RestartLevel level) override;
    44:    virtual void Startup(NodeBase::RestartLevel level) override;
  W092 Function could be free
    56:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.cpp
  W005 Functional cast
    261:       if(Attrs[i].symbol.compare(sym) == 0) return Cxx::Operator(i);
    313:          oper = Cxx::Operator(i);
    364:       Attrs[ValidIntDigits[i]].intValue = int8_t(i);
    370:       Attrs[ValidHexDigits[i]].hexValue = int8_t(h);
    375:       Attrs[ValidOctDigits[i]].octValue = int8_t(i);
  W099 Line contains adjacent spaces
    98:    CxxWord("-",   "-",    "D",  F),  // AUTO
    99:    CxxWord("-",   "-",    "b",  T),  // BREAK
    100:    CxxWord("-",   "-",    "c",  T),  // CASE
    101:    CxxWord("C",   "C",    "-",  T),  // CLASS
    102:    CxxWord("DP",  "DP",   "D",  F),  // CONST
    103:    CxxWord("DP",  "DP",   "D",  F),  // CONSTEXPR
    104:    CxxWord("-",   "-",    "n",  T),  // CONTINUE
    105:    CxxWord("-",   "-",    "o",  T),  // DEFAULT
    106:    CxxWord("-",   "-",    "d",  T),  // DO
    107:    CxxWord("E",   "E",    "E",  T),  // ENUM
    108:    CxxWord("-",   "P",    "-",  F),  // EXPLICIT
    109:    CxxWord("DP",  "-",    "-",  T),  // EXTERN
    110:    CxxWord("-",   "-",    "f",  T),  // FOR
    111:    CxxWord("-",   "F",    "-",  T),  // FRIEND
    112:    CxxWord("H",   "H",    "H",  F),  // HASH
    113:    CxxWord("-",   "-",    "i",  T),  // IF
    114:    CxxWord("P",   "P",    "-",  T),  // INLINE
    115:    CxxWord("-",   "D",    "-",  F),  // MUTABLE
    116:    CxxWord("N",   "-",    "-",  T),  // NAMESPACE
    117:    CxxWord("-",   "P",    "-",  F),  // OPERATOR
    118:    CxxWord("-",   "A",    "-",  T),  // PRIVATE
    119:    CxxWord("-",   "A",    "-",  T),  // PROTECTED
    120:    CxxWord("-",   "A",    "-",  T),  // PUBLIC
    121:    CxxWord("-",   "-",    "r",  T),  // RETURN
    122:    CxxWord("D",   "DP",   "D",  F),  // STATIC
    123:    CxxWord("C",   "C",    "-",  T),  // STRUCT
    124:    CxxWord("-",   "-",    "s",  T),  // SWITCH
    125:    CxxWord("DCP", "DCFP", "-",  F),  // TEMPLATE
    126:    CxxWord("-",   "-",    "t",  T),  // TRY
    127:    CxxWord("T",   "T",    "T",  T),  // TYPEDEF
    128:    CxxWord("C",   "C",    "-",  T),  // UNION
    129:    CxxWord("U",   "U",    "U",  T),  // USING
    130:    CxxWord("-",   "P",    "-",  F),  // VIRTUAL
    131:    CxxWord("-",   "-",    "w",  T),  // WHILE
    132:    CxxWord("-",   "P",    "-",  F),  // NVDTOR
    133:    CxxWord("DP",  "DP",   "xD", F)   // NIL_KEYWORD
    155:    CxxOp(           SCOPE_STR, 2, 18, F, F, F),  // SCOPE_RESOLUTION
    156:    CxxOp(                 ".", 2, 17, F, F, F),  // REFERENCE_SELECT
    157:    CxxOp(                "->", 2, 17, T, F, F),  // POINTER_SELECT
    158:    CxxOp(                 "[", 2, 17, T, F, F),  // ARRAY_SUBSCRIPT
    159:    CxxOp(                 "(", 0, 17, F, F, F),  // FUNCTION_CALL
    160:    CxxOp(                "++", 1, 17, T, F, F),  // POSTFIX_INCREMENT
    161:    CxxOp(                "--", 1, 17, T, F, F),  // POSTFIX_DECREMENT
    162:    CxxOp(         DEFINED_STR, 1, 17, F, F, F),  // DEFINED
    163:    CxxOp(          TYPEID_STR, 1, 17, F, F, F),  // TYPE_NAME
    164:    CxxOp(      CONST_CAST_STR, 2, 17, F, F, F),  // CONST_CAST
    165:    CxxOp(    DYNAMIC_CAST_STR, 2, 17, F, F, F),  // DYNAMIC_CAST
    167:    CxxOp(     STATIC_CAST_STR, 2, 17, F, F, F),  // STATIC_CAST
    168:    CxxOp(          SIZEOF_STR, 1, 16, F, T, F),  // SIZEOF_TYPE
    169:    CxxOp(        NOEXCEPT_STR, 1, 16, F, T, F),  // NOEXCEPT
    170:    CxxOp(                "++", 1, 16, T, T, F),  // PREFIX_INCREMENT
    171:    CxxOp(                "--", 1, 16, T, T, F),  // PREFIX_DECREMENT
    172:    CxxOp(                 "~", 1, 16, T, T, F),  // ONES_COMPLEMENT
    173:    CxxOp(                 "!", 1, 16, T, T, F),  // LOGICAL_NOT
    174:    CxxOp(                 "+", 1, 16, T, T, F),  // UNARY_PLUS
    175:    CxxOp(                 "-", 1, 16, T, T, F),  // UNARY_MINUS
    176:    CxxOp(                 "&", 1, 16, T, T, F),  // ADDRESS_OF
    177:    CxxOp(                 "*", 1, 16, T, T, F),  // INDIRECTION
    178:    CxxOp(             NEW_STR, 0, 16, T, T, F),  // OBJECT_CREATE
    179:    CxxOp(       NEW_ARRAY_STR, 0, 16, T, T, F),  // OBJECT_CREATE_ARRAY
    180:    CxxOp(          DELETE_STR, 1, 16, T, T, F),  // OBJECT_DELETE
    181:    CxxOp(    DELETE_ARRAY_STR, 1, 16, T, T, F),  // OBJECT_DELETE_ARRAY
    182:    CxxOp(                 "(", 2, 16, T, T, F),  // CAST
    183:    CxxOp(                ".*", 2, 15, F, F, F),  // REFERENCE_SELECT_MEMBER
    184:    CxxOp(               "->*", 2, 15, T, F, F),  // POINTER_SELECT_MEMBER
    185:    CxxOp(                 "*", 2, 14, T, F, T),  // MULTIPLY
    186:    CxxOp(                 "/", 2, 14, T, F, F),  // DIVIDE
    187:    CxxOp(                 "%", 2, 14, T, F, F),  // MODULO
    188:    CxxOp(                 "+", 2, 13, T, F, T),  // ADD
    189:    CxxOp(                 "-", 2, 13, T, F, F),  // SUBTRACT
    190:    CxxOp(                "<<", 2, 12, T, F, F),  // LEFT_SHIFT
    191:    CxxOp(                ">>", 2, 12, T, F, F),  // RIGHT_SHIFT
    192:    CxxOp(                 "<", 2, 11, T, F, T),  // LESS
    193:    CxxOp(                "<=", 2, 11, T, F, T),  // LESS_OR_EQUAL
    194:    CxxOp(                 ">", 2, 11, T, F, T),  // GREATER
    195:    CxxOp(                ">=", 2, 11, T, F, T),  // GREATER_OR_EQUAL
    196:    CxxOp(                "==", 2, 10, T, F, T),  // EQUALITY
    197:    CxxOp(                "!=", 2, 10, T, F, T),  // INEQUALITY
    198:    CxxOp(                 "&", 2,  9, T, F, T),  // BITWISE_AND
    199:    CxxOp(                 "^", 2,  8, T, F, T),  // BITWISE_XOR
    200:    CxxOp(                 "|", 2,  7, T, F, T),  // BITWISE_OR
    201:    CxxOp(                "&&", 2,  6, T, F, T),  // LOGICAL_AND
    202:    CxxOp(                "||", 2,  5, T, F, T),  // LOGICAL_OR
    203:    CxxOp(                 "?", 3,  4, F, F, F),  // CONDITIONAL
    204:    CxxOp(                 "=", 2,  3, T, T, F),  // ASSIGN
    205:    CxxOp(                "*=", 2,  3, T, T, F),  // MULTIPLY_ASSIGN
    206:    CxxOp(                "/=", 2,  3, T, T, F),  // DIVIDE_ASSIGN
    207:    CxxOp(                "%=", 2,  3, T, T, F),  // MODULO_ASSIGN
    208:    CxxOp(                "+=", 2,  3, T, T, F),  // ADD_ASSIGN
    209:    CxxOp(                "-=", 2,  3, T, T, F),  // SUBTRACT_ASSIGN
    210:    CxxOp(               "<<=", 2,  3, T, T, F),  // LEFT_SHIFT_ASSIGN
    211:    CxxOp(               ">>=", 2,  3, T, T, F),  // RIGHT_SHIFT_ASSIGN
    212:    CxxOp(                "&=", 2,  3, T, T, F),  // BITWISE_AND_ASSIGN
    213:    CxxOp(                "^=", 2,  3, T, T, F),  // BITWISE_XOR_ASSIGN
    214:    CxxOp(                "|=", 2,  3, T, T, F),  // BITWISE_OR_ASSIGN
    215:    CxxOp(           THROW_STR, 0,  2, F, T, F),  // THROW
    216:    CxxOp(                 ",", 2,  1, F, F, F),  // STATEMENT_SEPARATOR
    217:    CxxOp(                 "$", 0,  0, F, F, F),  // START_OF_EXPRESSION
    218:    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // FALSE
    219:    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // TRUE
    220:    CxxOp(           ERROR_STR, 0,  0, F, F, F),  // NULLPTR
    221:    CxxOp(           ERROR_STR, 0,  0, F, F, F)   // NIL_OPERATOR
C:/Users/gregu/Documents/rsc/rsc/ct/Cxx.h
  W042 Member could be private
    428:    Numeric(NumericType type, size_t width, bool sign) noexcept :
  W053 Data could be const
    477:    NumericType type_ : 8;
    485:    bool signed_ : 8;
C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.cpp
  W007 Cast down the inheritance hierarchy
    211:          static_cast< const Function* >(item)->IsInline())
    223:          auto spec = static_cast< ClassInst* >(usingClass)->GetSpec();
    1034:    auto area = static_cast< CxxArea* >(GetScope());
    1037:    if(inst != nullptr) return static_cast< ClassInst* >(inst);
    1054:          auto c = static_cast< Class* >(*s);
    2004:       auto func = static_cast< const Function* >(item);
    2030:       auto func = static_cast< const Function* >(item);
  W008 Cast removes const qualification
    1279:    return const_cast< Class* >(this);
    1402:    return static_cast< CxxScope* >(const_cast< Class* >(this));
    2000:       return const_cast< ClassInst* >(this);
  W106 Function does not invoke Debug::ft
    376: void Class::AddItem(CxxNamed* item)
    1276: Class* Class::GetClassTemplate() const
    1308: Cxx::Access Class::GetCurrAccess() const
    1384: size_t Class::GetRange(size_t& begin, size_t& end) const
    1399: CxxScope* Class::GetTemplate() const
    1770: Class* Class::OuterClass() const
    2501: const FunctionPtrVector* CxxArea::FuncVector(const string& name) const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxArea.h
  W004 C-style cast
    448:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W007 Cast down the inheritance hierarchy
    845:       const { return static_cast< Namespace* >(GetScope()); }
  W008 Cast removes const qualification
    144:       override { return const_cast< CxxArea* >(this); }
    448:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    484:       override { return const_cast< Class* >(this); }
    882:       override { return const_cast< Namespace* >(this); }
  W042 Member could be private
    119:    Typedef* FindType(const std::string& name) const;
    164:    Enum* FindEnum(const std::string& name) const;
    168:    Enumerator* FindEnumerator(const std::string& name) const;
    374:    FunctionDefinition GetFuncDefinition(const Function* func) const;
    850:    Namespace* FindNamespace(const std::string& name) const;
  W043 Member could be protected
    79:    const ClassPtrVector* Classes() const { return &classes_; }
    87:    const EnumPtrVector* Enums() const { return &enums_; }
    91:    const ForwardPtrVector* Forws() const { return &forws_; }
  W060 Base class constructor is public
    251:    Class(QualNamePtr& name, Cxx::ClassTag tag);
  W075 Virtual function is public
    128:    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
    135:    virtual Function* MatchFunc(const Function* curr, bool base) const;
    276:    virtual ClassInst* EnsureInstance(const TypeName* type);
    284:    virtual Class* BaseClass()
    289:    virtual BaseDecl* GetBaseDecl() const { return base_.get(); }
    306:    virtual Class* GetClassTemplate() const;
    321:    virtual bool DerivesFrom(const Class* cls) const;
    439:    virtual bool AddAnonymousUnion(const ClassPtr& cls) override;
    456:    virtual void CheckIfUsed(Warning warning) const override;
    464:    virtual Class* DirectClass() const override { return GetClass(); }
    869:    virtual CxxScoped* FindItem(const std::string& name) const override;
  W078 Remove virtual tag: function is an override or final
    139:    virtual void Check() const override;
    143:    virtual CxxArea* GetArea() const
    148:    virtual void Shrink() override;
    427:    virtual void AccessibilityTo
    433:    virtual void AccessibilityOf(const CxxScope* scope,
    439:    virtual bool AddAnonymousUnion(const ClassPtr& cls) override;
    444:    virtual void AddFiles(SetOfIds& imSet) const override;
    448:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    452:    virtual void Check() const override;
    456:    virtual void CheckIfUsed(Warning warning) const override;
    460:    virtual Class* Declarer() const override { return OuterClass(); }
    464:    virtual Class* DirectClass() const override { return GetClass(); }
    468:    virtual void Display(std::ostream& stream,
    473:    virtual bool EnterScope() override;
    478:    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
    483:    virtual Class* GetClass() const
    489:    virtual void GetConvertibleTypes(StackArgVector& types) override;
    493:    virtual Cxx::Access GetCurrAccess() const override;
    497:    virtual QualName* GetQualName() const override { return name_.get(); }
    501:    virtual size_t GetRange(size_t& begin, size_t& end) const override;
    505:    virtual CxxScope* GetTemplate() const override;
    509:    virtual const TemplateParms* GetTemplateParms() const
    515:    virtual void GetUsages
    520:    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
    525:    virtual bool IsImplemented() const override;
    529:    virtual Function* MatchFunc(const Function* curr, bool base) const override;
    533:    virtual const std::string* Name() const override { return name_->Name(); }
    538:    virtual StackArg NameToArg(Cxx::Operator op) override;
    542:    virtual void RecordUsage() const override { AddUsage(); }
    546:    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
    550:    virtual void Shrink() override;
    554:    virtual Cxx::ItemType Type() const override { return Cxx::Class; }
    559:    virtual std::string TypeString(bool arg) const override;
    564:    virtual bool WasWritten(const StackArg* arg, bool passed)
    573:    virtual void AddItem(CxxNamed* item) override;
    729:    virtual Class* BaseClass() const override { return tmplt_->BaseClass(); }
    736:    virtual bool DerivesFrom(const Class* cls) const override;
    741:    virtual void Display(std::ostream& stream,
    747:    virtual ClassInst* EnsureInstance(const TypeName* type)
    752:    virtual BaseDecl* GetBaseDecl() const
    757:    virtual Class* GetClassTemplate() const override { return tmplt_; }
    761:    virtual CxxScope* GetTemplate() const override { return tmplt_; }
    765:    virtual TypeName* GetTemplateArgs() const override { return spec_.get(); }
    769:    virtual void GetUsages
    774:    virtual bool Instantiate() override;
    778:    virtual bool IsInTemplateInstance() const override { return true; }
    782:    virtual void RecordUsage() const override { tmplt_->RecordUsage(); }
    786:    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
    790:    virtual void Shrink() override;
    795:    virtual std::string TypeString(bool arg) const override;
    854:    virtual void Check() const override;
    858:    virtual void Display(std::ostream& stream,
    864:    virtual Function* FindFunc(const std::string& name, StackArgVector* args,
    869:    virtual CxxScoped* FindItem(const std::string& name) const override;
    873:    virtual Class* GetClass() const override { return nullptr; }
    877:    virtual Cxx::Access GetCurrAccess() const override { return Cxx::Public; }
    881:    virtual Namespace* GetSpace() const
    886:    virtual bool IsInTemplateInstance() const override { return false; }
    890:    virtual const std::string* Name() const override { return &name_; }
    894:    virtual void SetLoc(CodeFile* file, size_t pos) override;
    898:    virtual std::string ScopedName(bool templates) const override;
    902:    virtual void Shrink() override;
    906:    virtual Cxx::ItemType Type() const override { return Cxx::Namespace; }
    910:    virtual std::string TypeString(bool arg) const override;
    915:    virtual void AccessibilityOf(const CxxScope* scope,
  W092 Function could be free
    186:    static Function* FoundFunc
    593:    static size_t CreateCodeError
  W114 Function could be tagged noexcept
    236:    DataInitAttrs(const Data* m, bool n, size_t o) :
C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.cpp
  W007 Cast down the inheritance hierarchy
    872:       auto macro = static_cast< Macro* >(ref_);
    885:       auto macro = static_cast< Macro* >(ref_);
  W106 Function does not invoke Debug::ft
    48: void AlignLeft(ostream& stream, const string& prefix)
    151: CxxToken* Define::AutoType() const
    822: CxxScope* MacroName::GetScope() const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxDirective.h
  W042 Member could be private
    240:    virtual CxxToken* GetValue() const = 0;
    280:    virtual CxxToken* RootType() const override { return GetValue(); }
  W043 Member could be protected
    733:    const std::string& GetText() const { return text_; }
  W050 Data is not private
    305:    size_t refs_ : 16;
  W075 Virtual function is public
    115:    virtual void SetScope(CxxScope* scope) override;
    240:    virtual CxxToken* GetValue() const = 0;
    245:    virtual bool IsDefined() const { return true; }
    251:    virtual void SetExpr(ExprPtr& rhs);
    280:    virtual CxxToken* RootType() const override { return GetValue(); }
    415:    virtual bool AddElif(Elif* e) { return false; }
    419:    virtual bool AddElse(const Else* e) { return false; }
    428:    virtual bool HasCompiledCode() const { return compile_; }
    469:    virtual void AddCondition(ExprPtr& c) override { condition_ = std::move(c); }
  W078 Remove virtual tag: function is an override or final
    48:    virtual void EnterBlock() override { }
    52:    virtual bool InLine() const override { return false; }
    72:    virtual const std::string* Name() const override { return &name_; }
    76:    virtual void Shrink() override;
    110:    virtual void Display(std::ostream& stream,
    115:    virtual void SetScope(CxxScope* scope) override;
    119:    virtual void Shrink() override;
    143:    virtual void Display(std::ostream& stream,
    148:    virtual void Shrink() override;
    172:    virtual void EnterBlock() override;
    176:    virtual CxxScope* GetScope() const override;
    180:    virtual void GetUsages
    185:    virtual const std::string* Name() const override { return &name_; }
    189:    virtual void Print
    194:    virtual std::string QualifiedName
    199:    virtual CxxNamed* Referent() const override;
    203:    virtual void Shrink() override;
    207:    virtual std::string TypeString(bool arg) const override;
    255:    virtual void Display(std::ostream& stream,
    260:    virtual Numeric GetNumeric() const override;
    264:    virtual bool InLine() const override { return false; }
    268:    virtual bool IsUnused() const override { return (refs_ == 0); }
    272:    virtual const std::string* Name() const override { return &name_; }
    276:    virtual void RecordUsage() const override { AddUsage(); }
    280:    virtual CxxToken* RootType() const override { return GetValue(); }
    284:    virtual void Shrink() override;
    288:    virtual Cxx::ItemType Type() const override { return Cxx::Macro; }
    292:    virtual std::string TypeString(bool arg) const override;
    296:    virtual bool WasRead() override { ++refs_; return true; }
    340:    virtual CxxToken* AutoType() const override;
    344:    virtual bool IsDefined() const override { return defined_; }
    349:    virtual void SetExpr(ExprPtr& rhs) override;
    353:    virtual CxxToken* GetValue() const override { return value_; }
    357:    virtual void Display(std::ostream& stream,
    362:    virtual bool EnterScope() override;
    366:    virtual void Shrink() override;
    423:    virtual void Display(std::ostream& stream,
    469:    virtual void AddCondition(ExprPtr& c) override { condition_ = std::move(c); }
    473:    virtual void Display(std::ostream& stream,
    478:    virtual bool EnterScope() override;
    482:    virtual void GetUsages
    487:    virtual void Shrink() override { ShrinkExpression(condition_); }
    511:    virtual bool AddElse(const Else* e) override;
    515:    virtual void Display(std::ostream& stream,
    520:    virtual void GetUsages
    525:    virtual const std::string* Name() const override { return name_->Name(); }
    529:    virtual void Shrink() override;
    566:    virtual void Display(std::ostream& stream,
    571:    virtual bool EnterScope() override;
    591:    virtual void Display(std::ostream& stream,
    596:    virtual bool EnterScope() override;
    616:    virtual void Display(std::ostream& stream,
    637:    virtual void Display(std::ostream& stream,
    642:    virtual bool EnterScope() override;
    662:    virtual bool AddElif(Elif* e) override;
    666:    virtual bool AddElse(const Else* e) override;
    670:    virtual void Display(std::ostream& stream,
    675:    virtual bool EnterScope() override;
    680:    virtual bool HasCompiledCode() const override;
    684:    virtual void Shrink() override;
    712:    virtual void Display(std::ostream& stream,
    717:    virtual bool EnterScope() override;
    737:    virtual void Shrink() override;
    766:    virtual void Display(std::ostream& stream,
    787:    virtual void Display(std::ostream& stream,
    792:    virtual bool EnterScope() override;
    812:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.cpp
  W007 Cast down the inheritance hierarchy
    1418:       auto thisClass = static_cast< Class* >(thisRoot);
    1426:             auto thatClass = static_cast< Class* >(thatRoot);
    1567:    if(AutoType_.SetAutoTypeOn(*static_cast< FuncData* >(item)))
    1611:    auto ref = static_cast< CxxNamed* >(item);
    1776:          static_cast< Class* >(root)->BlockCopied(this);
  W075 Virtual function is public
    65:    virtual bool Display(ostream& stream, bool diff) override;
    77:    virtual bool Display(ostream& stream, bool diff) override;
    93:    virtual bool Display(ostream& stream, bool diff) override;
    109:    virtual bool Display(ostream& stream, bool diff) override;
    129:    virtual bool Display(ostream& stream, bool diff) override;
  W078 Remove virtual tag: function is an override or final
    65:    virtual bool Display(ostream& stream, bool diff) override;
    77:    virtual bool Display(ostream& stream, bool diff) override;
    93:    virtual bool Display(ostream& stream, bool diff) override;
    109:    virtual bool Display(ostream& stream, bool diff) override;
    129:    virtual bool Display(ostream& stream, bool diff) override;
  W106 Function does not invoke Debug::ft
    235: const Parser* Context::GetParser()
    297: bool Context::OptionIsOn(char opt)
    304: bool Context::ParsingTemplateInstance()
    382: void Context::SetPos(size_t pos)
    414: void Context::SetPos(const CxxLocation& loc)
    504: void Context::Trace(CxxTrace::Action act)
    512: void Context::Trace(CxxTrace::Action act, const StackArg& arg)
    520: void Context::Trace(CxxTrace::Action act, word err, const string& expl)
    528: void Context::Trace(CxxTrace::Action act, const CodeFile& file)
    536: void Context::Trace(CxxTrace::Action act, const CxxToken* token)
    735: OptionalCode* ParseFrame::Optional() const
    922: CxxScope* ParseFrame::Scope() const
    953: bool SourceLoc::operator<(const SourceLoc& that) const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxExecute.h
  W026 Unused argument
    638/1:    static void Shutdown(NodeBase::RestartLevel level);
    642/1:    static void Startup(NodeBase::RestartLevel level) { }
  W032 Unused function
    135:    size_t Arrays() const;
    278:    bool operator!=(const StackArg& that) const;
    498:    bool operator<(const SourceLoc& that) const;
  W042 Member could be private
    277:    bool operator==(const StackArg& that) const;
  W050 Data is not private
    286:    CxxToken* item;
  W053 Data could be const
    310:    CxxToken* via_;
    349:    bool ctor_ : 1;
  W054 Data could be const pointer
    310:    CxxToken* via_;
  W078 Remove virtual tag: function is an override or final
    78:    virtual bool Display(std::ostream& stream, bool diff) override;
  W082 Adjacent arguments have the same type
    244:    TypeMatch CalcMatchWith(const StackArg& that,
    295:    TypeMatch MatchWith(const StackArg& that,
  W092 Function could be free
    306:    static void ContextFunctionIsNonConst();
    579:    static void SetPos(const CxxLocation& loc);
    642:    static void Startup(NodeBase::RestartLevel level) { }
    711:    static std::string Location();
  W114 Function could be tagged noexcept
    112:    StackArg(const StackArg& that) = default;
    116:    StackArg& operator=(const StackArg& that) = default;
    497:    SourceLoc(const CodeFile* f, size_t n) : file(f), line(n) { }
    642:    static void Startup(NodeBase::RestartLevel level) { }
C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.cpp
  W007 Cast down the inheritance hierarchy
    399:          space = static_cast< Namespace* >(item);
    423:          cls = static_cast< Class* >(item);
    477:          item = static_cast< Enum* >(item)->FindEnumerator(name);
    488:             auto tdef = static_cast< Typedef* >(item);
    493:             item = static_cast< CxxScoped* >(root);
    505:             item = static_cast< CxxScoped* >(ref);
    782:    return static_cast< Class* >(root);
    1990:          ref = static_cast< ClassInst* >(cls)->FindTemplateAnalog(ref);
    2000:       ref = static_cast< Function* >(ref)->FindRootFunc();
  W008 Cast removes const qualification
    978:    return const_cast< DataSpec* >(this);
    1396:    const_cast< DataSpec* >(this)->FindReferent();
    2577:    return const_cast< TypeName* >(this);
  W106 Function does not invoke Debug::ft
    74: size_t CxxLocation::GetPos() const
    81: void CxxLocation::SetLoc(CodeFile* file, size_t pos)
    203: CxxArea* CxxNamed::GetArea() const
    212: Class* CxxNamed::GetClass() const
    221: id_t CxxNamed::GetDeclFid() const
    230: size_t CxxNamed::GetRange(size_t& begin, size_t& end) const
    239: void CxxNamed::GetScopedNames(stringVector& names) const
    246: Namespace* CxxNamed::GetSpace() const
    255: bool CxxNamed::IsInTemplateInstance() const
    612: void CxxNamed::strName(ostream& stream, bool fq, const QualName* name) const
    953: TypeTags DataSpec::GetAllTags() const
    976: TypeSpec* DataSpec::GetTypeSpec() const
    1105: bool DataSpec::IsAutoDecl() const
    1837: TypeName* QualName::At(size_t n) const
    1946: TypeName* QualName::GetTemplateArgs() const
    2026: TypeName* QualName::Last() const
    2273: size_t QualName::Size() const
    2550: CxxNamed* TypeName::DirectType() const
    2574: TypeName* TypeName::GetTemplateArgs() const
    2742: void TypeName::PushBack(TypeNamePtr& type)
    3241: int TypeTags::IsConstPtr() const
    3249: bool TypeTags::IsConstPtr(size_t n) const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxNamed.h
  W004 C-style cast
    1264:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W008 Cast removes const qualification
    799:       override { return const_cast< QualName* >(this); }
    1264:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W042 Member could be private
    941:    bool IsUnboundedArray() const { return array_; }
  W043 Member could be protected
    166:    bool IsInternal() const { return loc_.IsInternal(); }
    231:    virtual CodeFile* GetDeclFile() const { return GetFile(); }
    240:    virtual CodeFile* GetDefnFile() const { return nullptr; }
    319:    void Accessed() const;
    332:    void DisplayReferent(std::ostream& stream, bool fq) const;
    336:    std::string strLocation() const;
    341:    void strName(std::ostream& stream, bool fq, const QualName* name) const;
    1035:    Cxx::ItemType GetUserType() const { return user_; }
    1039:    TemplateRole GetTemplateRole() const { return role_; }
  W050 Data is not private
    986:    bool ptrDet_: 1;
    990:    bool refDet_: 1;
  W075 Virtual function is public
    113:    virtual void SetLoc(CodeFile* file, size_t pos);
    126:    virtual void CopyContext(const CxxNamed* that);
    144:    virtual size_t GetRange(size_t& begin, size_t& end) const;
    149:    virtual CxxScope* GetScope() const { return nullptr; }
    157:    virtual bool IsStatic() const { return true; }
    162:    virtual bool IsDeclaredInFunction() const { return false; }
    172:    virtual void SetTemplateParms(TemplateParmsPtr& parms);
    177:    virtual const TemplateParms* GetTemplateParms() const { return nullptr; }
    185:    virtual CxxScope* GetTemplate() const { return nullptr; }
    191:    virtual std::string QualifiedName(bool scopes, bool templates)
    197:    virtual std::string ScopedName(bool templates) const;
    202:    virtual void GetScopedNames(stringVector& names) const;
    209:    virtual bool IsSuperscopeOf(const std::string& fqSub, bool tmplt) const
    215:    virtual CxxArea* GetArea() const;
    220:    virtual Function* GetFunction() const { return nullptr; }
    224:    virtual Cxx::Access GetAccess() const { return Cxx::Public; }
    231:    virtual CodeFile* GetDeclFile() const { return GetFile(); }
    235:    virtual NodeBase::id_t GetDeclFid() const;
    240:    virtual CodeFile* GetDefnFile() const { return nullptr; }
    249:    virtual CxxNamed* GetMate() const { return nullptr; }
    262:    virtual bool EnterScope() { return true; }
    272:    virtual bool IsImplemented() const { return true; }
    278:    virtual CxxNamed* DirectType() const { return Referent(); }
    282:    virtual void FindReferent();
    288:    virtual void SetReferent(CxxNamed* item, const SymbolView* view) const;
    292:    virtual void SetAsReferent(const CxxNamed* user) { }
    297:    virtual bool Instantiate() { return false; }
    301:    virtual bool IsInTemplateInstance() const;
    308:    virtual StackArg NameToArg(Cxx::Operator op);
    314:    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op);
    618:    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
    830:    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
    834:    virtual bool ResolveTemplate
    1031:    virtual void SetUserType(Cxx::ItemType user);
    1043:    virtual Function* GetFuncSpec() const { return nullptr; }
    1053:    virtual TypeSpec* Clone() const = 0;
    1057:    virtual TypeTags* Tags() = 0;
    1058:    virtual const TypeTags* Tags() const = 0;
    1062:    virtual void AddArray(ArraySpecPtr& array) = 0;
    1068:    virtual TagCount Ptrs(bool arrays) const = 0;
    1074:    virtual TagCount Refs() const = 0;
    1079:    virtual TagCount Arrays() const = 0;
    1083:    virtual bool HasArrayDefn() const = 0;
    1087:    virtual void EnteringScope(const CxxScope* scope) = 0;
    1091:    virtual void EnterArrays() const = 0;
    1096:    virtual TypeTags GetAllTags() const = 0;
    1101:    virtual std::string TypeTagsString(const TypeTags& tags) const = 0;
    1106:    virtual void DisplayTags(std::ostream& stream) const = 0;
    1110:    virtual void DisplayArrays(std::ostream& stream) const = 0;
    1116:    virtual void SetPtrs(TagCount count) = 0;
    1121:    virtual void RemoveRefs() = 0;
    1126:    virtual bool MatchesExactly(const TypeSpec* that) const = 0;
    1130:    virtual StackArg ResultType() const = 0;
    1134:    virtual void SetTemplateRole(TemplateRole role) const { role_ = role; }
    1145:    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
    1151:    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const = 0;
    1156:    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const = 0;
    1160:    virtual bool ItemIsTemplateArg(const CxxScoped* item) const = 0;
    1166:    virtual void Instantiating() const = 0;
  W076 Virtual function is overloaded
    1057:    virtual TypeTags* Tags() = 0;
    1058:    virtual const TypeTags* Tags() const = 0;
  W078 Remove virtual tag: function is an override or final
    345:    virtual Class* GetClass() const override;
    349:    virtual Namespace* GetSpace() const override;
    353:    virtual std::string Trace() const override { return ScopedName(true); }
    442:    virtual void GetUsages
    447:    virtual const std::string* Name() const override { return &name_; }
    451:    virtual void Print
    456:    virtual void Shrink() override;
    460:    virtual std::string Trace() const override { return name_; }
    579:    virtual void Check() const override;
    583:    virtual CxxNamed* DirectType() const override;
    587:    virtual void FindReferent() override;
    591:    virtual TypeName* GetTemplateArgs() const override;
    595:    virtual void GetUsages
    600:    virtual const std::string* Name() const override { return &name_; }
    604:    virtual void Print
    609:    virtual std::string QualifiedName
    614:    virtual CxxNamed* Referent() const override { return ref_; }
    618:    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
    622:    virtual void SetReferent
    627:    virtual void Shrink() override;
    632:    virtual std::string TypeString(bool arg) const override;
    781:    virtual void Check() const override;
    785:    virtual void CopyContext(const CxxNamed* that) override;
    789:    virtual CxxNamed* DirectType() const
    794:    virtual void EnterBlock() override;
    798:    virtual QualName* GetQualName() const
    803:    virtual TypeName* GetTemplateArgs() const override;
    807:    virtual void GetUsages
    812:    virtual const std::string* Name() const override { return Last()->Name(); }
    816:    virtual void Print
    821:    virtual std::string QualifiedName
    826:    virtual CxxNamed* Referent() const override;
    830:    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
    834:    virtual bool ResolveTemplate
    844:    virtual void SetReferent
    849:    virtual void Shrink() override;
    853:    virtual Cxx::ItemType Type() const override { return Cxx::QualName; }
    857:    virtual std::string TypeString(bool arg) const override;
    1170:    virtual Cxx::ItemType Type() const override { return Cxx::TypeSpec; }
    1250:    virtual void AddArray(ArraySpecPtr& array) override;
    1255:    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const override;
    1260:    virtual TagCount Arrays() const override;
    1264:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    1269:    virtual void Check() const override;
    1273:    virtual TypeSpec* Clone() const override;
    1277:    virtual void CopyContext(const CxxNamed* that) override;
    1282:    virtual Class* DirectClass() const override;
    1286:    virtual CxxNamed* DirectType() const override;
    1290:    virtual void DisplayArrays(std::ostream& stream) const override;
    1294:    virtual void DisplayTags(std::ostream& stream) const override;
    1298:    virtual void EnterArrays() const override;
    1302:    virtual void EnterBlock() override;
    1307:    virtual void EnteringScope(const CxxScope* scope) override;
    1312:    virtual void FindReferent() override;
    1316:    virtual Numeric GetNumeric() const override;
    1320:    virtual QualName* GetQualName() const override { return name_.get(); }
    1324:    virtual TypeTags GetAllTags() const override;
    1328:    virtual TypeSpec* GetTypeSpec() const override;
    1332:    virtual void GetUsages
    1337:    virtual bool HasArrayDefn() const override { return (arrays_ == nullptr); }
    1341:    virtual void Instantiating() const override;
    1346:    virtual bool IsAuto() const override;
    1350:    virtual bool ItemIsTemplateArg(const CxxScoped* item) const override;
    1354:    virtual bool IsConst() const override;
    1358:    virtual bool IsConstPtr() const override;
    1362:    virtual bool IsConstPtr(size_t n) const override;
    1366:    virtual bool IsIndirect() const override;
    1370:    virtual bool MatchesExactly(const TypeSpec* that) const override;
    1374:    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
    1380:    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const override;
    1384:    virtual const std::string* Name() const override { return name_->Name(); }
    1388:    virtual void Print
    1394:    virtual TagCount Ptrs(bool arrays) const override;
    1398:    virtual std::string QualifiedName(bool scopes, bool templates) const
    1403:    virtual CxxNamed* Referent() const override;
    1408:    virtual TagCount Refs() const override;
    1412:    virtual void RemoveRefs() override;
    1417:    virtual bool ResolveForward(CxxScoped* decl, size_t n) const override;
    1421:    virtual bool ResolveTemplate
    1426:    virtual bool ResolveTypedef(Typedef* type, size_t n) const override;
    1431:    virtual StackArg ResultType() const override;
    1435:    virtual CxxToken* RootType() const override { return Referent(); }
    1440:    virtual void SetPtrs(TagCount count) override;
    1444:    virtual void SetReferent
    1450:    virtual void SetTemplateRole(TemplateRole role) const override;
    1454:    virtual void SetUserType(Cxx::ItemType user) override;
    1458:    virtual void Shrink() override;
    1462:    virtual TypeTags* Tags() override { return &tags_; }
    1463:    virtual const TypeTags* Tags() const override { return &tags_; }
    1468:    virtual std::string Trace() const override;
    1473:    virtual std::string TypeString(bool arg) const override;
    1477:    virtual std::string TypeTagsString(const TypeTags& tags) const override;
    1481:    virtual bool WasWritten(const StackArg* arg, bool passed)
    1521:    virtual void Check() const override;
    1525:    virtual const std::string* Name() const override { return &name_; }
    1529:    virtual void Print
    1534:    virtual void Shrink() override;
    1538:    virtual std::string TypeString(bool arg) const override;
    1585:    virtual void Check() const override;
    1589:    virtual void Print
    1594:    virtual void Shrink() override;
    1598:    virtual std::string TypeString(bool arg) const override;
  W082 Adjacent arguments have the same type
    552:    TypeMatch MatchTemplate(const TypeName* that,
    768:    TypeMatch MatchTemplate(const QualName* that,
    1145:    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
  W114 Function could be tagged noexcept
    74:    CxxLocation();
    893:    TypeTags(const TypeTags& that) = default;
    897:    TypeTags& operator=(const TypeTags& that) = default;
C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.cpp
  W078 Remove virtual tag: function is an override or final
    65:    virtual CxxToken* GetValue() const override;
    66:    virtual CxxNamed* Referent() const
    108:    virtual CxxToken* GetValue() const override;
    109:    virtual CxxNamed* Referent() const
    157:    virtual CxxToken* GetValue() const override;
    158:    virtual CxxNamed* Referent() const
    206:    virtual CxxToken* GetValue() const override;
    207:    virtual CxxNamed* Referent() const
    248:    virtual CxxToken* GetValue() const override;
    249:    virtual CxxNamed* Referent() const
    294:    virtual const char* Name() const override { return ParserTraceToolName; }
    295:    virtual const char* Expl() const override { return ParserTraceToolExpl; }
C:/Users/gregu/Documents/rsc/rsc/ct/CxxRoot.h
  W078 Remove virtual tag: function is an override or final
    78:    virtual void Display(std::ostream& stream,
    83:    virtual void Shutdown(NodeBase::RestartLevel level) override;
    87:    virtual void Startup(NodeBase::RestartLevel level) override;
C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.cpp
  W007 Cast down the inheritance hierarchy
    655:       auto cls = static_cast<const Class*>(scope);
    1308:    auto cls = static_cast< Class* >(root);
    1375:          auto op = static_cast< Operation* >(expr);
    1661:       if(anon) StackArg::SetAutoTypeFor(static_cast< FuncData& >(*next_));
    1707:    auto data = static_cast< FuncData* >(next_.get());
    2663:       if(!static_cast< Function* >(item)->virtual_)
    3108:             static_cast< ClassData* >(data)->SetInit(m->get());
    3320:    return static_cast< Function* >((*cti)->FindInstanceAnalog(this));
    4568:                auto item = static_cast< CxxNamed* >(args.front().item);
    4651:       auto func = static_cast< ClassInst* >(cls)->FindTemplateAnalog(this);
    4652:       if(func != nullptr) ++static_cast< Function* >(func)->calls_;
  W008 Cast removes const qualification
    2183:    return FoundFunc(const_cast< Function* >(this), args, match);
    3284:    auto prev = const_cast< Function* >(this);
    3463:       (const_cast< Function* >(this));
    3717:    func->SetTemplate(const_cast< Function* >(this));
  W106 Function does not invoke Debug::ft
    113: bool Block::CrlfOver(Form form) const
    232: CxxToken* Block::FirstStatement() const
    240: Function* Block::GetFunction() const
    280: bool Block::InLine() const
    826: id_t CxxScope::GetDistinctDeclFid() const
    1184: CodeFile* Data::GetDeclFile() const
    1191: const Data* Data::GetDefn() const
    1200: CodeFile* Data::GetDefnFile() const
    1247: TypeName* Data::GetTemplateArgs() const
    1403: bool Data::IsConst() const
    1516: bool Data::WasRead()
    3358: FunctionRole Function::FuncRole() const
    3395: FunctionType Function::FuncType() const
    3406: CodeFile* Function::GetDeclFile() const
    3413: const Function* Function::GetDefn() const
    3422: CodeFile* Function::GetDefnFile() const
    3431: size_t Function::GetRange(size_t& begin, size_t& end) const
    3447: CxxScope* Function::GetScope() const
    3459: CxxScope* Function::GetTemplate() const
    3471: TemplateType Function::GetTemplateType() const
    3951: bool Function::IsImplemented() const
    3959: bool Function::IsInTemplateInstance() const
    4673: void FuncSpec::AddArray(ArraySpecPtr& array)
    4687: TagCount FuncSpec::Arrays() const
    4694: void FuncSpec::Check() const
    4701: TypeSpec* FuncSpec::Clone() const
    4723: void FuncSpec::EnterArrays() const
    4742: void FuncSpec::FindReferent()
    4750: TypeTags FuncSpec::GetAllTags() const
    4757: TypeName* FuncSpec::GetTemplateArgs() const
    4764: TypeSpec* FuncSpec::GetTypeSpec() const
    4771: bool FuncSpec::HasArrayDefn() const
    4778: void FuncSpec::Instantiating() const
    4786: bool FuncSpec::IsConst() const
    4793: bool FuncSpec::ItemIsTemplateArg(const CxxScoped* item) const
    4801: bool FuncSpec::MatchesExactly(const TypeSpec* that) const
    4809: TypeMatch FuncSpec::MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
    4819: TypeMatch FuncSpec::MatchTemplateArg(const TypeSpec* that) const
    4841: TagCount FuncSpec::Ptrs(bool arrays) const
    4848: TagCount FuncSpec::Refs() const
    4855: void FuncSpec::RemoveRefs()
    4862: StackArg FuncSpec::ResultType() const
    4869: void FuncSpec::SetPtrs(TagCount count)
    4876: void FuncSpec::SetReferent(CxxNamed* item, const SymbolView* view) const
    4891: const TypeTags* FuncSpec::Tags() const
    4898: TypeTags* FuncSpec::Tags()
C:/Users/gregu/Documents/rsc/rsc/ct/CxxScope.h
  W004 C-style cast
    337:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W008 Cast removes const qualification
    337:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    1164:       const override { return const_cast< Function* >(this); }
  W026 Unused argument
    83/3:       const CxxNamed* item, const CxxScope* scope) const { return nullptr; }
  W030 Unused enumerator
    144:       Multiple   // two statements or more
  W042 Member could be private
    1005:    bool IsTemplateInstance() const { return tmplt_ != nullptr; }
    1033:    size_t MinArgs() const;
    1038:    size_t MaxArgs() const { return args_.size(); }
    1096:    bool IsInvokedInBase() const;
  W043 Member could be protected
    297:    bool IsExtern() const { return extern_; }
    301:    bool IsConstexpr() const { return constexpr_; }
    305:    bool WasInited() const { return GetDecl()->inited_; }
  W075 Virtual function is public
    77:    virtual Cxx::Access GetCurrAccess() const { return Cxx::Private; }
    82:    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
    90:    virtual void AccessibilityOf
    328:    virtual void Promote
    333:    virtual bool IsUnionMember() const { return false; }
    1130:    virtual void CheckAccessControl() const override;
    1134:    virtual void CheckIfHiding() const override;
    1138:    virtual void CheckIfUsed(Warning warning) const override;
    1263:    virtual void WasCalled() override;
  W078 Remove virtual tag: function is an override or final
    187:    virtual void Check() const override;
    194:    virtual void Display(std::ostream& stream,
    200:    virtual void EnterBlock() override;
    204:    virtual Function* GetFunction() const override;
    208:    virtual void GetUsages
    213:    virtual Using* GetUsingFor(const std::string& fqName, size_t prefix,
    218:    virtual bool InLine() const override;
    222:    virtual const std::string* Name() const override { return &name_; }
    226:    virtual void Print
    232:    virtual std::string ScopedName(bool templates) const override;
    236:    virtual void Shrink() override;
    240:    virtual Cxx::ItemType Type() const override { return Cxx::Block; }
    337:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    341:    virtual void Check() const override;
    345:    virtual CodeFile* GetDeclFile() const override;
    350:    virtual CodeFile* GetDefnFile() const override;
    355:    virtual CxxNamed* GetMate() const override { return mate_; }
    359:    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
    363:    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
    367:    virtual TypeName* GetTemplateArgs() const override;
    371:    virtual void GetUsages
    376:    virtual bool IsConst() const override;
    380:    virtual bool IsInitializing() const override { return initing_; }
    384:    virtual bool IsStatic() const override { return static_; }
    388:    virtual bool IsUnused() const
    393:    virtual StackArg NameToArg(Cxx::Operator op) override;
    397:    virtual bool SetNonConst() override;
    401:    virtual void Shrink() override;
    405:    virtual Cxx::ItemType Type() const override { return Cxx::Data; }
    409:    virtual std::string TypeString(bool arg) const override;
    413:    virtual bool WasRead() override;
    417:    virtual bool WasWritten(const StackArg* arg, bool passed) override;
    485:    virtual CxxToken* RootType() const override { return spec_.get(); }
    570:    virtual void Check() const override;
    574:    virtual void Display(std::ostream& stream,
    579:    virtual bool EnterScope() override;
    583:    virtual QualName* GetQualName() const override { return name_.get(); }
    587:    virtual const TemplateParms* GetTemplateParms() const
    592:    virtual const std::string* Name() const override { return name_->Name(); }
    596:    virtual std::string QualifiedName(bool scopes, bool templates) const
    601:    virtual void RecordUsage() const override { AddUsage(); }
    605:    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
    609:    virtual void Shrink() override;
    613:    virtual void GetInitName(QualNamePtr& qualName) const override;
    663:    virtual StackArg NameToArg(Cxx::Operator op) override;
    668:    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op) override;
    672:    virtual void Check() const override;
    676:    virtual void Display(std::ostream& stream,
    681:    virtual void EnterBlock() override;
    685:    virtual bool EnterScope() override;
    689:    virtual void GetUsages
    694:    virtual bool IsUnionMember() const override;
    698:    virtual const std::string* Name() const override { return &name_; }
    703:    virtual void Promote
    708:    virtual void RecordUsage() const override { AddUsage(); }
    712:    virtual void WasMutated(const StackArg* arg) override;
    716:    virtual void Shrink() override;
    720:    virtual std::string Trace() const override {return *Name(); }
    724:    virtual bool WasWritten(const StackArg* arg, bool passed) override;
    728:    virtual void CheckAccessControl() const override;
    796:    virtual void Check() const override;
    800:    virtual void Display(std::ostream& stream,
    805:    virtual void EnterBlock() override;
    809:    virtual void ExitBlock() override;
    813:    virtual void GetUsages
    818:    virtual bool InLine() const override { return true; }
    822:    virtual const std::string* Name() const override { return &name_; }
    826:    virtual void Print
    831:    virtual void Shrink() override;
    835:    virtual std::string Trace() const override {return *Name(); }
    1126:    virtual void Check() const override;
    1130:    virtual void CheckAccessControl() const override;
    1134:    virtual void CheckIfHiding() const override;
    1138:    virtual void CheckIfUsed(Warning warning) const override;
    1142:    virtual void Display(std::ostream& stream,
    1147:    virtual void EnterBlock() override;
    1151:    virtual bool EnterScope() override;
    1155:    virtual CodeFile* GetDeclFile() const override;
    1159:    virtual CodeFile* GetDefnFile() const override;
    1163:    virtual Function* GetFunction()
    1169:    virtual CxxNamed* GetMate() const override { return mate_; }
    1173:    virtual QualName* GetQualName() const override { return name_.get(); }
    1178:    virtual size_t GetRange(size_t& begin, size_t& end) const override;
    1182:    virtual CxxScope* GetScope() const override;
    1190:    virtual CxxScope* GetTemplate() const override;
    1194:    virtual const TemplateParms* GetTemplateParms() const
    1199:    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
    1204:    virtual void GetUsages
    1209:    virtual bool IsConst() const override { return const_; }
    1213:    virtual bool IsImplemented() const override;
    1217:    virtual bool IsInTemplateInstance() const override;
    1221:    virtual bool IsStatic() const override { return static_; }
    1225:    virtual bool IsUnused() const override;
    1229:    virtual StackArg MemberToArg(StackArg& via, Cxx::Operator op) override;
    1233:    virtual const std::string* Name() const override { return name_->Name(); }
    1237:    virtual std::string QualifiedName(bool scopes, bool templates) const
    1242:    virtual void RecordUsage() const override;
    1246:    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
    1250:    virtual void Shrink() override;
    1254:    virtual Cxx::ItemType Type() const override { return Cxx::Function; }
    1259:    virtual std::string TypeString(bool arg) const override;
    1263:    virtual void WasCalled() override;
    1267:    virtual bool WasRead() override { ++calls_; return true; }
    1580:    virtual Function* GetFuncSpec() const override { return func_.get(); }
    1581:    virtual CxxNamed* Referent() const override { return func_.get(); }
    1582:    virtual CxxToken* RootType() const override { return func_.get(); }
    1586:    virtual void Print
    1588:    virtual void EnteringScope(const CxxScope* scope) override;
    1589:    virtual bool IsConst() const override;
    1590:    virtual const std::string* Name() const override;
    1591:    virtual std::string Trace() const override;
    1592:    virtual std::string TypeString(bool arg) const override;
    1593:    virtual void Shrink() override;
    1597:    virtual void AddArray(ArraySpecPtr& array) override;
    1598:    virtual TagCount Arrays() const override;
    1599:    virtual std::string AlignTemplateArg(const TypeSpec* thatArg) const override;
    1600:    virtual void DisplayArrays(std::ostream& stream) const override;
    1601:    virtual void DisplayTags(std::ostream& stream) const override;
    1602:    virtual TypeTags GetAllTags() const override;
    1603:    virtual TypeSpec* GetTypeSpec() const override;
    1604:    virtual bool HasArrayDefn() const override;
    1605:    virtual TagCount Ptrs(bool arrays) const override;
    1606:    virtual TagCount Refs() const override;
    1607:    virtual void RemoveRefs() override;
    1608:    virtual StackArg ResultType() const override;
    1609:    virtual void SetPtrs(TagCount count) override;
    1610:    virtual TypeTags* Tags() override;
    1611:    virtual const TypeTags* Tags() const override;
    1612:    virtual std::string TypeTagsString(const TypeTags& tags) const override;
    1617:    virtual void FindReferent() override;
    1618:    virtual TypeName* GetTemplateArgs() const override;
    1619:    virtual void Instantiating() const override;
    1620:    virtual TypeMatch MatchTemplateArg(const TypeSpec* that) const override;
    1621:    virtual bool ItemIsTemplateArg(const CxxScoped* item) const override;
    1622:    virtual bool MatchesExactly(const TypeSpec* that) const override;
    1623:    virtual TypeMatch MatchTemplate(TypeSpec* that, stringVector& tmpltParms,
    1629:    virtual void Check() const override;
    1630:    virtual void EnterArrays() const override;
    1631:    virtual void SetReferent
    1637:    virtual TypeSpec* Clone() const override;
  W082 Adjacent arguments have the same type
    328:    virtual void Promote
    1346:    static TypeMatch MatchTemplate
  W092 Function could be free
    1346:    static TypeMatch MatchTemplate
    1359:    static Function* InstantiateError
C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.cpp
  W004 C-style cast
    1250:    return (CxxToken*) this;
    1443:    return (CxxToken*) this;
  W007 Cast down the inheritance hierarchy
    92:          auto func = static_cast< Function* >(GetScope());
    264:    GetClass()->AddSubclass(static_cast< Class* >(Context::Scope()));
    298:    return static_cast< Class* >(name_->GetReferent());
    1431:          auto tf = (*t)->FindFriend(static_cast< const CxxScope* >(ref));
    1581:          space = static_cast< Namespace* >(item);
    1594:          cls = static_cast< Class* >(item);
    1633:             auto tdef = static_cast< Typedef* >(item);
    1638:             item = static_cast< CxxScoped* >(root);
    1913:       static_cast< CxxArea* >(scope)->AddFunc(func);
  W008 Cast removes const qualification
    1250:    return (CxxToken*) this;
    1443:    return (CxxToken*) this;
    1823:    const_cast< Friend* >(this)->FindReferent();
    1842:    const_cast< Friend* >(this)->SetScope(decl->GetSpace());
    1854:    const_cast< Friend* >(this)->SetScope(cls->GetScope());
  W106 Function does not invoke Debug::ft
    296: Class* BaseDecl::GetClass() const
    397: void CxxScoped::AddFiles(SetOfIds& imSet) const
    532: CodeFile* CxxScoped::GetImplFile() const
    541: size_t CxxScoped::GetRange(size_t& begin, size_t& end) const
    552: bool CxxScoped::IsAuto() const
    561: bool CxxScoped::IsConst() const
    570: bool CxxScoped::IsConstPtr() const
    579: bool CxxScoped::IsConstPtr(size_t n) const
    588: bool CxxScoped::IsDeclaredInFunction() const
    596: bool CxxScoped::IsDefinedIn(const CxxArea* area) const
    609: bool CxxScoped::IsIndirect() const
    1007: TypeSpec* Enum::GetTypeSpec() const
    1182: void Enumerator::RecordAccess(Cxx::Access access) const
    1246: CxxToken* Forward::AutoType() const
    1439: CxxToken* Friend::AutoType() const
    1705: Function* Friend::GetFunction() const
    1714: QualName* Friend::GetQualName() const
    1723: CxxNamed* Friend::GetReferent() const
    2206: TypeName* Typedef::GetTemplateArgs() const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxScoped.h
  W004 C-style cast
    160:    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
    464:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    571:    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
    992:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    1069:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W008 Cast removes const qualification
    160:    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
    464:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    571:    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
    992:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    1069:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
  W026 Unused argument
    1189/3:       (const std::string& fqName, size_t prefix, const CxxScope* scope) const;
  W042 Member could be private
    150:    bool IsSubscopeOf(const std::string& fqSuper) const;
  W043 Member could be protected
    51:    CodeFile* GetImplFile() const;
    86:    CxxScoped* FindInheritedName() const;
    91:    void DisplayFiles(std::ostream& stream) const;
    99:    virtual bool IsUnused() const { return false; }
  W075 Virtual function is public
    68:    virtual void AccessibilityTo(const CxxScope* scope, SymbolView* view) const;
    77:    virtual void RecordAccess(Cxx::Access access) const;
    95:    virtual void AddFiles(SetOfIds& imSet) const;
    99:    virtual bool IsUnused() const { return false; }
    164:    virtual void SetAccess(Cxx::Access access) override { access_ = access; }
    168:    virtual void SetScope(CxxScope* scope) override { scope_ = scope; }
    473:    virtual void CheckAccessControl() const override;
    869:    virtual bool ResolveTemplate
    1256:    virtual bool ResolveTypedef(Typedef* type, size_t n) const
  W078 Remove virtual tag: function is an override or final
    103:    virtual Cxx::Access GetAccess() const override { return access_; }
    108:    virtual size_t GetRange(size_t& begin, size_t& end) const override;
    112:    virtual CxxScope* GetScope() const override { return scope_; }
    116:    virtual bool InLine() const override { return false; }
    121:    virtual bool IsConst() const override;
    126:    virtual bool IsConstPtr() const override;
    131:    virtual bool IsConstPtr(size_t n) const override;
    136:    virtual bool IsDeclaredInFunction() const override;
    141:    virtual bool IsAuto() const override;
    146:    virtual bool IsIndirect() const override;
    155:    virtual bool IsSuperscopeOf
    160:    virtual CxxNamed* Referent() const override { return (CxxNamed*) this; }
    164:    virtual void SetAccess(Cxx::Access access) override { access_ = access; }
    168:    virtual void SetScope(CxxScope* scope) override { scope_ = scope; }
    237:    virtual CxxToken* AutoType() const override { return spec_.get(); }
    241:    virtual void Check() const override;
    245:    virtual void EnterBlock() override;
    249:    virtual void ExitBlock() override;
    254:    virtual bool EnterScope() override;
    258:    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
    262:    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
    266:    virtual void GetUsages
    271:    virtual bool InLine() const override { return true; }
    275:    virtual bool IsStatic() const override { return (name_ != THIS_STR); }
    279:    virtual bool IsUnused() const override { return ((reads_ + writes_) == 0); }
    283:    virtual const std::string* Name() const override { return &name_; }
    287:    virtual void Print
    292:    virtual bool SetNonConst() override;
    296:    virtual void Shrink() override;
    300:    virtual Cxx::ItemType Type() const override { return Cxx::Argument; }
    304:    virtual std::string TypeString(bool arg) const override;
    308:    virtual bool WasRead() override { ++reads_; return true; }
    312:    virtual bool WasWritten(const StackArg* arg, bool passed) override;
    316:    virtual CxxToken* RootType() const override { return spec_.get(); }
    369:    virtual bool EnterScope() override;
    373:    virtual Class* GetClass() const override;
    377:    virtual QualName* GetQualName() const override { return name_.get(); }
    381:    virtual void GetUsages
    386:    virtual bool InLine() const override { return true; }
    390:    virtual const std::string* Name() const override { return name_->Name(); }
    394:    virtual std::string QualifiedName(bool scopes, bool templates) const
    399:    virtual CxxNamed* Referent() const override;
    403:    virtual std::string ScopedName(bool templates) const override;
    407:    virtual void SetAccess(Cxx::Access access) override;
    411:    virtual void Shrink() override{ name_->Shrink(); }
    415:    virtual std::string TypeString(bool arg) const override;
    419:    virtual void FindReferent() override;
    464:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    468:    virtual void Check() const override;
    473:    virtual void CheckAccessControl() const override;
    477:    virtual void Display(std::ostream& stream,
    482:    virtual void EnterBlock() override;
    486:    virtual bool EnterScope() override;
    492:    virtual void ExitBlock() override;
    496:    virtual Numeric GetNumeric() const override { return Numeric::Enum; }
    501:    virtual TypeSpec* GetTypeSpec() const override;
    505:    virtual bool IsUnused() const override;
    509:    virtual const std::string* Name() const override { return &name_; }
    513:    virtual void RecordUsage() const override { AddUsage(); }
    517:    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
    521:    virtual void Shrink() override;
    525:    virtual Cxx::ItemType Type() const override { return Cxx::Enum; }
    529:    virtual std::string TypeString(bool arg) const override;
    534:    virtual bool WasWritten(const StackArg* arg, bool passed)
    571:    virtual CxxToken* AutoType() const override { return (CxxToken*) enum_; }
    575:    virtual void Check() const override;
    579:    virtual void Display(std::ostream& stream,
    584:    virtual void EnterBlock() override;
    588:    virtual bool EnterScope() override;
    594:    virtual void ExitBlock() override;
    598:    virtual bool WasRead() override { ++refs_; return true; }
    602:    virtual Numeric GetNumeric() const override { return Numeric::Enum; }
    607:    virtual void GetScopedNames(stringVector& names) const override;
    611:    virtual bool IsUnused() const override { return (refs_ == 0); }
    615:    virtual const std::string* Name() const override { return &name_; }
    619:    virtual std::string ScopedName(bool templates) const override;
    623:    virtual void RecordAccess(Cxx::Access access) const override;
    627:    virtual void RecordUsage() const override { AddUsage(); }
    631:    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
    635:    virtual void Shrink() override;
    639:    virtual Cxx::ItemType Type() const override { return Cxx::Enumerator; }
    643:    virtual std::string TypeString(bool arg) const override;
    679:    virtual CxxToken* AutoType() const override;
    683:    virtual void Check() const override;
    687:    virtual void Display(std::ostream& stream,
    692:    virtual void EnterBlock() override;
    696:    virtual bool EnterScope() override;
    700:    virtual QualName* GetQualName() const override { return name_.get(); }
    704:    virtual const TemplateParms* GetTemplateParms() const
    709:    virtual bool IsUnused() const override { return (users_ == 0); }
    713:    virtual const std::string* Name() const override { return name_->Name(); }
    717:    virtual CxxNamed* Referent() const override;
    721:    virtual std::string ScopedName(bool templates) const override;
    725:    virtual void SetAsReferent(const CxxNamed* user) override { ++users_; }
    729:    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
    733:    virtual void Shrink() override;
    737:    virtual Cxx::ItemType Type() const override { return Cxx::Forward; }
    741:    virtual std::string TypeString(bool arg) const override;
    745:    virtual CxxToken* RootType() const override { return Referent(); }
    807:    virtual CxxToken* AutoType() const override;
    811:    virtual void Check() const override;
    816:    virtual void Display(std::ostream& stream,
    821:    virtual void EnterBlock() override;
    825:    virtual bool EnterScope() override;
    829:    virtual Function* GetFunction() const override;
    833:    virtual QualName* GetQualName() const override;
    837:    virtual const TemplateParms* GetTemplateParms() const
    842:    virtual void GetUsages
    847:    virtual bool InLine() const override { return false; }
    851:    virtual bool IsUnused() const override { return (users_ == 0); }
    855:    virtual const std::string* Name() const override;
    859:    virtual std::string QualifiedName
    864:    virtual CxxNamed* Referent() const override;
    869:    virtual bool ResolveTemplate
    874:    virtual std::string ScopedName(bool templates) const override;
    879:    virtual void SetAsReferent(const CxxNamed* user) override;
    883:    virtual void SetTemplateParms(TemplateParmsPtr& parms) override;
    887:    virtual void Shrink() override;
    891:    virtual Cxx::ItemType Type() const override { return Cxx::Friend; }
    895:    virtual std::string TypeString(bool arg) const override;
    899:    virtual void FindReferent() override;
    903:    virtual bool ResolveForward(CxxScoped* decl, size_t n) const override;
    907:    virtual CxxToken* RootType() const override { return Referent(); }
    911:    virtual void SetReferent
    988:    virtual bool IsAuto() const override;
    992:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    996:    virtual void Display(std::ostream& stream,
    1001:    virtual void EnterBlock() override;
    1005:    virtual bool EnterScope() override { return true; }
    1009:    virtual NodeBase::id_t GetDeclFid() const override
    1014:    virtual Numeric GetNumeric() const override { return attrs_; }
    1018:    virtual const std::string* Name() const override { return &name_; }
    1022:    virtual void Shrink() override;
    1026:    virtual Cxx::ItemType Type() const override { return Cxx::Terminal; }
    1030:    virtual std::string TypeString(bool arg) const override { return type_; }
    1035:    virtual bool WasWritten(const StackArg* arg, bool passed)
    1069:    virtual CxxToken* AutoType() const override { return (CxxToken*) this; }
    1073:    virtual void Check() const override;
    1077:    virtual void Print
    1082:    virtual void Display(std::ostream& stream,
    1087:    virtual void EnterBlock() override;
    1091:    virtual bool EnterScope() override;
    1095:    virtual void ExitBlock() override;
    1099:    virtual Numeric GetNumeric() const override { return spec_->GetNumeric(); }
    1103:    virtual TypeSpec* GetTypeSpec() const override { return spec_.get(); }
    1107:    virtual TypeName* GetTemplateArgs() const override;
    1111:    virtual void GetUsages
    1116:    virtual bool IsUnused() const override { return (refs_ == 0); }
    1120:    virtual const std::string* Name() const override { return &name_; }
    1124:    virtual CxxNamed* Referent() const override;
    1128:    virtual void SetAsReferent(const CxxNamed* user) override { ++refs_; }
    1132:    virtual void Shrink() override;
    1136:    virtual Cxx::ItemType Type() const override { return Cxx::Typedef; }
    1140:    virtual std::string TypeString(bool arg) const override;
    1145:    virtual bool WasWritten(const StackArg* arg, bool passed)
    1150:    virtual CxxToken* RootType() const override { return spec_.get(); }
    1209:    virtual void Check() const override;
    1214:    virtual void Display(std::ostream& stream,
    1219:    virtual void EnterBlock() override;
    1223:    virtual bool EnterScope() override;
    1227:    virtual void ExitBlock() override;
    1231:    virtual QualName* GetQualName() const override { return name_.get(); }
    1235:    virtual bool InLine() const override { return false; }
    1239:    virtual bool IsUnused() const override { return (users_ == 0); }
    1243:    virtual const std::string* Name() const override { return name_->Name(); }
    1247:    virtual std::string QualifiedName(bool scopes, bool templates) const
    1252:    virtual CxxNamed* Referent() const override;
    1256:    virtual bool ResolveTypedef(Typedef* type, size_t n) const
    1261:    virtual std::string ScopedName(bool templates) const override;
    1265:    virtual void SetScope(CxxScope* scope) override;
    1269:    virtual void Shrink() override { name_->Shrink(); }
    1273:    virtual void FindReferent() override;
  W082 Adjacent arguments have the same type
    1179:    Using(QualNamePtr& name, bool space, bool added = false);
C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.cpp
  W106 Function does not invoke Debug::ft
    284: void CxxStatement::EnterBlock()
    364: bool Do::InLine() const
    574: bool For::InLine() const
    680: bool If::InLine() const
    1082: bool While::InLine() const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxStatement.h
  W078 Remove virtual tag: function is an override or final
    43:    virtual void EnterBlock() override;
    59:    virtual void Print
    61:    virtual void EnterBlock() override;
    62:    virtual void GetUsages
    64:    virtual void Shrink() override { ShrinkExpression(condition_); }
    81:    virtual void Print
    83:    virtual void EnterBlock() override { }
    95:    virtual void Display(std::ostream& stream,
    97:    virtual void EnterBlock() override;
    98:    virtual void GetUsages
    100:    virtual bool InLine() const override { return false; }
    101:    virtual void Shrink() override { ShrinkExpression(expr_); }
    117:    virtual void Check() const override;
    118:    virtual void Display(std::ostream& stream,
    120:    virtual void EnterBlock() override;
    121:    virtual void ExitBlock() override;
    122:    virtual void GetUsages
    124:    virtual bool InLine() const override { return false; }
    125:    virtual void Shrink() override;
    140:    virtual void Print
    142:    virtual void EnterBlock() override { }
    155:    virtual void Check() const override;
    156:    virtual void Print
    158:    virtual void Display(std::ostream& stream,
    160:    virtual void EnterBlock() override;
    161:    virtual void GetUsages
    163:    virtual bool InLine() const override;
    164:    virtual void Shrink() override;
    178:    virtual void Print
    180:    virtual void EnterBlock() override;
    181:    virtual void GetUsages
    183:    virtual void Shrink() override { ShrinkExpression(expr_); }
    200:    virtual void Check() const override;
    201:    virtual void Print
    203:    virtual void Display(std::ostream& stream,
    205:    virtual void EnterBlock() override;
    206:    virtual void ExitBlock() override;
    207:    virtual void GetUsages
    209:    virtual bool InLine() const override;
    210:    virtual void Shrink() override;
    229:    virtual void Check() const override;
    230:    virtual void Print
    232:    virtual void Display(std::ostream& stream,
    234:    virtual void EnterBlock() override;
    235:    virtual void GetUsages
    237:    virtual bool InLine() const override;
    238:    virtual void Shrink() override;
    239:    virtual Cxx::ItemType Type() const override { return Cxx::If; }
    255:    virtual void Display(std::ostream& stream,
    257:    virtual void EnterBlock() override;
    258:    virtual void ExitBlock() override;
    259:    virtual bool InLine() const override { return false; }
    260:    virtual void Shrink() override { name_.shrink_to_fit(); }
    274:    virtual void Print
    276:    virtual void Display(std::ostream& stream,
    278:    virtual void EnterBlock() override { }
    279:    virtual bool InLine() const override { return true; }
    280:    virtual Cxx::ItemType Type() const override { return Cxx::NoOp; }
    293:    virtual void Print
    295:    virtual void EnterBlock() override;
    296:    virtual void GetUsages
    298:    virtual void Shrink() override { ShrinkExpression(expr_); }
    314:    virtual void Check() const override;
    315:    virtual void Display(std::ostream& stream,
    317:    virtual void EnterBlock() override;
    318:    virtual void GetUsages
    320:    virtual bool InLine() const override { return false; }
    321:    virtual void Shrink() override;
    338:    virtual void Check() const override;
    339:    virtual void Display(std::ostream& stream,
    341:    virtual void EnterBlock() override;
    342:    virtual void ExitBlock() override;
    343:    virtual void GetUsages
    345:    virtual bool InLine() const override { return false; }
    346:    virtual void Shrink() override;
    362:    virtual void Check() const override;
    363:    virtual void Print
    365:    virtual void Display(std::ostream& stream,
    367:    virtual void EnterBlock() override;
    368:    virtual void GetUsages
    370:    virtual bool InLine() const override;
    371:    virtual void Shrink() override;
C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.cpp
  W082 Adjacent arguments have the same type
    41: size_t FindTemplateBegin(const string& name, size_t pos, size_t depth);
C:/Users/gregu/Documents/rsc/rsc/ct/CxxString.h
  W032 Unused function
    83:    std::string& Prefix(std::string&& scope);
  W082 Adjacent arguments have the same type
    102:    size_t CompareScopes
    140:    size_t Replace(std::string& code,
C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.cpp
  W007 Cast down the inheritance hierarchy
    384:    return static_cast< Macro* >(macros.front());
    423:       if((*s)->ScopedName(false) == name) return static_cast< CxxScope* >(*s);
    431:       if((*c)->ScopedName(false) == name) return static_cast< CxxScope* >(*c);
    439:       if(pos != string::npos) return static_cast< CxxScope* >(*s);
    445:       if(pos != string::npos) return static_cast< CxxScope* >(*c);
  W106 Function does not invoke Debug::ft
    91: template< typename T > void Erase(const CxxScoped* item,
    189: template< typename T > void ListSymbols(const string& name,
    226: void CxxSymbols::EraseClass(const Class* cls)
    233: void CxxSymbols::EraseData(const Data* data)
    240: void CxxSymbols::EraseEnum(const Enum* item)
    247: void CxxSymbols::EraseEtor(const Enumerator* etor)
    254: void CxxSymbols::EraseForw(const Forward* forw)
    261: void CxxSymbols::EraseFriend(const Friend* frnd)
    268: void CxxSymbols::EraseFunc(const Function* func)
    297: void CxxSymbols::EraseMacro(const Macro* macro)
    304: void CxxSymbols::EraseSpace(const Namespace* space)
    311: void CxxSymbols::EraseTerm(const Terminal* term)
    318: void CxxSymbols::EraseType(const Typedef* type)
    666: void CxxSymbols::InsertClass(Class* cls)
    673: void CxxSymbols::InsertData(Data* data)
    680: void CxxSymbols::InsertEnum(Enum* item)
    687: void CxxSymbols::InsertEtor(Enumerator* etor)
    694: void CxxSymbols::InsertForw(Forward* forw)
    701: void CxxSymbols::InsertFriend(Friend* frnd)
    708: void CxxSymbols::InsertFunc(Function* func)
    742: void CxxSymbols::InsertMacro(Macro* macro)
    749: void CxxSymbols::InsertSpace(Namespace* space)
    756: void CxxSymbols::InsertTerm(Terminal* term)
    763: void CxxSymbols::InsertType(Typedef* type)
C:/Users/gregu/Documents/rsc/rsc/ct/CxxSymbols.h
  W078 Remove virtual tag: function is an override or final
    160:    virtual void Shutdown(NodeBase::RestartLevel level) override;
    164:    virtual void Startup(NodeBase::RestartLevel level) override;
  W090 Function could be const
    122:    void InsertClass(Class* cls);
    123:    void InsertData(Data* data);
    124:    void InsertEtor(Enumerator* etor);
    125:    void InsertEnum(Enum* item);
    126:    void InsertForw(Forward* forw);
    127:    void InsertFriend(Friend* frnd);
    128:    void InsertFunc(Function* func);
    129:    void InsertMacro(Macro* macro);
    130:    void InsertSpace(Namespace* space);
    131:    void InsertTerm(Terminal* term);
    132:    void InsertType(Typedef* type);
    137:    void EraseClass(const Class* cls);
    138:    void EraseData(const Data* data);
    139:    void EraseEtor(const Enumerator* etor);
    140:    void EraseEnum(const Enum* item);
    141:    void EraseForw(const Forward* forw);
    142:    void EraseFriend(const Friend* frnd);
    143:    void EraseFunc(const Function* func);
    144:    void EraseMacro(const Macro* macro);
    145:    void EraseSpace(const Namespace* space);
    146:    void EraseTerm(const Terminal* term);
    147:    void EraseType(const Typedef* type);
    148:    void EraseLocal(const CxxScoped* name);
    152:    void EraseLocals();
  W110 Override of Base.Display not found
    85: class CxxSymbols: public NodeBase::Base
C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.cpp
  W007 Cast down the inheritance hierarchy
    420:    auto oper = static_cast< Operation* >(item.get());
    446:          auto ante = static_cast< Operation* >(prev.get());
    498:       auto oper = static_cast< Operation* >(item.get());
    531:    auto oper = static_cast< Operation* >(prev.get());
    560:       auto oper = static_cast< Operation* >(item.get());
    601:    auto oper = static_cast< Operation* >(item.get());
    624:       auto ante = static_cast< Operation* >(prev.get());
    720:    Context::PushOp(static_cast< Operation* >(StartOfExpr.get()));
    1149:       inClass = static_cast< Class* >(inRoot);
    1154:       outClass = static_cast< Class* >(outRoot);
    1179:    auto call = static_cast< Operation* >(args_.front().get());
    1575:       func = static_cast< Function* >(proc.item);
    1594:       cls = static_cast< Class* >(proc.item);
    1691:    auto cls = static_cast< Class* >(arg.item->Root());
    1741:       auto newCall = static_cast< Operation* >(args_.front().get());
    1761:    auto cls = static_cast< Class* >(spec.item->Root());
    1783:       auto ctorCall = static_cast< Operation* >(args_[2].get());
    1807:       cls = static_cast< Class* >(root);
    1991:       area = static_cast< Class* >(targ);
    1993:       static_cast< Class* >(targ)->Instantiate();
    2332:    auto cls = static_cast< Class* >(root);
    2371:       static_cast< QualName* >(arg2.item)->MemberAccessed(cls, mem);
    2394:          mem = static_cast< Function* >(mem)->InstantiateFunction(tmplt);
  W008 Cast removes const qualification
    308:    CxxToken* prev = const_cast< CxxToken* >(this);
  W106 Function does not invoke Debug::ft
    262: bool CxxToken::IsPointer(bool arrays) const
    353: void CxxUsageSets::AddBase(const CxxNamed* item)
    361: void CxxUsageSets::AddDirect(const CxxNamed* item)
    369: void CxxUsageSets::AddForward(const CxxNamed* item)
    380: void CxxUsageSets::AddIndirect(const CxxNamed* item)
    388: void CxxUsageSets::AddUser(const CxxNamed* item)
    734: Numeric FloatLiteral::GetNumeric() const
    795: Numeric IntLiteral::BaseNumeric() const
    938: CxxToken* Literal::AutoType() const
    963: CxxToken* Literal::RootType() const
    979: Cxx::ItemType Literal::Type() const
    2707: TypeSpec* StrLiteral::GetTypeSpec() const
    2714: CxxNamed* StrLiteral::Referent() const
C:/Users/gregu/Documents/rsc/rsc/ct/CxxToken.h
  W008 Cast removes const qualification
    291:    virtual CxxToken* RootType() const { return const_cast< CxxToken* >(this); }
  W032 Unused function
    373:       Tags& operator=(const Tags& that) = default;
    415:       Tags& operator=(const Tags& that) = default;
  W075 Virtual function is public
    79:    virtual Cxx::ItemType Type() const { return Cxx::Undefined; }
    85:    virtual const std::string* Name() const;
    89:    virtual QualName* GetQualName() const { return nullptr; }
    94:    virtual std::string TypeString(bool arg) const
    99:    virtual TypeSpec* GetTypeSpec() const { return nullptr; }
    103:    virtual bool IsConst() const { return false; }
    107:    virtual bool IsConstPtr() const { return false; }
    111:    virtual bool IsConstPtr(size_t n) const { return false; }
    116:    virtual bool IsAuto() const { return false; }
    121:    virtual bool IsIndirect() const { return false; }
    125:    virtual bool IsInitializing() const { return false; }
    130:    virtual CxxToken* AutoType() const { return nullptr; }
    135:    virtual Namespace* GetSpace() const { return nullptr; }
    140:    virtual Class* GetClass() const { return nullptr; }
    145:    virtual Class* Declarer() const { return GetClass(); }
    151:    virtual TypeName* GetTemplateArgs() const;
    156:    virtual Numeric GetNumeric() const { return Numeric::Nil; }
    160:    virtual void GetConvertibleTypes(StackArgVector& types) { }
    165:    virtual CxxNamed* Referent() const;
    171:    virtual void EnterBlock();
    176:    virtual void ExitBlock() { }
    182:    virtual bool AppendUnary() { return false; }
    186:    virtual CxxToken* Back() { return this; }
    191:    virtual bool WasRead() { return false; }
    203:    virtual bool WasWritten(const StackArg* arg, bool passed);
    208:    virtual bool SetNonConst() { return true; }
    213:    virtual void WasMutated(const StackArg* arg) { }
    219:    virtual void RecordUsage() const { }
    224:    virtual void GetUsages(const CodeFile& file, CxxUsageSets& symbols) const { }
    228:    virtual void Check() const { }
    232:    virtual std::string Trace() const { return NodeBase::EMPTY_STR; }
    236:    virtual bool InLine() const { return true; }
    241:    virtual void Print
    247:    virtual void Shrink() { }
  W076 Virtual function is overloaded
    107:    virtual bool IsConstPtr() const { return false; }
    111:    virtual bool IsConstPtr(size_t n) const { return false; }
  W078 Remove virtual tag: function is an override or final
    270:    virtual void Display(std::ostream& stream,
    311:    virtual CxxToken* AutoType() const override;
    315:    virtual void EnterBlock() override;
    319:    virtual const std::string* Name() const override;
    323:    virtual std::string Trace() const override;
    327:    virtual Cxx::ItemType Type() const override;
    335:    virtual CxxToken* RootType() const override;
    379:    virtual void Print
    381:    virtual CxxNamed* Referent() const override;
    382:    virtual std::string TypeString(bool arg) const override;
    384:    virtual Numeric GetNumeric() const override;
    421:    virtual void Print
    423:    virtual CxxNamed* Referent() const override;
    424:    virtual std::string TypeString(bool arg) const override;
    426:    virtual Numeric GetNumeric() const override;
    441:    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
    443:    virtual CxxNamed* Referent() const override;
    444:    virtual std::string TypeString(bool arg) const override { return BOOL_STR; }
    446:    virtual Numeric GetNumeric() const override { return Numeric::Bool; }
    460:    virtual void Print
    462:    virtual CxxNamed* Referent() const override;
    463:    virtual std::string TypeString(bool arg) const override { return CHAR_STR; }
    465:    virtual Numeric GetNumeric() const override { return Numeric::Char; }
    480:    virtual TypeSpec* GetTypeSpec() const override;
    481:    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
    483:    virtual CxxNamed* Referent() const override;
    484:    virtual void Shrink() override;
    485:    virtual std::string TypeString(bool arg) const override { return "char*"; }
    489:    virtual Numeric GetNumeric() const override { return Numeric::Pointer; }
    503:    virtual void Print(std::ostream& stream, const NodeBase::Flags& options)
    505:    virtual bool IsConstPtr() const override { return true; }
    506:    virtual bool IsConstPtr(size_t n) const override { return true; }
    507:    virtual CxxNamed* Referent() const override;
    508:    virtual std::string TypeString(bool arg)
    511:    virtual Numeric GetNumeric() const override { return Numeric::Pointer; }
    571:    virtual bool AppendUnary() override;
    576:    virtual CxxToken* Back() override;
    580:    virtual void Print
    585:    virtual void EnterBlock() override;
    589:    virtual void GetUsages
    594:    virtual void Shrink() override;
    598:    virtual std::string Trace() const override;
    602:    virtual Cxx::ItemType Type() const override { return Cxx::Operation; }
    696:    virtual void Print
    698:    virtual void EnterBlock() override { }
    699:    virtual Cxx::ItemType Type() const override { return Cxx::Elision; }
    712:    virtual void Print
    714:    virtual void EnterBlock() override;
    715:    virtual void GetUsages
    717:    virtual void Shrink() override { ShrinkExpression(expr_); }
    733:    virtual void Print
    735:    virtual void EnterBlock() override;
    736:    virtual void GetUsages
    738:    virtual void Shrink() override;
    784:    virtual CxxToken* Back() override;
    788:    virtual void Print
    794:    virtual void EnterBlock() override;
    798:    virtual void GetUsages
    803:    virtual void Shrink() override;
    807:    virtual std::string Trace() const override;
    856:    virtual void Print
    861:    virtual void EnterBlock() override;
    865:    virtual void GetUsages
    870:    virtual void Shrink() override { ShrinkExpression(expr_); }
    874:    virtual std::string TypeString(bool arg) const override;
  W082 Adjacent arguments have the same type
    637:    Function* FindNewOrDelete(const StackArg& arg, bool del, bool& pod) const;
  W090 Function could be const
    176:    virtual void ExitBlock() { }
  W092 Function could be free
    285:    static void ShrinkExpression(const ExprPtr& expr);
    488:    static TypeSpecPtr CreateRef();
    626:    static void PushType(const std::string& name);
  W114 Function could be tagged noexcept
    53:    CxxUsageSets() = default;  // create empty CxxNamedSets
    371:       Tags(Radix r, bool u, Size s) : radix_(r), unsigned_(u), size_(s) { }
    372:       Tags(const Tags& that) = default;
    373:       Tags& operator=(const Tags& that) = default;
    413:       Tags(bool e, Size s) : exp_(e), size_(s) { }
    414:       Tags(const Tags& that) = default;
    415:       Tags& operator=(const Tags& that) = default;
C:/Users/gregu/Documents/rsc/rsc/ct/Editor.cpp
  W005 Functional cast
    697:    *cli.obuf << ": " << Warning(log.warning);
  W007 Cast down the inheritance hierarchy
    231:    auto defn = static_cast< const Function* >(log.item);
    364:    DebugFtCode(static_cast< const Function* >(log.item), defn, call);
    1035:    auto etor = static_cast< const Enumerator* >(log.item);
    1077:    auto eNum = static_cast< const Enum* >(etor->AutoType());
    1353:    auto func = static_cast< const Function* >(log.item);
    1428:    auto cls = static_cast< const Class* >(log.item);
    2299:    DebugFtCode(static_cast< const Function* >(log.item), defn, call);
    2934:       ns = static_cast< const Namespace* >(ref)->OuterSpace();
    3326:    auto func = static_cast< const Function* >(log.item);
    3450:    auto defn = static_cast< const Function* >(log.item);
    3562:    auto func = static_cast< const Function* >(log.item);
  W022 Add using statement
    1: std::string
  W097 Line indentation is not a multiple of the standard value
    191:        tagpos = loc.iter->code.find(tag, tagpos + 1))
    266:        loc.pos != string::npos;
    267:        loc = FindWord(loc.iter, loc.pos + 1, *defnName, &range))
    967:        tag.pos != string::npos;
    968:        tag = FindWord(tag.iter, tag.pos + 1, CONST_STR))
    1137:        next->code, 0, next->code.size() - 1)) return false;
    1303:        arg = FindWord(arg.iter, arg.pos + 1, VOID_STR))
    2967:           loc = FindWord(loc.iter, loc.pos, name))
  W102 Line length exceeds the standard maximum
    2228:       (lpar.iter->code.find_first_not_of(WhitespaceChars, lpar.pos + 1) == rpar))
  W106 Function does not invoke Debug::ft
    81: bool IsBlank(char c)
    88: bool IsWordChar(char c)
    2087: LineType Editor::GetLineType(const Iter& iter) const
    2773: bool Editor::IsSorted1(const SourceLine& line1, const SourceLine& line2)
    2780: bool Editor::IsSorted2(const string& line1, const string& line2)
    2911: void Editor::PushBack(const string& code)
C:/Users/gregu/Documents/rsc/rsc/ct/Editor.h
  W020 Using statement in header
    38: using std::string;
    39: using NodeBase::word;
  W032 Unused function
    249:    CodeLocation PrevPos(const CodeLocation& curr);
  W058 Default copy constructor invoked
    237:          iter(i), pos(string::npos) { }
    240:          iter(i), pos(p) { }
  W082 Adjacent arguments have the same type
    415:    word InsertNamespaceForward(const Iter& iter,
    443:    static void DebugFtCode
  W088 Argument could be const
    293/4:       (Iter iter, size_t pos, const string& id, size_t* range = nullptr);
  W092 Function could be free
    402:    string DemangleInclude(string code) const;
    457:    static bool IsSorted2(const string& line1, const string& line2);
C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.cpp
  W005 Functional cast
    148:          type = LibTokenType(i);
  W092 Function could be free
    52:    static const OperatorInfo* GetAttrs(LibTokenType type);
  W099 Line contains adjacent spaces
    94:    OperatorInfo(" ",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpNil
    95:    OperatorInfo("(",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpLeftPar
    96:    OperatorInfo(")",  0, ERR_SET,  ERR_SET,  ERR_SET),   // OpRightPar
    97:    OperatorInfo("&",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpIntersection
    98:    OperatorInfo("-",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpDifference
    99:    OperatorInfo("|",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpUnion
    100:    OperatorInfo("|",  2, ANY_SET,  ANY_SET,  ANY_SET),   // OpAutoUnion
    101:    OperatorInfo("d",  1, DIR_SET,  FILE_SET, ERR_SET),   // OpDirectories
    102:    OperatorInfo("f",  1, FILE_SET, DIR_SET,  ERR_SET),   // OpFiles
  W106 Function does not invoke Debug::ft
    134: const OperatorInfo* OperatorInfo::GetAttrs(LibTokenType type)
    142: bool OperatorInfo::GetType(const string& op, LibTokenType& type)
C:/Users/gregu/Documents/rsc/rsc/ct/Interpreter.h
  W092 Function could be free
    62:    static bool IsOperator(const std::string& s);
  W110 Override of Base.Display not found
    44: class Interpreter : public NodeBase::Temporary
C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.cpp
  W005 Functional cast
    1178:          oper = Cxx::Operator(match->second);
  W007 Cast down the inheritance hierarchy
    1812:          auto def = static_cast< Define* >(item);
    1816:             auto code = const_cast< string* >(source_);
  W008 Cast removes const qualification
    1816:             auto code = const_cast< string* >(source_);
  W106 Function does not invoke Debug::ft
    57: IndentRule ClassifyIndent(string& id)
    705: void Lexer::GetDepth(size_t line, int8_t& depth, bool& cont) const
    873: size_t Lexer::GetLineNum(size_t pos) const
    897: size_t Lexer::GetLineStart(size_t line) const
    970: bool Lexer::GetNthLine(size_t n, string& s) const
    1868: void Lexer::SetDepth(size_t& start, int8_t depth1, int8_t depth2)
  W117 Line can merge with the next line and be under the length limit
    960:          (Keywords->lower_bound(name) == Keywords->cend()))
C:/Users/gregu/Documents/rsc/rsc/ct/Lexer.h
  W042 Member could be private
    189:    std::string NextOperator() const;
  W047 Data is init-only
    475:    static bool Initialized;
  W082 Adjacent arguments have the same type
    197:    size_t FindClosing(char lhc, char rhc, size_t pos = std::string::npos) const;
    383:    void SetDepth(size_t& start, int8_t depth1, int8_t depth2);
  W114 Function could be tagged noexcept
    49:    ~Lexer() = default;
    401:       explicit LineInfo(size_t start) :
C:/Users/gregu/Documents/rsc/rsc/ct/Library.cpp
  W007 Cast down the inheritance hierarchy
    95:       (static_cast< CfgStrParm* >(reg->FindParm("SourcePath")));
C:/Users/gregu/Documents/rsc/rsc/ct/Library.h
  W042 Member could be private
    67:    CodeDir* FindDir(const std::string& name) const;
    88:    LibrarySet* FindVar(const std::string& name) const;
  W048 Data is write-only
    225:    LibraryVarSet* varSet_;
  W078 Remove virtual tag: function is an override or final
    154:    virtual void Display(std::ostream& stream,
    159:    virtual void Shutdown(NodeBase::RestartLevel level) override;
    163:    virtual void Startup(NodeBase::RestartLevel level) override;
  W082 Adjacent arguments have the same type
    62:    NodeBase::word Import
    104:    NodeBase::word Assign(const std::string& name,
  W090 Function could be const
    72:    CodeFile* EnsureFile(const std::string& file, CodeDir* dir = nullptr);
    104:    NodeBase::word Assign(const std::string& name,
C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.cpp
  W106 Function does not invoke Debug::ft
    103: word LibraryErrSet::Error(string& expl) const
C:/Users/gregu/Documents/rsc/rsc/ct/LibraryErrSet.h
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    61:    virtual NodeBase::word Check
    66:    virtual NodeBase::word Count(std::string& result) const override;
    70:    virtual NodeBase::word Countlines(std::string& result) const override;
    74:    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
    79:    virtual NodeBase::word Format(std::string& expl) const override;
    83:    virtual LibSetType GetType() const override { return ERR_SET; }
    87:    virtual NodeBase::word List
    92:    virtual NodeBase::word Parse
    97:    virtual NodeBase::word PreAssign(std::string& expl) const override;
    101:    virtual NodeBase::word Scan(std::ostream& stream,
    106:    virtual NodeBase::word Show(std::string& result) const override;
    110:    virtual NodeBase::word Sort
    115:    virtual NodeBase::word Trim
C:/Users/gregu/Documents/rsc/rsc/ct/LibraryItem.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.cpp
  W006 reinterpret_cast
    281:    auto fake = reinterpret_cast< const LibrarySet* >(&local);
  W106 Function does not invoke Debug::ft
    76: LibrarySet* LibrarySet::AffectedBy() const
    83: LibrarySet* LibrarySet::Affecters() const
    90: LibrarySet* LibrarySet::Assign(LibrarySet* rhs)
    108: LibrarySet* LibrarySet::CommonAffecters() const
    155: LibrarySet* LibrarySet::Create(const string& name, SetOfIds* set) const
    162: LibrarySet* LibrarySet::Difference(const LibrarySet* rhs) const
    169: LibrarySet* LibrarySet::Directories() const
    188: LibrarySet* LibrarySet::FileName(const LibrarySet* that) const
    195: LibrarySet* LibrarySet::Files() const
    202: LibrarySet* LibrarySet::FileType(const LibrarySet* that) const
    231: LibrarySet* LibrarySet::FoundIn(const LibrarySet* that) const
    250: LibrarySet* LibrarySet::Implements() const
    257: LibrarySet* LibrarySet::Intersection(const LibrarySet* rhs) const
    264: bool LibrarySet::IsReadOnly() const
    271: bool LibrarySet::IsTemporary() const
    298: LibrarySet* LibrarySet::MatchString(const LibrarySet* that) const
    305: LibrarySet* LibrarySet::NeededBy() const
    312: LibrarySet* LibrarySet::Needers() const
    321: word LibrarySet::NotImplemented(string& expl) const
    347: LibrarySet* LibrarySet::OpError() const
    463: LibrarySet* LibrarySet::Union(const LibrarySet* rhs) const
    470: LibrarySet* LibrarySet::UsedBy(bool self) const
    477: LibrarySet* LibrarySet::Users(bool self) const
C:/Users/gregu/Documents/rsc/rsc/ct/LibrarySet.h
  W042 Member could be private
    69:    bool IsReadOnly() const;
    178:    static ptrdiff_t LinkDiff();
  W043 Member could be protected
    156:    virtual LibrarySet* Create(const std::string& name, SetOfIds* set) const;
  W053 Data could be const
    226:    NodeBase::Q2Link link_;
  W065 Base class virtual destructor is not public
    194:    virtual ~LibrarySet();
  W075 Virtual function is public
    77:    virtual LibSetType GetType() const;
    83:    virtual NodeBase::word Check(std::ostream* stream, std::string& expl) const;
    89:    virtual NodeBase::word Count(std::string& result) const;
    95:    virtual NodeBase::word Countlines(std::string& result) const;
    101:    virtual NodeBase::word Fix(NodeBase::CliThread& cli,
    107:    virtual NodeBase::word Format(std::string& expl) const;
    113:    virtual NodeBase::word List(std::ostream& stream, std::string& expl) const;
    121:    virtual NodeBase::word Parse
    128:    virtual NodeBase::word Scan(std::ostream& stream,
    135:    virtual NodeBase::word Show(std::string& result) const;
    141:    virtual NodeBase::word Sort(std::ostream& stream, std::string& expl) const;
    147:    virtual NodeBase::word Trim(std::ostream& stream, std::string& expl) const;
    156:    virtual LibrarySet* Create(const std::string& name, SetOfIds* set) const;
    157:    virtual LibrarySet* Assign(LibrarySet* rhs);
    158:    virtual LibrarySet* Intersection(const LibrarySet* rhs) const;
    159:    virtual LibrarySet* Difference(const LibrarySet* rhs) const;
    160:    virtual LibrarySet* Union(const LibrarySet* rhs) const;
    161:    virtual LibrarySet* Directories() const;
    162:    virtual LibrarySet* Files() const;
    163:    virtual LibrarySet* FileName(const LibrarySet* that) const;
    164:    virtual LibrarySet* FileType(const LibrarySet* that) const;
    165:    virtual LibrarySet* MatchString(const LibrarySet* that) const;
    166:    virtual LibrarySet* FoundIn(const LibrarySet* that) const;
    167:    virtual LibrarySet* Implements() const;
    168:    virtual LibrarySet* UsedBy(bool self) const;
    169:    virtual LibrarySet* Users(bool self) const;
    170:    virtual LibrarySet* AffectedBy() const;
    171:    virtual LibrarySet* Affecters() const;
    172:    virtual LibrarySet* CommonAffecters() const;
    173:    virtual LibrarySet* NeededBy() const;
    174:    virtual LibrarySet* Needers() const;
  W078 Remove virtual tag: function is an override or final
    182:    virtual void Display(std::ostream& stream,
  W092 Function could be free
    198:    static NodeBase::word Counted(std::string& result, const size_t* count);
    203:    static NodeBase::word Shown(std::string& result);
C:/Users/gregu/Documents/rsc/rsc/ct/LibraryTypes.h
  W114 Function could be tagged noexcept
    58:    FileLevel(NodeBase::id_t f, size_t l) : fid(f), level(l) { }
C:/Users/gregu/Documents/rsc/rsc/ct/LibraryVarSet.h
  W078 Remove virtual tag: function is an override or final
    44:    virtual NodeBase::word Count(std::string& result) const override;
    48:    virtual LibSetType GetType() const override { return VAR_SET; }
    52:    virtual NodeBase::word Show(std::string& result) const override;
C:/Users/gregu/Documents/rsc/rsc/ct/Parser.cpp
  W007 Cast down the inheritance hierarchy
    365:    auto op = static_cast< Operation* >(call.get());
    618:    auto brace = static_cast< BraceInit* >(token.get());
    691:    auto cast = static_cast< Operation* >(token.get());
    730:    auto c = static_cast< Catch* >(statement.get());
    828:    static_cast< ClassData* >(data.get())->SetMutable(mute);
    829:    static_cast< ClassData* >(data.get())->SetWidth(width);
    989:    auto cond = static_cast< Operation* >(token.get());
    1268:    auto cast = static_cast< Operation* >(token.get());
    1375:    auto op = static_cast< Operation* >(token.get());
    1400:    auto delOp = static_cast< Operation* >(token.get());
    1428:    auto d = static_cast< Do* >(statement.get());
    1633:    auto f = static_cast< For* >(statement.get());
    1734:       static_cast< FuncData* >(data.get())->SetExpression(expr);
    1784:          curr = static_cast< FuncData* >(data.get());
    1790:          curr = static_cast< FuncData* >(subseq.get());
    2060:             static_cast< If* >(first)->SetElseIf();
    2066:    auto i = static_cast< If* >(statement.get());
    2228:    auto inner = static_cast< Namespace* >(outer)->EnsureNamespace(name);
    2270:    auto newOp = static_cast< Operation* >(token.get());
    2345:    auto op = static_cast< Operation* >(token.get());
    2733:    static_cast< Return* >(statement.get())->AddExpr(expr);
    2779:    auto op = static_cast< Operation* >(token.get());
    2927:    auto op = static_cast< Operation* >(token.get());
    2953:    auto s = static_cast< Switch* >(statement.get());
    3036:    auto op = static_cast< Operation* >(token.get());
    3072:    auto t = static_cast< Try* >(statement.get());
    3131:    auto op = static_cast< Operation* >(token.get());
    3376:    auto w = static_cast< While* >(statement.get());
    3760:          auto op = static_cast< Operation* >(token)->Op();
C:/Users/gregu/Documents/rsc/rsc/ct/Parser.h
  W082 Adjacent arguments have the same type
    476:    static bool SetCompoundType
    522:    bool GetParExpr(ExprPtr& expr, bool omit, bool opt = false);
  W088 Argument could be const
    323/1:    bool GetStatements(BlockPtr& block, bool braced);
    412/1:    bool GetFuncSpecial(FunctionPtr& func);
    425/1:    bool GetCtorInit(FunctionPtr& func);
    444/1:    bool GetArguments(FunctionPtr& func);
    477/1:       (QualNamePtr& name, Cxx::Type type, int size, int sign);
    537/1:    bool GetNum(ExprPtr& expr);
    538/1:    bool GetChar(ExprPtr& expr);
    539/1:    bool GetStr(ExprPtr& expr);
    549/1:    bool GetCast(ExprPtr& expr);
    550/1:    bool GetPrecedence(ExprPtr& expr);
    557/1:    bool HandleTilde(ExprPtr& expr, size_t start);
    561/1:    bool GetSubscript(ExprPtr& expr);
    570/1:    bool GetCxxCast(ExprPtr& expr, Cxx::Operator op);
    571/1:    bool GetConditional(ExprPtr& expr);
    572/1:    bool GetDefined(ExprPtr& expr);
    573/1:    bool GetDelete(ExprPtr& expr, Cxx::Operator op);
    574/1:    bool GetNew(ExprPtr& expr, Cxx::Operator op);
    575/1:    bool GetNoExcept(ExprPtr& expr);
    576/1:    bool GetSizeOf(ExprPtr& expr);
    577/1:    bool GetThrow(ExprPtr& expr);
    578/1:    bool GetTypeId(ExprPtr& expr);
  W092 Function could be free
    476:    static bool SetCompoundType
    653:    static std::string Indent();
C:/Users/gregu/Documents/rsc/rsc/ct/SetOperations.h
  W082 Adjacent arguments have the same type
    33:    void SetDifference
    42:    void SetIntersection
    51:    void SetUnion
  W117 Line can merge with the next line and be under the length limit
    51:    void SetUnion
C:/Users/gregu/Documents/rsc/rsc/dip/Adjudicator.cpp
  W097 Line indentation is not a multiple of the standard value
    113:           a != orders.adjustments.end(); ++a)
    423:           a != orders.adjustments.end(); ++a)
    739:        a != attacks.upper_bound(to_prov); ++a)
    953:                     (client.order_type_copy != MOVE_BY_CONVOY_ORDER))
    1007:              f != subverted_army.convoyers.end(); ++f)
    1525:        a != attacks.upper_bound(province); ++a)
    1689:                  (attacker.order_type_copy != MOVE_BY_CONVOY_ORDER))
    2046:        b != balanced_head_to_heads.end(); ++b)
    2143:                 f != subverting_army.convoyers.end(); ++f)
    2146:                    a != attacks.upper_bound(*f); ++a)
    2200:        u != unbalanced_head_to_heads.end(); ++u)
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.cpp
  W006 reinterpret_cast
    225:    auto em = reinterpret_cast< EM_Message* >(buff->PayloadPtr());
    548:    auto& dm = reinterpret_cast< const DM_Message& >(message);
    549:    auto tokens = reinterpret_cast< const Token* >(&dm.tokens);
    679:    auto& em = reinterpret_cast< const EM_Message& >(message);
    1415:       auto& rm = reinterpret_cast< const RM_Message& >(message);
    2253:    auto bm = reinterpret_cast< DipMessage* >(buff->PayloadPtr());
    2326:    auto im = reinterpret_cast< IM_Message* >(buff->PayloadPtr());
    2483:    auto dm = reinterpret_cast< DM_Message* >(buff->PayloadPtr());
    2487:    message.get_tokens(reinterpret_cast< Token* >(&dm->tokens), count);
  W047 Data is init-only
    2259:    FunctionGuard guard(FunctionGuard::MakeUnpreemptable, true);
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    453: BaseBot::StartupResult BaseBot::initialise(const StartupParameters& parameters)
    460: BaseBot* BaseBot::instance()
  W117 Line can merge with the next line and be under the length limit
    1855:          (press->message == contents))
C:/Users/gregu/Documents/rsc/rsc/dip/BaseBot.h
  W020 Using statement in header
    40: using namespace NodeBase;
  W026 Unused argument
    91/1:    virtual bool process_command_line_parameter(char token, std::string& value);
    91/2:    virtual bool process_command_line_parameter(char token, std::string& value);
    191/1:    virtual StartupResult initialise(const StartupParameters& parameters);
    234/1:    virtual void process_mis_message(const TokenMessage& message);
    264/1:    virtual void process_tme_message(const TokenMessage& message);
    273/1:    virtual void process_not_ccd_message(const TokenMessage& message,
    279/1:       (const TokenMessage& message, const TokenMessage& parameters);
    279/2:       (const TokenMessage& message, const TokenMessage& parameters);
    299/1:       (const TokenMessage& message, const TokenMessage& parameters);
    299/2:       (const TokenMessage& message, const TokenMessage& parameters);
    304/2:       (const TokenMessage& message, const TokenMessage& parameters);
    309/2:       (const TokenMessage& message, const TokenMessage& parameters);
    314/2:       (const TokenMessage& message, const TokenMessage& parameters);
    319/2:       (const TokenMessage& message, const TokenMessage& parameters);
    324/2:       (const TokenMessage& message, const TokenMessage& parameters);
    329/2:       (const TokenMessage& message, const TokenMessage& parameters);
    334/2:       (const TokenMessage& message, const TokenMessage& parameters);
    339/2:       (const TokenMessage& message, const TokenMessage& parameters);
    344/2:       (const TokenMessage& message, const TokenMessage& parameters);
    349/2:       (const TokenMessage& message, const TokenMessage& parameters);
    354/2:       (const TokenMessage& message, const TokenMessage& parameters);
    359/1:       (const TokenMessage& message, const TokenMessage& parameters);
    359/2:       (const TokenMessage& message, const TokenMessage& parameters);
    364/1:       (const TokenMessage& message, const TokenMessage& parameters);
    364/2:       (const TokenMessage& message, const TokenMessage& parameters);
    369/2:       (const TokenMessage& message, const TokenMessage& parameters);
    374/2:       (const TokenMessage& message, const TokenMessage& parameters);
    379/1:       (const TokenMessage& message, const TokenMessage& parameters);
    379/2:       (const TokenMessage& message, const TokenMessage& parameters);
    384/1:       (const TokenMessage& message, const TokenMessage& parameters);
    384/2:       (const TokenMessage& message, const TokenMessage& parameters);
    390/1:       (const TokenMessage& message, const TokenMessage& parameters);
    390/2:       (const TokenMessage& message, const TokenMessage& parameters);
    395/1:       (const TokenMessage& message, const TokenMessage& parameters);
    395/2:       (const TokenMessage& message, const TokenMessage& parameters);
    400/1:       (const TokenMessage& message, const TokenMessage& parameters);
    400/2:       (const TokenMessage& message, const TokenMessage& parameters);
    405/1:       (const TokenMessage& message, const TokenMessage& parameters);
    405/2:       (const TokenMessage& message, const TokenMessage& parameters);
    411/1:       (const TokenMessage& message, const TokenMessage& parameters);
    411/2:       (const TokenMessage& message, const TokenMessage& parameters);
    416/1:       (const TokenMessage& message, const TokenMessage& parameters);
    416/2:       (const TokenMessage& message, const TokenMessage& parameters);
    421/1:       (const TokenMessage& message, const TokenMessage& parameters);
    421/2:       (const TokenMessage& message, const TokenMessage& parameters);
    426/1:       (const TokenMessage& message, const TokenMessage& parameters);
    426/2:       (const TokenMessage& message, const TokenMessage& parameters);
    431/1:    virtual void process_unexpected_not_message(const TokenMessage& message);
    436/1:    virtual void process_unexpected_rej_message(const TokenMessage& message);
    441/1:    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
    446/1:    virtual void process_unexpected_yes_message(const TokenMessage& message);
    451/1:    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
    476/1:    virtual void process_mdf_message(const TokenMessage& message);
    480/1:    virtual void process_ord_message(const TokenMessage& message);
    484/1:    virtual void process_sco_message(const TokenMessage& message);
    488/1:    virtual void process_now_message(const TokenMessage& message);
    503/1:       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
    503/2:       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
    503/3:       (bool is_broadcast, TokenMessage& receiving_powers, TokenMessage& press);
    513/1:    virtual void report_close(ProtocolError error);
    613/1:    void process_fm_message(const DipMessage& message);
  W030 Unused enumerator
    62:       FIRST_BOT_SPECIFIC_ERROR
  W032 Unused function
    111:    void set_report(bool onoff) { report_ = onoff; }
    120:    void send_orders_to_server();
    124:    void send_nme(fixed_string name, fixed_string version);
    135:    bool map_requested() const { return map_requested_; }
    143:    void send_broadcast_to_server(TokenMessage broadcast_message);
    144:    void send_press_to_server(const TokenMessage& press_to,
    150:    void send_bm_message(const byte_t* payload, uint16_t length) const;
  W042 Member could be private
    55:    enum StartupResult
    67:    BaseBot();
    116:    bool send_to_server(const TokenMessage& message);
    130:    void request_map();
    155:    void disconnect_from_server(ProtocolError error = GRACEFUL_CLOSE);
    162:    TokenMessage active_powers(bool self = false) const;
    169:    TokenMessage surviving_powers(bool self = false) const;
    174:    bool queue_event(BotEvent event, secs_t secs);
    179:    void cancel_event(BotEvent event);
    191:    virtual StartupResult initialise(const StartupParameters& parameters);
    196:    virtual void set_title(token_t msg, bool rcvd);
    201:    virtual void send_nme_or_obs();
    206:    virtual void process_ccd_message
    212:    virtual void process_drw_message(const TokenMessage& message);
    217:    virtual const std::vector< Token >& get_try_tokens() const;
    222:    virtual void process_frm_message(const TokenMessage& message);
    226:    virtual void process_huh_message(const TokenMessage& message);
    230:    virtual void process_lod_message(const TokenMessage& message);
    234:    virtual void process_mis_message(const TokenMessage& message);
    238:    virtual void process_off_message(const TokenMessage& message);
    243:    virtual void process_out_message(const TokenMessage& message);
    247:    virtual void process_prn_message(const Token* message, size_t size);
    251:    virtual void process_smr_message(const TokenMessage& message);
    255:    virtual void process_sve_message(const TokenMessage& message);
    260:    virtual void process_thx_message(const TokenMessage& message);
    264:    virtual void process_tme_message(const TokenMessage& message);
    268:    virtual void process_adm_message(const TokenMessage& message);
    273:    virtual void process_not_ccd_message(const TokenMessage& message,
    278:    virtual void process_not_tme_message
    285:    virtual bool get_reconnect_details(Token& power, int& passcode) const;
    293:    virtual uint8_t reconnection_delay();
    298:    virtual void process_rej_nme_message
    303:    virtual void process_rej_iam_message
    308:    virtual void process_rej_hlo_message
    313:    virtual void process_rej_now_message
    318:    virtual void process_rej_sco_message
    323:    virtual void process_rej_hst_message
    328:    virtual void process_rej_sub_message
    333:    virtual void process_rej_gof_message
    338:    virtual void process_rej_ord_message
    343:    virtual void process_rej_tme_message
    348:    virtual void process_rej_drw_message
    353:    virtual void process_rej_snd_message
    358:    virtual void process_rej_adm_message
    363:    virtual void process_rej_mis_message
    368:    virtual void process_rej_not_gof_message
    373:    virtual void process_rej_not_drw_message
    378:    virtual void process_yes_nme_message
    383:    virtual void process_yes_obs_message
    389:    virtual void process_yes_iam_message
    394:    virtual void process_yes_gof_message
    399:    virtual void process_yes_tme_message
    404:    virtual void process_yes_drw_message
    410:    virtual void process_yes_snd_message
    415:    virtual void process_yes_not_gof_message
    420:    virtual void process_yes_not_drw_message
    425:    virtual void process_yes_not_sub_message
    431:    virtual void process_unexpected_not_message(const TokenMessage& message);
    436:    virtual void process_unexpected_rej_message(const TokenMessage& message);
    441:    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
    446:    virtual void process_unexpected_yes_message(const TokenMessage& message);
    451:    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
    456:    virtual void process_bm_message(const DipMessage& message);
    467:    virtual void process_hlo_message(const TokenMessage& message);
    472:    virtual void process_map_message(const TokenMessage& message);
    476:    virtual void process_mdf_message(const TokenMessage& message);
    480:    virtual void process_ord_message(const TokenMessage& message);
    484:    virtual void process_sco_message(const TokenMessage& message);
    488:    virtual void process_now_message(const TokenMessage& message);
    492:    virtual void process_slo_message(const TokenMessage& message);
    502:    virtual void report_failed_press
    508:    virtual void report_failed_connect();
    513:    virtual void report_close(ProtocolError error);
    524:    static void report_ccd(const Token& power, bool disorder);
    528:    void report_end(const TokenMessage& message) const;
    532:    void report_mdf() const;
    536:    void report_now() const;
    540:    void report_ords();
    544:    static void report_out(const Token& power);
    548:    void report_sco() const;
    552:    void report_smr(const TokenMessage& message) const;
    556:    void report_exit(fixed_string reason);
    566:    MapAndUnits* map_and_units;
    571:    std::set< Token > cd_powers;
    576:    std::set< Token > out_powers;
    580:    std::vector< PowerCentres > centres;
    584:    std::vector< PowerUnits > units;
  W050 Data is not private
    566:    MapAndUnits* map_and_units;
    571:    std::set< Token > cd_powers;
    576:    std::set< Token > out_powers;
    580:    std::vector< PowerCentres > centres;
    584:    std::vector< PowerUnits > units;
  W075 Virtual function is public
    91:    virtual bool process_command_line_parameter(char token, std::string& value);
    97:    virtual std::string report_command_line_parameters();
  W077 Virtual function has no overrides
    91:    virtual bool process_command_line_parameter(char token, std::string& value);
    97:    virtual std::string report_command_line_parameters();
    191:    virtual StartupResult initialise(const StartupParameters& parameters);
    196:    virtual void set_title(token_t msg, bool rcvd);
    201:    virtual void send_nme_or_obs();
    206:    virtual void process_ccd_message
    212:    virtual void process_drw_message(const TokenMessage& message);
    217:    virtual const std::vector< Token >& get_try_tokens() const;
    222:    virtual void process_frm_message(const TokenMessage& message);
    226:    virtual void process_huh_message(const TokenMessage& message);
    230:    virtual void process_lod_message(const TokenMessage& message);
    234:    virtual void process_mis_message(const TokenMessage& message);
    238:    virtual void process_off_message(const TokenMessage& message);
    243:    virtual void process_out_message(const TokenMessage& message);
    247:    virtual void process_prn_message(const Token* message, size_t size);
    251:    virtual void process_smr_message(const TokenMessage& message);
    255:    virtual void process_sve_message(const TokenMessage& message);
    260:    virtual void process_thx_message(const TokenMessage& message);
    264:    virtual void process_tme_message(const TokenMessage& message);
    268:    virtual void process_adm_message(const TokenMessage& message);
    273:    virtual void process_not_ccd_message(const TokenMessage& message,
    278:    virtual void process_not_tme_message
    285:    virtual bool get_reconnect_details(Token& power, int& passcode) const;
    293:    virtual uint8_t reconnection_delay();
    298:    virtual void process_rej_nme_message
    303:    virtual void process_rej_iam_message
    308:    virtual void process_rej_hlo_message
    313:    virtual void process_rej_now_message
    318:    virtual void process_rej_sco_message
    323:    virtual void process_rej_hst_message
    328:    virtual void process_rej_sub_message
    333:    virtual void process_rej_gof_message
    338:    virtual void process_rej_ord_message
    343:    virtual void process_rej_tme_message
    348:    virtual void process_rej_drw_message
    353:    virtual void process_rej_snd_message
    358:    virtual void process_rej_adm_message
    363:    virtual void process_rej_mis_message
    368:    virtual void process_rej_not_gof_message
    373:    virtual void process_rej_not_drw_message
    378:    virtual void process_yes_nme_message
    383:    virtual void process_yes_obs_message
    389:    virtual void process_yes_iam_message
    394:    virtual void process_yes_gof_message
    399:    virtual void process_yes_tme_message
    404:    virtual void process_yes_drw_message
    410:    virtual void process_yes_snd_message
    415:    virtual void process_yes_not_gof_message
    420:    virtual void process_yes_not_drw_message
    425:    virtual void process_yes_not_sub_message
    431:    virtual void process_unexpected_not_message(const TokenMessage& message);
    436:    virtual void process_unexpected_rej_message(const TokenMessage& message);
    441:    virtual void process_unexpected_rej_not_message(const TokenMessage& message);
    446:    virtual void process_unexpected_yes_message(const TokenMessage& message);
    451:    virtual void process_unexpected_yes_not_message(const TokenMessage& message);
    456:    virtual void process_bm_message(const DipMessage& message);
    467:    virtual void process_hlo_message(const TokenMessage& message);
    472:    virtual void process_map_message(const TokenMessage& message);
    476:    virtual void process_mdf_message(const TokenMessage& message);
    480:    virtual void process_ord_message(const TokenMessage& message);
    484:    virtual void process_sco_message(const TokenMessage& message);
    488:    virtual void process_now_message(const TokenMessage& message);
    492:    virtual void process_slo_message(const TokenMessage& message);
    502:    virtual void report_failed_press
    508:    virtual void report_failed_connect();
    513:    virtual void report_close(ProtocolError error);
  W078 Remove virtual tag: function is an override or final
    105:    virtual void Display(std::ostream& stream,
  W082 Adjacent arguments have the same type
    273:    virtual void process_not_ccd_message(const TokenMessage& message,
    502:    virtual void report_failed_press
  W090 Function could be const
    206:    virtual void process_ccd_message
    212:    virtual void process_drw_message(const TokenMessage& message);
    243:    virtual void process_out_message(const TokenMessage& message);
    251:    virtual void process_smr_message(const TokenMessage& message);
    268:    virtual void process_adm_message(const TokenMessage& message);
    273:    virtual void process_not_ccd_message(const TokenMessage& message,
    467:    virtual void process_hlo_message(const TokenMessage& message);
    472:    virtual void process_map_message(const TokenMessage& message);
    476:    virtual void process_mdf_message(const TokenMessage& message);
    484:    virtual void process_sco_message(const TokenMessage& message);
    488:    virtual void process_now_message(const TokenMessage& message);
    492:    virtual void process_slo_message(const TokenMessage& message);
  W092 Function could be free
    75:    static BaseBot* instance();
    101:    static void send_to_console(std::ostringstream& report);
    179:    void cancel_event(BotEvent event);
    524:    static void report_ccd(const Token& power, bool disorder);
    544:    static void report_out(const Token& power);
    556:    void report_exit(fixed_string reason);
    716:    static bool send_buff(DipIpBuffer& buff);
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    674:       SentPressInfo() : resend_partial(false), is_broadcast(false) { }
C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.cpp
  W006 reinterpret_cast
    192:    auto msg = reinterpret_cast< BM_Message* >(buff->PayloadPtr());
    220:    auto message = reinterpret_cast< const DipMessage* >(ipb->HeaderPtr());
  W007 Cast down the inheritance hierarchy
    210:    DipIpBufferPtr ipb(static_cast< DipIpBuffer* >(msg));
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
C:/Users/gregu/Documents/rsc/rsc/dip/BotThread.h
  W020 Using statement in header
    38: using namespace NodeBase;
  W032 Unused function
    117:       bool operator<(const Wakeup& that) const
  W053 Data could be const
    112:       BotEvent event;       // event
  W055 Data need not be mutable
    113:       mutable secs_t secs;  // delay
  W078 Remove virtual tag: function is an override or final
    73:    virtual void Display(std::ostream& stream,
    78:    virtual void Patch(sel_t selector, void* arguments) override;
    98:    virtual const char* AbbrName() const override;
    102:    virtual void Enter() override;
    106:    virtual void Destroy() override;
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
  W114 Function could be tagged noexcept
    115:       Wakeup(BotEvent e, secs_t s) : event(e), secs(s) { }
C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.cpp
  W006 reinterpret_cast
    102:       auto message = reinterpret_cast< const DipMessage* >(buff_->HeaderPtr());
    131:    return reinterpret_cast< DipHeader* >(buff_->HeaderPtr());
  W022 Add using statement
    1: namespace NodeBase
  W104 File heading is not standard
    7: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/BotTrace.h
  W020 Using statement in header
    35: using namespace NodeBase;
  W032 Unused function
    64:    DipHeader* Header() const;
  W078 Remove virtual tag: function is an override or final
    68:    virtual bool Display(std::ostream& stream, bool diff) override;
    72:    virtual void ClaimBlocks() override;
    76:    virtual const char* EventString() const override;
    80:    virtual void Shutdown(RestartLevel level) override;
  W104 File heading is not standard
    7: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.cpp
  W078 Remove virtual tag: function is an override or final
    45:    virtual const char* Name() const override { return BotTraceToolName; }
    46:    virtual const char* Expl() const override { return BotTraceToolExpl; }
  W104 File heading is not standard
    7: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/BotTracer.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W104 File heading is not standard
    7: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/BotType.h
  W018 Remove #include directive
    21: #include "BaseBot.h"
  W024 Add forward declaration
    1: class Diplomacy::BaseBot
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    29: void ConvoySubversion::clear()  // <b>
    37: void ConvoySubversion::decrement()
C:/Users/gregu/Documents/rsc/rsc/dip/ConvoySubversion.h
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    49:    ConvoySubversion();  // sets members to default values
C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.cpp
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
C:/Users/gregu/Documents/rsc/rsc/dip/DipModule.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W047 Data is init-only
    64:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    52:    virtual void Startup(RestartLevel level) override;
    56:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    60:    static bool Register();
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.cpp
  W005 Functional cast
    447: ipport_t BotTcpService::Port() const { return ipport_t(port_); }
  W006 reinterpret_cast
    61:       reinterpret_cast < const IM_Message* >(this)->Display(stream);
    64:       reinterpret_cast < const RM_Message* >(this)->Display(stream);
    67:       reinterpret_cast < const DM_Message* >(this)->Display(stream);
    70:       reinterpret_cast < const FM_Message* >(this)->Display(stream);
    73:       reinterpret_cast < const EM_Message* >(this)->Display(stream);
    76:       reinterpret_cast < const BM_Message* >(this)->Display(stream);
    202:       auto header = reinterpret_cast< const DipHeader* >(source);
    213:       auto header = reinterpret_cast< const DipHeader* >(payload);
    234:    auto msg = reinterpret_cast< DipHeader* >(buff.PayloadPtr());
    240:       auto im = reinterpret_cast< IM_Message* >(src);
    248:       auto dm = reinterpret_cast< DM_Message* >(src);
    259:       auto em = reinterpret_cast< EM_Message* >(src);
    288:    auto msg = reinterpret_cast< DipHeader* >(buff.PayloadPtr());
    297:       auto rm = reinterpret_cast< RM_Message* >(msg);
    308:       auto dm = reinterpret_cast< DM_Message* >(msg);
    319:       auto em = reinterpret_cast< EM_Message* >(msg);
    342:    auto header = reinterpret_cast< const DipHeader* >(payload);
    370:    auto msg = reinterpret_cast< BM_Message* >(buff->PayloadPtr());
  W007 Cast down the inheritance hierarchy
    283:    auto dipbuff = static_cast< DipIpBuffer* >(&buff);
    338:    DipIpBufferPtr dipbuff(static_cast< DipIpBuffer* >(buff.release()));
  W009 Pointer arithmetic
    216:       dest = payload + received;
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
  W106 Function does not invoke Debug::ft
    447: ipport_t BotTcpService::Port() const { return ipport_t(port_); }
C:/Users/gregu/Documents/rsc/rsc/dip/DipProtocol.h
  W020 Using statement in header
    39: using namespace NodeBase;
    40: using namespace NetworkBase;
  W028 Unused data
    162: constexpr ProtocolError IM_TIMEOUT = 0x01;
    163: constexpr ProtocolError IM_EXPECTED = 0x02;
    164: constexpr ProtocolError IM_WRONG_ENDIAN = 0x03;
    165: constexpr ProtocolError IM_WRONG_MAGIC_NUMBER = 0x04;
    166: constexpr ProtocolError IM_INCOMPATIBLE_VERSION = 0x05;
    167: constexpr ProtocolError IM_REPEATED = 0x06;
    168: constexpr ProtocolError IM_FROM_SERVER = 0x07;
    169: constexpr ProtocolError INVALID_MESSAGE_TYPE = 0x08;
    170: constexpr ProtocolError MESSAGE_TOO_SHORT = 0x09;
    171: constexpr ProtocolError DM_BEFORE_RM = 0x0A;
    172: constexpr ProtocolError RM_EXPECTED = 0x0B;
    173: constexpr ProtocolError RM_REPEATED = 0x0C;
    174: constexpr ProtocolError RM_FROM_CLIENT = 0x0D;
    175: constexpr ProtocolError DM_INVALID_TOKEN = 0x0E;
    197: constexpr BotEvent FIRST_BOT_BM_EVENT = 2;  // start of subclass events
  W032 Unused function
    251:    virtual CliText* CreateText() const override;
  W042 Member could be private
    202:    byte_t first_payload_byte;  // for creating a pointer to the first byte
  W053 Data could be const
    144:    DipHeader header;  // no parameters (length = 0)
    202:    byte_t first_payload_byte;  // for creating a pointer to the first byte
  W078 Remove virtual tag: function is an override or final
    219:    virtual const char* Name() const override { return "Diplomacy"; }
    220:    virtual ipport_t Port() const override;
    221:    virtual Faction GetFaction() const override { return PayloadFaction; }
    222:    virtual bool AcceptsConns() const override { return false; }
    223:    virtual size_t MaxConns() const override { return 4; }
    224:    virtual size_t MaxBacklog() const override { return 0; }
    225:    virtual bool Keepalive() const override { return true; }
    233:    virtual void Display(std::ostream& stream,
    246:    virtual void GetAppSocketSizes
    251:    virtual CliText* CreateText() const override;
    255:    virtual InputHandler* CreateHandler(IpPort* port) const override;
    280:    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
    285:    virtual void NetworkToHost(IpBuffer& buff,
    290:    virtual void ReceiveBuff
    295:    virtual byte_t* HostToNetwork(IpBuffer& buff,
    300:    virtual void SocketFailed(SysSocket* socket) const override;
    329:    virtual size_t PayloadSize() const override { return currSize_; }
    333:    virtual bool AddBytes
    338:    virtual void Display(std::ostream& stream,
  W104 File heading is not standard
    5: //  Copyright (C) 2019  Greg Utas
C:/Users/gregu/Documents/rsc/rsc/dip/DipTypes.h
  W020 Using statement in header
    28: using namespace NetworkBase;
    29: using namespace NodeBase;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/Location.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    47: bool Location::operator<(const Location& that) const
C:/Users/gregu/Documents/rsc/rsc/dip/Location.h
  W032 Unused function
    75:    bool operator<(const Location& that) const;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    49:    Location();
    53:    Location(ProvinceId p, const Token& c);
    58:    Location(const TokenMessage& where, const Token& unit_type);
    63:    Location(const TokenMessage& unit);
    67:    Location(const Location& that) = default;
    71:    Location& operator=(const Location& that) = default;
C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.cpp
  W018 Remove #include directive
    19: #include "ConvoySubversion.h"
  W097 Line indentation is not a multiple of the standard value
    127:              (our_winter_orders.number_of_waives != 0));
    239:           o != our_winter_orders.adjustments.end(); ++o)
    923:           b != r->second.adjustments.end(); ++b)
    1055:           o != orders.adjustments.end(); ++o, ++count)
    1425:                       loc != n->second.end(); ++loc)
    2122:               winter->number_of_waives >= winter->number_of_orders_required)
    2144:               game_map[build_loc.province].home_powers.end())
    2151:               game_map[build_loc.province].neighbours.end())
    2190:               winter->number_of_waives >= winter->number_of_orders_required)
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    271: bool MapAndUnits::can_move_to(const UnitOrder& unit, const Location& dest) const
    289: bool MapAndUnits::can_move_to_province
    585: TokenMessage MapAndUnits::encode_location(const Location& location) const
    859: TokenMessage MapAndUnits::encode_unit(const UnitOrder& unit) const
    1192: const LocationSet* MapAndUnits::get_neighbours(const Location& location) const
    1440: MapAndUnits* MapAndUnits::instance()
    2539: Token MapAndUnits::province_token(ProvinceId province) const
    2669: bool MapAndUnits::set_move_by_single_step_convoy_order
C:/Users/gregu/Documents/rsc/rsc/dip/MapAndUnits.h
  W020 Using statement in header
    35: using namespace NodeBase;
  W032 Unused function
    162:    static MapAndUnits* create_clone();
    166:    static void delete_clone(MapAndUnits*& clone);
    184:    bool set_hold_order(ProvinceId unit);
    185:    bool set_move_order(ProvinceId unit, Location dest);
    186:    bool set_support_to_hold_order(ProvinceId unit, ProvinceId client);
    187:    bool set_support_to_move_order
    189:    bool set_convoy_order(ProvinceId unit, ProvinceId client, ProvinceId dest);
    192:    bool set_move_by_single_step_convoy_order
    194:    bool set_disband_order(ProvinceId unit);
    195:    bool set_retreat_order(ProvinceId unit, Location dest);
    196:    void set_build_order(Location location);
    197:    bool set_remove_order(ProvinceId unit);
    198:    void set_waive_order();
    199:    void set_multiple_waive_orders(size_t waives);
    200:    void set_total_number_of_waive_orders(size_t waives);
    207:    Location find_adjustment(ProvinceId province) const;
    212:    bool cancel_remove_order(ProvinceId province);
    216:    bool unorder_adjustment(const TokenMessage& not_sub, PowerId power);
    220:    bool any_orders_entered() const;
    224:    void clear_all_orders();
    237:    size_t process_sub(const TokenMessage& sub, PowerId power, Token results[]);
    243:    bool get_variant_setting
    248:    void build_now(TokenMessage& now) const;
    252:    void build_sco(TokenMessage& sco) const;
    272:    Location find_result_unit_initial_location(ProvinceId province,
    283:    const LocationSet* get_destinations(ProvinceId province) const;
    289:       get_dislodged_unit_destinations(ProvinceId province) const;
    306:    void set_order_checking(bool on_submission, bool on_adjudication);
    310:    bool all_orders_received(PowerId power) const;
    314:    void adjudicate();
    319:    size_t get_adjudication_results(TokenMessage ord_messages[]) const;
    324:    bool apply_adjudication();
    332:    size_t get_centre_count(Token power) const;
    336:    size_t get_unit_count(Token power) const;
  W042 Member could be private
    116:    std::string map_name;             // map's name
    119:    TokenMessage variant;             // rules for this variant
    120:    ProvinceSet home_centres;         // our home centres
    121:    bool game_started;                // set when the game has begun
    126:    UnitOrderMap dislodged_units;     // dislodged units
    127:    WinterOrderMap winter_orders;     // winter orders
    128:    WinterOrders our_winter_orders;   // our winter orders
    129:    UnitOrderMap prev_movements;      // results of previous movement turn
    130:    UnitOrderMap prev_retreats;       // results of previous retreat turn
    132:    Token prev_movement_season;       // season for previous movement results
    136:    bool check_on_submission;    // check orders when submitted (not an AOA game)
    137:    bool check_on_adjudication;  // check orders when adjudicated (AOA game)
    143:    UnitSet our_units;              // our units
    144:    UnitSet our_dislodged_units;    // our units that must retreat or disband
    145:    ProvinceSet open_home_centres;  // our home centres available for builds
    146:    ProvinceSet our_centres;        // the centres that we currently own
    147:    word our_number_of_disbands;    // disbands required (negative for builds)
    190:    bool set_move_by_convoy_order(ProvinceId unit,
    211:    bool cancel_build_order(ProvinceId province);
    257:    std::string display_movement_order(const UnitOrder& unit,
    260:    std::string display_retreat_order(const UnitOrder& unit) const;
    278:    const LocationSet* get_neighbours(const Location& location) const;
    328:    TokenMessage encode_unit(const UnitOrder& unit) const;
  W048 Data is write-only
    121:    bool game_started;                // set when the game has begun
    147:    word our_number_of_disbands;    // disbands required (negative for builds)
  W050 Data is not private
    113:    Province game_map[PROVINCE_MAX];  // map details
    114:    ProvinceId number_of_provinces;   // number of provinces on map
    115:    PowerId number_of_powers;         // number of powers at outset
    116:    std::string map_name;             // map's name
    117:    Token our_power;                  // power that we are playing
    118:    int passcode;                     // our passcode
    119:    TokenMessage variant;             // rules for this variant
    120:    ProvinceSet home_centres;         // our home centres
    121:    bool game_started;                // set when the game has begun
    122:    bool game_over;                   // set when the game has ended
    123:    Token curr_season;                // current season of play
    124:    int curr_year;                    // current year of play
    125:    UnitOrderMap units;               // non-dislodged units
    126:    UnitOrderMap dislodged_units;     // dislodged units
    127:    WinterOrderMap winter_orders;     // winter orders
    128:    WinterOrders our_winter_orders;   // our winter orders
    129:    UnitOrderMap prev_movements;      // results of previous movement turn
    130:    UnitOrderMap prev_retreats;       // results of previous retreat turn
    131:    WinterOrderMap prev_adjustments;  // results of previous adjustment turn
    132:    Token prev_movement_season;       // season for previous movement results
    136:    bool check_on_submission;    // check orders when submitted (not an AOA game)
    137:    bool check_on_adjudication;  // check orders when adjudicated (AOA game)
    143:    UnitSet our_units;              // our units
    144:    UnitSet our_dislodged_units;    // our units that must retreat or disband
    145:    ProvinceSet open_home_centres;  // our home centres available for builds
    146:    ProvinceSet our_centres;        // the centres that we currently own
    147:    word our_number_of_disbands;    // disbands required (negative for builds)
  W082 Adjacent arguments have the same type
    190:    bool set_move_by_convoy_order(ProvinceId unit,
    399:    bool has_route_to_province(const UnitOrder& unit, ProvinceId province,
  W092 Function could be free
    157:    static MapAndUnits* instance();
    162:    static MapAndUnits* create_clone();
    166:    static void delete_clone(MapAndUnits*& clone);
    260:    std::string display_retreat_order(const UnitOrder& unit) const;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    62:    explicit PowerCentres(const Token& power) : power(power) { }
    72:    UnitLocation(const Token& unit, const Location& loc) :
    83:    explicit PowerUnits(const Token& power) : power(power) { }
    93:    explicit PowerOrders(const Token& power) : power(power) { }
    345:    ~MapAndUnits() = default;
C:/Users/gregu/Documents/rsc/rsc/dip/Province.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/Province.h
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    48:    Province();
C:/Users/gregu/Documents/rsc/rsc/dip/StartupParameters.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/StartupParameters.h
  W020 Using statement in header
    21: using namespace NetworkBase;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/Token.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    32: Token::Token(const category_t cat, const subtoken_t sub)
    40: int Token::get_number() const
    49: bool Token::is_number() const
    56: bool Token::is_power() const
    63: bool Token::is_province() const
    70: Token& Token::operator=(const Token& that)
    126: Token::SeasonType Token::order_season() const
    137: PowerId Token::power_id() const
    145: ProvinceId Token::province_id() const
    268: Token power_token(PowerId power)
    281: Token province_token(ProvinceId province)
C:/Users/gregu/Documents/rsc/rsc/dip/Token.h
  W020 Using statement in header
    27: using namespace NodeBase;
  W028 Unused data
    212: constexpr category_t CATEGORY_NUMBER_MIN = 0x00;
    213: constexpr category_t CATEGORY_NUMBER_MAX = 0x3F;
    214: constexpr category_t CATEGORY_BRACKET = 0x40;
    217: constexpr category_t CATEGORY_ORDER = 0x43;
    219: constexpr category_t CATEGORY_RESULT = 0x45;
    222: constexpr category_t CATEGORY_COMMAND = 0x48;
    223: constexpr category_t CATEGORY_PARAMETER = 0x49;
    224: constexpr category_t CATEGORY_PRESS = 0x4A;
  W042 Member could be private
    99:    bool is_number() const;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    40:    Token() : full_(INVALID_TOKEN) { }
    44:    Token(token_t token) : full_(token) { }
    52:    Token(const Token& that) : full_(that.full_) { }
    56:    ~Token() = default;
    179:       split_t() : sub_(INVALID_TOKEN & 0xff), cat_(INVALID_TOKEN >> 8) { }
C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.cpp
  W097 Line indentation is not a multiple of the standard value
    393:              that.length_ * sizeof(Token));
    437:              that.length_ * sizeof(Token));
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    125: Token TokenMessage::at(size_t index) const
    137: void TokenMessage::clear()
    267: Token TokenMessage::front() const
    352: Token TokenMessage::operator[](size_t index) const
    477: bool TokenMessage::operator<(const TokenMessage& that) const
C:/Users/gregu/Documents/rsc/rsc/dip/TokenMessage.h
  W032 Unused function
    48:    explicit TokenMessage(const Token* stream);
    56:    TokenMessage(const TokenMessage& that);
    91:    Token operator[](size_t index) const;
    140:    void set_as_ascii(const std::string& text);
    170:    bool operator<(const TokenMessage& that) const;
  W042 Member could be private
    127:    size_t set_from(const Token* stream, size_t length);
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    332: TokenTextMap* TokenTextMap::instance()
C:/Users/gregu/Documents/rsc/rsc/dip/TokenTextMap.h
  W042 Member could be private
    37:    typedef std::map< Token, std::string > TokenToTextMap;
    38:    typedef std::map< std::string, Token > TextToTokenMap;
  W092 Function could be free
    42:    static TokenTextMap* instance();
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/UnitOrder.cpp
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
C:/Users/gregu/Documents/rsc/rsc/dip/UnitOrder.h
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    99:    UnitOrder();
C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.cpp
  W022 Add using statement
    1: namespace NodeBase
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W106 Function does not invoke Debug::ft
    35: size_t WinterOrders::get_number_of_results() const
C:/Users/gregu/Documents/rsc/rsc/dip/WinterOrders.h
  W032 Unused function
    52:    size_t get_number_of_results() const;
  W104 File heading is not standard
    5: //  Diplomacy AI Client - Part of the DAIDE project (www.daide.org.uk).
  W114 Function could be tagged noexcept
    48:    WinterOrders();
C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.cpp
  W006 reinterpret_cast
    64:    auto fake = reinterpret_cast< const Circuit* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/mb/Circuit.h
  W020 Using statement in header
    32: using namespace NodeBase;
    33: using namespace SessionBase;
  W053 Data could be const
    90:    RegCell port_;
  W075 Virtual function is public
    64:    virtual std::string Name() const = 0;
    68:    virtual bool Supports(ProtocolId prid) const { return false; }
  W078 Remove virtual tag: function is an override or final
    76:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/mb/MbModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/mb/MbPools.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/mb/MbPools.h
  W020 Using statement in header
    29: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/mb/MediaEndpt.h
  W020 Using statement in header
    34: using namespace NodeBase;
    35: using namespace SessionBase;
  W026 Unused argument
    109/1:    virtual void ProcessIcMsg(Message& msg);
  W032 Unused function
    58:    StateId GetState() const { return state_; }
    62:    virtual void SetState(StateId stid);
    72:    ProtocolSM* MgwPsm() const;
    78:    virtual void Deallocate();
    87:    static void* operator new(size_t size);
    92:    explicit MediaEndpt(MediaPsm& psm);
  W042 Member could be private
    104:    virtual void EndOfTransaction();
  W075 Virtual function is public
    62:    virtual void SetState(StateId stid);
    78:    virtual void Deallocate();
  W077 Virtual function has no overrides
    62:    virtual void SetState(StateId stid);
    78:    virtual void Deallocate();
    104:    virtual void EndOfTransaction();
    109:    virtual void ProcessIcMsg(Message& msg);
  W078 Remove virtual tag: function is an override or final
    82:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/mb/MediaFailureEvent.h
  W020 Using statement in header
    33: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W027 Unused class
    41: class MediaFailureEvent : public Event
  W032 Unused function
    47:    MediaFailureEvent(ServiceSM& owner, MediaEndpt& mep);
    55:    MediaEndpt* Mep() const { return mep_; }
  W078 Remove virtual tag: function is an override or final
    59:    virtual void Display(std::ostream& stream,
    65:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    70:    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.cpp
  W006 reinterpret_cast
    118:    reinterpret_cast< const MediaInfo* >(bytes)->Display(stream, prefix);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    107: CliParm* MediaParameter::CreateCliParm(Usage use) const
C:/Users/gregu/Documents/rsc/rsc/mb/MediaParameter.h
  W020 Using statement in header
    31: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    52:    bool operator==(const MediaInfo& that) const;
  W078 Remove virtual tag: function is an override or final
    80:    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
    85:    virtual CliParm* CreateCliParm(Usage use) const override;
C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.cpp
  W006 reinterpret_cast
    575:       auto cxi = reinterpret_cast< MediaInfo* >(pptr->bytes);
  W007 Cast down the inheritance hierarchy
    253:    if(root->Sid() != TestServiceId) return static_cast< MediaSsm* >(root);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    259: MediaPsm* MediaPsm::GetOgPsm() const
C:/Users/gregu/Documents/rsc/rsc/mb/MediaPsm.h
  W020 Using statement in header
    37: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    119:    MediaEndpt* Mep() const { return mep_; }
  W042 Member could be private
    131:    Tone::Id GetOgTone() const { return ogTone_; }
    169:    void SetOgPort(Switch::PortId ogport);
    188:    virtual Event* ReceiveMsg(Message& msg) override;
    192:    virtual void PrepareOgMsgq() override;
  W075 Virtual function is public
    67:    virtual void SetOgPsm(MediaPsm* ogPsm);
    72:    virtual void SetOgTone(Tone::Id ogTone);
    77:    virtual void SetIcTone(Tone::Id icTone);
  W077 Virtual function has no overrides
    67:    virtual void SetOgPsm(MediaPsm* ogPsm);
    72:    virtual void SetOgTone(Tone::Id ogTone);
    77:    virtual void SetIcTone(Tone::Id icTone);
  W078 Remove virtual tag: function is an override or final
    140:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    144:    virtual void Display(std::ostream& stream,
    188:    virtual Event* ReceiveMsg(Message& msg) override;
    192:    virtual void PrepareOgMsgq() override;
    196:    virtual void EndOfTransaction() override;
C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.cpp
  W007 Cast down the inheritance hierarchy
    94:       auto mpsm = static_cast< MediaPsm* >(psm);
    118:       auto mpsm = static_cast< MediaPsm* >(psm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/mb/MediaSsm.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    47:    virtual bool SetMgwPsm(ProtocolSM* psm);
  W075 Virtual function is public
    47:    virtual bool SetMgwPsm(ProtocolSM* psm);
  W077 Virtual function has no overrides
    47:    virtual bool SetMgwPsm(ProtocolSM* psm);
  W078 Remove virtual tag: function is an override or final
    51:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    55:    virtual void Display(std::ostream& stream,
    70:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
C:/Users/gregu/Documents/rsc/rsc/mb/Switch.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    89: Circuit* Switch::GetCircuit(PortId pid) const
C:/Users/gregu/Documents/rsc/rsc/mb/Switch.h
  W020 Using statement in header
    37: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    88:    virtual void Display(std::ostream& stream,
  W092 Function could be free
    65:    static bool IsValidPort(PortId pid)
C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    79: Tone* ToneRegistry::GetTone(Tone::Id tid) const
C:/Users/gregu/Documents/rsc/rsc/mb/ToneRegistry.h
  W020 Using statement in header
    31: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    61:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/mb/Tones.cpp
  W006 reinterpret_cast
    65:    auto fake = reinterpret_cast< const Tone* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/mb/Tones.h
  W005 Functional cast
    63:    Id Tid() const { return Id(tid_.GetId()); }
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    63:    Id Tid() const { return Id(tid_.GetId()); }
  W037 Member hides inherited name
    67:    static ptrdiff_t CellDiff();
  W065 Base class virtual destructor is not public
    80:    virtual ~Tone();
  W078 Remove virtual tag: function is an override or final
    71:    virtual void Display(std::ostream& stream,
    100:    virtual std::string Name() const override;
    109:    virtual std::string Name() const override;
    118:    virtual std::string Name() const override;
    127:    virtual std::string Name() const override;
    136:    virtual std::string Name() const override;
    145:    virtual std::string Name() const override;
    154:    virtual std::string Name() const override;
    163:    virtual std::string Name() const override;
    172:    virtual std::string Name() const override;
    181:    virtual std::string Name() const override;
  W112 Function could be defaulted
    99:    ~ToneSilent();
    108:    ~ToneDial();
    117:    ~ToneStutteredDial();
    126:    ~ToneConfirmation();
    135:    ~ToneRingback();
    144:    ~ToneBusy();
    153:    ~ToneCallWaiting();
    162:    ~ToneReorder();
    171:    ~ToneReceiverOffHook();
    180:    ~ToneHeld();
C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.cpp
  W004 C-style cast
    33:    return (void*) ((const_ptr_t) ptr2 - diff);
    33:    return (void*) ((const_ptr_t) ptr2 - diff);
    40:    return (void*) ((const_ptr_t) ptr1 + diff);
    40:    return (void*) ((const_ptr_t) ptr1 + diff);
    77:    return ((const_ptr_t) ptr1 - (const_ptr_t) ptr2);
    77:    return ((const_ptr_t) ptr1 - (const_ptr_t) ptr2);
  W008 Cast removes const qualification
    33:    return (void*) ((const_ptr_t) ptr2 - diff);
    40:    return (void*) ((const_ptr_t) ptr1 + diff);
  W009 Pointer arithmetic
    33:    return (void*) ((const_ptr_t) ptr2 - diff);
    40:    return (void*) ((const_ptr_t) ptr1 + diff);
C:/Users/gregu/Documents/rsc/rsc/nb/Algorithms.h
  W082 Adjacent arguments have the same type
    50:    uint64_t pack3(uint16_t a, uint16_t b, uint16_t c);
    54:    uint64_t pack4(uint16_t a, uint16_t b, uint16_t c, uint16_t d);
C:/Users/gregu/Documents/rsc/rsc/nb/AllocationException.h
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Display(std::ostream& stream,
    55:    virtual const char* what() const noexcept override;
C:/Users/gregu/Documents/rsc/rsc/nb/Allocators.h
  W114 Function could be tagged noexcept
    74:    DynAllocator() = default;
    76:    ~DynAllocator() = default;
    117:    ImmAllocator() = default;
    119:    ~ImmAllocator() = default;
    160:    PermAllocator() = default;
    162:    ~PermAllocator() = default;
    203:    ProtAllocator() = default;
    205:    ~ProtAllocator() = default;
    246:    TempAllocator() = default;
    248:    ~TempAllocator() = default;
  W115 Function should not be tagged noexcept
    84:    template< typename U > bool operator==
    90:    template<typename U > bool operator!=
    127:    template< typename U > bool operator==
    133:    template<typename U > bool operator!=
    170:    template< typename U > bool operator==
    176:    template<typename U > bool operator!=
    213:    template< typename U > bool operator==
    219:    template<typename U > bool operator!=
    256:    template< typename U > bool operator==
    262:    template<typename U > bool operator!=
C:/Users/gregu/Documents/rsc/rsc/nb/Array.h
  W090 Function could be const
    124:    bool Replace(size_t index, const T& item)
  W099 Line contains adjacent spaces
    251:    inline static fn_name Array_ctor()     { return "Array.ctor"; }
    252:    inline static fn_name Array_dtor()     { return "Array.dtor"; }
    253:    inline static fn_name Array_Init()     { return "Array.Init"; }
    254:    inline static fn_name Array_Reserve()  { return "Array.Reserve"; }
    256:    inline static fn_name Array_Erase()    { return "Array.Erase"; }
    257:    inline static fn_name Array_Replace()  { return "Array.Replace"; }
    258:    inline static fn_name Array_Extend()   { return "Array.Extend"; }
C:/Users/gregu/Documents/rsc/rsc/nb/AssertionException.h
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual const char* what() const noexcept override;
C:/Users/gregu/Documents/rsc/rsc/nb/Base.cpp
  W006 reinterpret_cast
    133:    auto obj = reinterpret_cast< ObjectStruct* >(this);
    161:    auto obj = reinterpret_cast< const ObjectStruct* >(this);
  W008 Cast removes const qualification
    98:       objects[count++] = const_cast< Base* >(this);
  W106 Function does not invoke Debug::ft
    128: void Base::Nullify(size_t n)
    157: Base::vptr_t Base::Vptr() const
C:/Users/gregu/Documents/rsc/rsc/nb/Base.h
  W042 Member could be private
    109:    virtual void Claim() { }
  W043 Member could be protected
    78:    virtual void Display(std::ostream& stream,
    102:    void LogSubtended(std::ostream& stream,
  W075 Virtual function is public
    78:    virtual void Display(std::ostream& stream,
    97:    virtual void GetSubtended(Base* objects[], size_t& count) const;
    109:    virtual void Claim() { }
    114:    virtual void ClaimBlocks();
    132:    virtual void Cleanup() { }
    140:    virtual void Startup(RestartLevel level) { }
    148:    virtual void Shutdown(RestartLevel level) { }
    152:    virtual MemoryType MemType() const { return MemPerm; }
    156:    virtual const char* ClassName() const;
  W077 Virtual function has no overrides
    156:    virtual const char* ClassName() const;
  W112 Function could be defaulted
    64:    virtual ~Base() { }
C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.cpp
  W106 Function does not invoke Debug::ft
    52: void CfgBitParm::Explain(string& expl) const
C:/Users/gregu/Documents/rsc/rsc/nb/CfgBitParm.h
  W042 Member could be private
    66:    virtual bool SetNext(const std::string& input) override;
  W078 Remove virtual tag: function is an override or final
    43:    virtual void Patch(sel_t selector, void* arguments) override;
    56:    virtual void Explain(std::string& expl) const override;
    61:    virtual std::string GetCurr() const override;
    66:    virtual bool SetNext(const std::string& input) override;
  W082 Adjacent arguments have the same type
    48:    CfgBitParm(const char* key, const char* def, const char* expl);
  W092 Function could be free
    76:    static fixed_string ValidTrueChars();
    81:    static fixed_string ValidFalseChars();
C:/Users/gregu/Documents/rsc/rsc/nb/CfgBoolParm.h
  W042 Member could be private
    67:    virtual bool SetNextValue(bool value) override;
  W060 Base class constructor is public
    38:    CfgBoolParm(const char* key, const char* def, bool* field, const char* expl);
  W078 Remove virtual tag: function is an override or final
    46:    virtual void Display(std::ostream& stream,
    51:    virtual void Patch(sel_t selector, void* arguments) override;
    59:    virtual bool GetCurrValue() const override { return *curr_; }
    63:    virtual void SetCurr() override;
    67:    virtual bool SetNextValue(bool value) override;
  W082 Adjacent arguments have the same type
    38:    CfgBoolParm(const char* key, const char* def, bool* field, const char* expl);
C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.cpp
  W106 Function does not invoke Debug::ft
    70: bool CfgFlagParm::GetCurrValue() const
C:/Users/gregu/Documents/rsc/rsc/nb/CfgFlagParm.h
  W042 Member could be private
    65:    virtual bool SetNextValue(bool value) override;
  W053 Data could be const
    77:    FlagId fid_;
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    57:    virtual bool GetCurrValue() const override;
    61:    virtual void SetCurr() override;
    65:    virtual bool SetNextValue(bool value) override;
  W082 Adjacent arguments have the same type
    39:    CfgFlagParm(const char* key, const char* def,
C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.cpp
  W106 Function does not invoke Debug::ft
    72: void CfgIntParm::Explain(string& expl) const
C:/Users/gregu/Documents/rsc/rsc/nb/CfgIntParm.h
  W032 Unused function
    57:    word GetCurrValue() const { return *curr_; }
  W042 Member could be private
    81:    virtual bool SetNext(const std::string& input) override;
  W053 Data could be const
    93:    word min_;
    97:    word max_;
  W060 Base class constructor is public
    39:    CfgIntParm(const char* key, const char* def, word* field,
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    67:    virtual void Explain(std::string& expl) const override;
    72:    virtual std::string GetCurr() const override;
    76:    virtual void SetCurr() override;
    81:    virtual bool SetNext(const std::string& input) override;
  W082 Adjacent arguments have the same type
    39:    CfgIntParm(const char* key, const char* def, word* field,
C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.cpp
  W006 reinterpret_cast
    137:    auto fake = reinterpret_cast< const CfgParm* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/CfgParm.h
  W042 Member could be private
    60:    const char* Key() const;
    75:    static ptrdiff_t LinkDiff();
  W053 Data could be const
    155:    Q1Link link_;
  W054 Data could be const pointer
    143:    const char* default_;
    147:    const char* expl_;
  W075 Virtual function is public
    64:    virtual void Explain(std::string& expl) const { expl = expl_; }
  W078 Remove virtual tag: function is an override or final
    79:    virtual void Display(std::ostream& stream,
    84:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    90:    CfgParm(const char* key, const char* def, const char* expl);
C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.cpp
  W106 Function does not invoke Debug::ft
    275: void CfgParmRegistry::ListParms(ostream& stream, const string& prefix) const
C:/Users/gregu/Documents/rsc/rsc/nb/CfgParmRegistry.h
  W078 Remove virtual tag: function is an override or final
    97:    virtual void Startup(RestartLevel level) override;
    101:    virtual void Display(std::ostream& stream,
    106:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    93:    void AddMainArg(const std::string& arg);
C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.cpp
  W106 Function does not invoke Debug::ft
    68: void CfgStrParm::Explain(string& expl) const
C:/Users/gregu/Documents/rsc/rsc/nb/CfgStrParm.h
  W042 Member could be private
    101:    virtual bool SetNext(const std::string& input) override;
  W060 Base class constructor is public
    39:    CfgStrParm(const char* key, const char* def,
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    57:    virtual void Explain(std::string& expl) const override;
    61:    virtual std::string GetCurr() const override { return *curr_; }
    65:    virtual void SetCurr() override;
    71:    virtual bool SetNext(const std::string& input) override;
    101:    virtual bool SetNext(const std::string& input) override;
    105:    virtual std::string GetInput() const override { return input_; }
  W082 Adjacent arguments have the same type
    39:    CfgStrParm(const char* key, const char* def,
    92:    CfgFileTimeParm(const char* key, const char* def,
  W110 Override of Base.Display not found
    87: class CfgFileTimeParm : public CfgStrParm
C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.cpp
  W006 reinterpret_cast
    90:    auto fake = reinterpret_cast< const CfgTuple* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/CfgTuple.h
  W053 Data could be const
    117:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    95:    virtual void Display(std::ostream& stream,
    100:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    77:    static const std::string& ValidNameChars();
    82:    static const std::string& ValidValueChars();
    87:    static const std::string& ValidBlankChars();
C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.cpp
  W047 Data is init-only
    149:    FunctionGuard guard(FunctionGuard::MakeUnpreemptable);
  W107 Function does not invoke Debug::ft as first statement
    106:       Debug::ft(CinThread_Enter);
    151:    Debug::ft(CinThread_GetLine);
C:/Users/gregu/Documents/rsc/rsc/nb/CinThread.h
  W078 Remove virtual tag: function is an override or final
    51:    virtual void Display(std::ostream& stream,
    56:    virtual void Patch(sel_t selector, void* arguments) override;
    77:    virtual const char* AbbrName() const override;
    82:    virtual void Enter() override;
    86:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/Class.cpp
  W004 C-style cast
    220:    if(addr != nullptr) return (Object*) addr;
  W006 reinterpret_cast
    75:    auto fake = reinterpret_cast< const Class* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/Class.h
  W032 Unused function
    57:    virtual void Initialize();
    62:    virtual Object* Create();
    70:    virtual void FreeQuasiSingleton(Object* obj);
    119:    bool SetVptr(Object& obj);
    126:    bool SetTemplate(Object& obj);
    133:    bool SetQuasiSingleton(Object& obj);
  W042 Member could be private
    66:    virtual Object* GetQuasiSingleton();
    113:    virtual Object* New(size_t size);
  W065 Base class virtual destructor is not public
    107:    virtual ~Class();
  W075 Virtual function is public
    57:    virtual void Initialize();
    62:    virtual Object* Create();
    66:    virtual Object* GetQuasiSingleton();
    70:    virtual void FreeQuasiSingleton(Object* obj);
  W077 Virtual function has no overrides
    57:    virtual void Initialize();
    62:    virtual Object* Create();
    66:    virtual Object* GetQuasiSingleton();
    70:    virtual void FreeQuasiSingleton(Object* obj);
  W078 Remove virtual tag: function is an override or final
    86:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    90:    virtual void Display(std::ostream& stream,
    95:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    113:    virtual Object* New(size_t size);
C:/Users/gregu/Documents/rsc/rsc/nb/ClassRegistry.cpp
  W106 Function does not invoke Debug::ft
    79: Class* ClassRegistry::Lookup(ClassId cid) const
C:/Users/gregu/Documents/rsc/rsc/nb/ClassRegistry.h
  W078 Remove virtual tag: function is an override or final
    53:    virtual void Display(std::ostream& stream,
    58:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliAppData.h
  W053 Data could be const
    93:    Id id_;
  W065 Base class virtual destructor is not public
    85:    virtual ~CliAppData();
  W075 Virtual function is public
    66:    virtual void EventOccurred(Event evt);
  W078 Remove virtual tag: function is an override or final
    70:    virtual void Display(std::ostream& stream,
    75:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliBoolParm.h
  W060 Base class constructor is public
    39:    explicit CliBoolParm(const char* help,
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Patch(sel_t selector, void* arguments) override;
    52:    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const override;
    56:    virtual bool ShowValues(std::string& values) const override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliBuffer.h
  W078 Remove virtual tag: function is an override or final
    114:    virtual void Display(std::ostream& stream,
    119:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliCharParm.h
  W043 Member could be protected
    39:    CliCharParm(const char* help, const char* chars,
  W054 Data could be const pointer
    69:    const char* chars_;
  W060 Base class constructor is public
    39:    CliCharParm(const char* help, const char* chars,
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    57:    virtual Rc GetCharParmRc(char& c, CliThread& cli) const override;
    61:    virtual bool ShowValues(std::string& values) const override;
  W082 Adjacent arguments have the same type
    39:    CliCharParm(const char* help, const char* chars,
C:/Users/gregu/Documents/rsc/rsc/nb/CliCommand.h
  W075 Virtual function is public
    71:    virtual Rc GetTextParmRc
  W078 Remove virtual tag: function is an override or final
    55:    virtual Rc GetIntParmRc(word& n, CliThread& cli) const override;
    59:    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const override;
    63:    virtual Rc GetCharParmRc(char& c, CliThread& cli) const override;
    67:    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const override;
    71:    virtual Rc GetTextParmRc
    76:    virtual Rc GetStringRc(std::string& s, CliThread& cli) const override;
    80:    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const override;
    84:    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
    94:    virtual void Patch(sel_t selector, void* arguments) override;
    126:    virtual bool Ascend() const override { return false; }
  W082 Adjacent arguments have the same type
    100:    CliCommand(const char* comm, const char* help, uint32_t size = 32);
  W092 Function could be free
    132:    static Rc Exhausted(const CliThread& cli, const std::string& type);
C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.cpp
  W006 reinterpret_cast
    79:    auto& commands = reinterpret_cast< Registry< CliCommand >& >(Parms());
    159:    auto& commands = reinterpret_cast< const Registry< CliCommand >& >(Parms());
  W007 Cast down the inheritance hierarchy
    79:    auto& commands = reinterpret_cast< Registry< CliCommand >& >(Parms());
    159:    auto& commands = reinterpret_cast< const Registry< CliCommand >& >(Parms());
C:/Users/gregu/Documents/rsc/rsc/nb/CliCommandSet.h
  W078 Remove virtual tag: function is an override or final
    48:    virtual bool BindParm(CliParm& parm) override;
    52:    virtual void Patch(sel_t selector, void* arguments) override;
    67:    virtual word ProcessCommand(CliThread& cli) const override;
  W082 Adjacent arguments have the same type
    58:    CliCommandSet(const char* comm, const char* help, uint32_t size = 32);
  W092 Function could be free
    63:    static void DescendTo(CliCookie& cookie, uint32_t index);
C:/Users/gregu/Documents/rsc/rsc/nb/CliCookie.cpp
  W106 Function does not invoke Debug::ft
    136: uint32_t CliCookie::Index(uint32_t depth) const
C:/Users/gregu/Documents/rsc/rsc/nb/CliCookie.h
  W078 Remove virtual tag: function is an override or final
    81:    virtual void Display(std::ostream& stream,
    86:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.cpp
  W006 reinterpret_cast
    103:    auto fake = reinterpret_cast< const CliIncrement* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/CliIncrement.h
  W053 Data could be const
    106:    RegCell iid_;
  W054 Data could be const pointer
    110:    const char* name_;
    114:    const char* help_;
  W075 Virtual function is public
    66:    virtual void Enter();
    71:    virtual void Exit();
  W077 Virtual function has no overrides
    71:    virtual void Exit();
  W078 Remove virtual tag: function is an override or final
    83:    virtual void Display(std::ostream& stream,
    88:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    93:    CliIncrement(const char* name, const char* help, uint32_t size = 32);
C:/Users/gregu/Documents/rsc/rsc/nb/CliIntParm.h
  W053 Data could be const
    79:    word min_;
    83:    word max_;
    87:    bool hex_;
  W060 Base class constructor is public
    49:    CliIntParm(const char* help, word min, word max,
  W078 Remove virtual tag: function is an override or final
    58:    virtual void Display(std::ostream& stream,
    63:    virtual void Patch(sel_t selector, void* arguments) override;
    67:    virtual Rc GetIntParmRc(word& n, CliThread& cli) const override;
    71:    virtual bool ShowValues(std::string& values) const override;
  W082 Adjacent arguments have the same type
    49:    CliIntParm(const char* help, word min, word max,
C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.cpp
  W006 reinterpret_cast
    96:    auto fake = reinterpret_cast< const CliParm* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/CliParm.h
  W032 Unused function
    168:    bool GetCharParm(char& c, CliThread& cli) const;
  W043 Member could be protected
    158:    bool GetBoolParm(bool& b, CliThread& cli) const;
    178:    bool GetPtrParm(void*& p, CliThread& cli) const;
    204:    bool GetTextParm(id_t& i, std::string& s, CliThread& cli) const;
    238:    bool GetIdentifier(std::string& s, CliThread& cli,
    253:    bool IsOptional() const { return opt_; }
  W054 Data could be const pointer
    332:    const char* help_;
    340:    const char* tag_;
  W075 Virtual function is public
    135:    virtual CliParm* AccessParm(CliCookie& cookie, uint32_t depth) const;
    143:    virtual void Explain(std::ostream& stream, col_t indent) const;
    153:    virtual Rc GetIntParmRc(word& n, CliThread& cli) const;
    163:    virtual Rc GetBoolParmRc(bool& b, CliThread& cli) const;
    173:    virtual Rc GetCharParmRc(char& c, CliThread& cli) const;
    183:    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const;
    211:    virtual Rc GetTextParmRc(id_t& i, std::string& s, CliThread& cli) const;
    221:    virtual Rc GetStringRc(std::string& s, CliThread& cli) const;
    231:    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const;
    244:    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  W078 Remove virtual tag: function is an override or final
    273:    virtual void Display(std::ostream& stream,
    278:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    238:    bool GetIdentifier(std::string& s, CliThread& cli,
    244:    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
  W092 Function could be free
    323:    static Rc Mismatch(const CliThread& cli, const std::string& type);
C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.cpp
  W004 C-style cast
    98:          p = (void*) n;
C:/Users/gregu/Documents/rsc/rsc/nb/CliPtrParm.h
  W043 Member could be protected
    38:    explicit CliPtrParm(const char* help,
  W060 Base class constructor is public
    38:    explicit CliPtrParm(const char* help,
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Patch(sel_t selector, void* arguments) override;
    51:    virtual Rc GetPtrParmRc(void*& p, CliThread& cli) const override;
    55:    virtual bool ShowValues(std::string& values) const override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliRegistry.cpp
  W117 Line can merge with the next line and be under the length limit
    85:    stream << prefix
C:/Users/gregu/Documents/rsc/rsc/nb/CliRegistry.h
  W078 Remove virtual tag: function is an override or final
    69:    virtual void Display(std::ostream& stream,
    74:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliStack.h
  W078 Remove virtual tag: function is an override or final
    67:    virtual void Display(std::ostream& stream,
    72:    virtual void Patch(sel_t selector, void* arguments) override;
  W117 Line can merge with the next line and be under the length limit
    60:    const CliCommand* FindCommand
C:/Users/gregu/Documents/rsc/rsc/nb/CliText.h
  W042 Member could be private
    61:    const char* HelpText() const;
  W043 Member could be protected
    65:    const Registry< CliParm >& Parms() const { return parms_; }
  W054 Data could be const pointer
    111:    const char* text_;
  W060 Base class constructor is public
    48:    CliText(const char* help, const char* text,
  W075 Virtual function is public
    69:    virtual bool BindParm(CliParm& parm);
  W078 Remove virtual tag: function is an override or final
    73:    virtual void Display(std::ostream& stream,
    78:    virtual void Patch(sel_t selector, void* arguments) override;
    86:    virtual CliParm* AccessParm
    91:    virtual void Explain(std::ostream& stream, col_t indent) const override;
    95:    virtual Rc GetTextParmRc
    100:    virtual bool ShowValues(std::string& values) const override;
  W082 Adjacent arguments have the same type
    48:    CliText(const char* help, const char* text,
C:/Users/gregu/Documents/rsc/rsc/nb/CliTextParm.h
  W060 Base class constructor is public
    49:    explicit CliTextParm(const char* help, bool opt = false,
  W078 Remove virtual tag: function is an override or final
    64:    virtual void Display(std::ostream& stream,
    69:    virtual void Patch(sel_t selector, void* arguments) override;
    73:    virtual CliParm* AccessParm
    78:    virtual void Explain(std::ostream& stream, col_t indent) const override;
    82:    virtual Rc GetTextParmRc
    87:    virtual Rc GetStringRc(std::string& s, CliThread& cli) const override;
    91:    virtual Rc GetFileNameRc(std::string& s, CliThread& cli) const override;
    95:    virtual Rc GetIdentifierRc(std::string& s, CliThread& cli,
    100:    virtual bool ShowValues(std::string& values) const override;
C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.cpp
  W106 Function does not invoke Debug::ft
    363: CliAppData* CliThread::GetAppData(CliAppData::Id aid) const
C:/Users/gregu/Documents/rsc/rsc/nb/CliThread.h
  W032 Unused function
    112:    word Result() const { return result_; }
  W050 Data is not private
    178:    std::unique_ptr< CliBuffer > ibuf;
    182:    ostringstreamPtr obuf;
  W078 Remove virtual tag: function is an override or final
    165:    virtual void Startup(RestartLevel level) override;
    169:    virtual void Display(std::ostream& stream,
    174:    virtual void Patch(sel_t selector, void* arguments) override;
    221:    virtual const char* AbbrName() const override;
    226:    virtual void Enter() override;
    230:    virtual void Recreated() override;
    234:    virtual void Destroy() override;
    238:    virtual void Cleanup() override;
  W082 Adjacent arguments have the same type
    90:    char CharPrompt(const std::string& prompt,
    208:    void Report1
C:/Users/gregu/Documents/rsc/rsc/nb/Clock.h
  W032 Unused function
    72:    ticks_t TicksPerSec();
    121:    ticks_t UsecsToTicks(usecs_t usecs);
    125:    const SysTime& TimeZero();
C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.cpp
  W007 Cast down the inheritance hierarchy
    85:       auto req = static_cast< StreamRequest* >(msg);
  W047 Data is init-only
    93:       FunctionGuard guard(FunctionGuard::MakePreemptable);
    139:       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
C:/Users/gregu/Documents/rsc/rsc/nb/CoutThread.h
  W078 Remove virtual tag: function is an override or final
    52:    virtual void Patch(sel_t selector, void* arguments) override;
    64:    virtual const char* AbbrName() const override;
    68:    virtual void Enter() override;
    72:    virtual void Destroy() override;
  W092 Function could be free
    48:    static void Spool(const char* s, bool eol = false);
C:/Users/gregu/Documents/rsc/rsc/nb/Debug.cpp
  W106 Function does not invoke Debug::ft
    47: void Debug::Assert(bool condition, debug32_t errval)
    140: void Debug::Reset()
  W107 Function does not invoke Debug::ft as first statement
    74:    Debug::ft(Debug_GenerateSwLog);
C:/Users/gregu/Documents/rsc/rsc/nb/Debug.h
  W082 Adjacent arguments have the same type
    69:    static void SwLog(fn_name_arg func, debug64_t errval,
  W092 Function could be free
    76:    static void Assert(bool condition, debug32_t errval = 0);
    81:    static void Progress(const std::string& s, bool force = false);
    85:    static void noop();
    129:    static void GenerateSwLog(fn_name_arg func, const std::string& errstr,
C:/Users/gregu/Documents/rsc/rsc/nb/Dynamic.h
  W032 Unused function
    56:    static void* operator new[](size_t size);
  W078 Remove virtual tag: function is an override or final
    47:    virtual MemoryType MemType() const override { return MemDyn; }
    51:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    43:    virtual ~Dynamic() { }
C:/Users/gregu/Documents/rsc/rsc/nb/Element.h
  W078 Remove virtual tag: function is an override or final
    70:    virtual void Display(std::ostream& stream,
    75:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    46:    static std::string strTimePlace();
C:/Users/gregu/Documents/rsc/rsc/nb/ElementException.h
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    61:    virtual const char* what() const noexcept override;
C:/Users/gregu/Documents/rsc/rsc/nb/Exception.cpp
  W107 Function does not invoke Debug::ft as first statement
    45:    Debug::ft(Exception_ctor1);
C:/Users/gregu/Documents/rsc/rsc/nb/Exception.h
  W032 Unused function
    60:    Exception(const Exception& that);
    61:    Exception(Exception&& that);
  W042 Member could be private
    69:    Exception& operator=(const Exception& that) = delete;
  W065 Base class virtual destructor is not public
    65:    virtual ~Exception() noexcept;
  W075 Virtual function is public
    45:    virtual void Display(std::ostream& stream, const std::string& prefix) const;
  W078 Remove virtual tag: function is an override or final
    74:    virtual const char* what() const noexcept override;
C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.cpp
  W007 Cast down the inheritance hierarchy
    218:       auto req = static_cast< FileRequest* >(msg);
  W032 Unused function
    55:    FileRequest(const FileRequest& that);
  W047 Data is init-only
    228:       FunctionGuard guard(FunctionGuard::MakePreemptable);
    301:       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
  W078 Remove virtual tag: function is an override or final
    71:    virtual void Display(ostream& stream,
    76:    virtual void Patch(sel_t selector, void* arguments) override;
    80:    virtual void Cleanup() override;
C:/Users/gregu/Documents/rsc/rsc/nb/FileThread.h
  W078 Remove virtual tag: function is an override or final
    69:    virtual void Patch(sel_t selector, void* arguments) override;
    81:    virtual const char* AbbrName() const override;
    85:    virtual void Enter() override;
    89:    virtual void Destroy() override;
  W082 Adjacent arguments have the same type
    56:    static void Spool(const std::string& name,
  W092 Function could be free
    44:    static ostringstreamPtr CreateStream();
    56:    static void Spool(const std::string& name,
    61:    static void Record(const std::string& s, bool eol = false);
    65:    static void Truncate(const std::string& name);
C:/Users/gregu/Documents/rsc/rsc/nb/Formatters.h
  W082 Adjacent arguments have the same type
    100:    std::string strCenter(const std::string& s, size_t breadth, size_t blanks);
C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.cpp
  W106 Function does not invoke Debug::ft
    40: int FunctionName::compare(fn_name_arg func, const char* str)
    47: size_t FunctionName::find(fn_name_arg func, const char* str)
    55: size_t FunctionName::rfind(fn_name_arg func, const char* str)
C:/Users/gregu/Documents/rsc/rsc/nb/FunctionName.h
  W032 Unused function
    39:    size_t find(fn_name_arg func, const char* str);
C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.cpp
  W004 C-style cast
    391:          auto src = (ptr_t) this;
  W007 Cast down the inheritance hierarchy
    91:       auto curr = static_cast< FunctionTrace* >(rec);
    125:       auto curr = static_cast< FunctionTrace* >(rec);
    189:                   auto last = static_cast< const FunctionTrace* >(rec);
    266:       auto curr = static_cast< FunctionTrace* >(rec);
    305:          curr = static_cast< FunctionTrace* >(rec);
    373:       curr = static_cast< FunctionTrace* >(rec);
    426:          auto curr = static_cast< FunctionTrace* >(rec);
    491:          auto curr = static_cast< FunctionTrace* >(rec);
  W009 Pointer arithmetic
    392:          auto dst = src + sizeof(FunctionTrace);
C:/Users/gregu/Documents/rsc/rsc/nb/FunctionTrace.h
  W078 Remove virtual tag: function is an override or final
    80:    virtual bool Display(std::ostream& stream, bool diff) override;
  W112 Function could be defaulted
    42:    virtual ~FunctionTrace() { }
C:/Users/gregu/Documents/rsc/rsc/nb/Immutable.h
  W032 Unused function
    55:    static void* operator new[](size_t size);
  W078 Remove virtual tag: function is an override or final
    46:    virtual MemoryType MemType() const override { return MemImm; }
    50:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    42:    virtual ~Immutable() { }
C:/Users/gregu/Documents/rsc/rsc/nb/InitFlags.cpp
  W106 Function does not invoke Debug::ft
    28: bool InitFlags::AllowBreak()
    39: bool InitFlags::CauseTimeout()
    48: bool InitFlags::ImmediateTrace()
    57: bool InitFlags::TraceInit()
    68: bool InitFlags::TraceWork()
C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.cpp
  W047 Data is init-only
    307:    FunctionGuard guard(FunctionGuard::MakeUnpreemptable);
C:/Users/gregu/Documents/rsc/rsc/nb/InitThread.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Display(std::ostream& stream,
    52:    virtual void Patch(sel_t selector, void* arguments) override;
    106:    virtual const char* AbbrName() const override;
    112:    virtual void Enter() override;
    116:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/LeakyBucketCounter.h
  W078 Remove virtual tag: function is an override or final
    61:    virtual void Display(std::ostream& stream,
    66:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/Log.h
  W092 Function could be free
    46:    static void Spool(ostringstreamPtr& log);
    50:    static std::string FileName();
C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.cpp
  W007 Cast down the inheritance hierarchy
    109:       auto req = static_cast< StreamRequest* >(msg);
  W047 Data is init-only
    187:       guard(FunctionGuard::MakeUnpreemptable, faction <= PayloadFaction);
C:/Users/gregu/Documents/rsc/rsc/nb/LogThread.h
  W078 Remove virtual tag: function is an override or final
    43:    virtual void Display(std::ostream& stream,
    48:    virtual void Patch(sel_t selector, void* arguments) override;
    66:    virtual const char* AbbrName() const override;
    70:    virtual void Enter() override;
    74:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/Memory.cpp
  W004 C-style cast
    227:    auto seg = (Segment*) addr;
    284:    auto segment = (Segment*) getptr1(addr, SegmentHeader::Size());
    335:    auto source = (Segment*) getptr1(addr, SegmentHeader::Size());
    386:    auto source = (Segment*) getptr1(addr, SegmentHeader::Size());
  W092 Function could be free
    151:    static size_t Size();
  W106 Function does not invoke Debug::ft
    154: size_t SegmentHeader::Size()
    171: SysHeap* Memory::AccessHeap(MemoryType type)
    189: size_t Memory::Align(size_t size, size_t log2align)
    257: SysHeap* Memory::EnsureHeap(MemoryType type)
    311: const SysHeap* Memory::Heap(MemoryType type)
    405: size_t Memory::Words(size_t nBytes)
C:/Users/gregu/Documents/rsc/rsc/nb/Memory.h
  W032 Unused function
    56:    static void Set(void* dest, byte_t value, size_t nBytes);
    79:    static bool Verify(MemoryType type, void* addr);
  W092 Function could be free
    44:    static size_t Align(size_t size, size_t log2align = BYTES_PER_WORD_LOG2);
    48:    static size_t Words(size_t nBytes);
    52:    static void Copy(void* dest, const void* source, size_t nBytes);
    56:    static void Set(void* dest, byte_t value, size_t nBytes);
    74:    static void* Realloc(void* addr, size_t nBytes);
    83:    static MemoryType Type(const void* addr);
    91:    static void Shutdown(RestartLevel level);
    99:    static SysHeap* EnsureHeap(MemoryType type);
    103:    static SysHeap* AccessHeap(MemoryType type);
C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.cpp
  W007 Cast down the inheritance hierarchy
    66:       auto curr = static_cast< MemoryTrace* >(rec);
C:/Users/gregu/Documents/rsc/rsc/nb/MemoryTrace.h
  W078 Remove virtual tag: function is an override or final
    49:    virtual bool Display(std::ostream& stream, bool diff) override;
    53:    virtual const char* EventString() const override;
  W092 Function could be free
    57:    static const char* TypeString(MemoryType type);
C:/Users/gregu/Documents/rsc/rsc/nb/Module.cpp
  W006 reinterpret_cast
    64:    auto fake = reinterpret_cast< const Module* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/Module.h
  W032 Unused function
    103:    ModuleId Mid() const { return mid_.GetId(); }
    111:    virtual ModuleId* Dependencies(size_t& count) const;
  W065 Base class virtual destructor is not public
    146:    virtual ~Module();
  W075 Virtual function is public
    111:    virtual ModuleId* Dependencies(size_t& count) const;
  W077 Virtual function has no overrides
    111:    virtual ModuleId* Dependencies(size_t& count) const;
  W078 Remove virtual tag: function is an override or final
    118:    virtual void Startup(RestartLevel level) override;
    123:    virtual void Shutdown(RestartLevel level) override;
    131:    virtual void Display(std::ostream& stream,
    136:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.cpp
  W005 Functional cast
    106:          return RestartLevel(errval_);
  W106 Function does not invoke Debug::ft
    152: Module* ModuleRegistry::GetModule(ModuleId mid) const
C:/Users/gregu/Documents/rsc/rsc/nb/ModuleRegistry.h
  W078 Remove virtual tag: function is an override or final
    54:    virtual void Display(std::ostream& stream,
    59:    virtual void Patch(sel_t selector, void* arguments) override;
    95:    virtual void Startup(RestartLevel level) override;
    99:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    87:    static RestartLevel NextLevel();
C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.cpp
  W106 Function does not invoke Debug::ft
    74: TraceStatus MsgBuffer::GetStatus() const
C:/Users/gregu/Documents/rsc/rsc/nb/MsgBuffer.h
  W060 Base class constructor is public
    41:    MsgBuffer();
    45:    MsgBuffer(const MsgBuffer& that);
  W075 Virtual function is public
    62:    virtual TraceStatus GetStatus() const;
  W078 Remove virtual tag: function is an override or final
    66:    virtual void Display(std::ostream& stream,
    71:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/MutexGuard.cpp
  W107 Function does not invoke Debug::ft as first statement
    38:    Debug::ft(MutexGuard_ctor);
    51:       Debug::ft(MutexGuard_dtor);
C:/Users/gregu/Documents/rsc/rsc/nb/NbAppIds.h
  W028 Unused data
    69: constexpr FlagId FirstAppDebugFlag = 8;
C:/Users/gregu/Documents/rsc/rsc/nb/NbCliParms.cpp
  W106 Function does not invoke Debug::ft
    114: word ExplainTraceRc(const CliThread& cli, TraceRc rc)
C:/Users/gregu/Documents/rsc/rsc/nb/NbCliParms.h
  W028 Unused data
    68: extern fixed_string NotImplementedExpl;
  W082 Adjacent arguments have the same type
    120: CliParm::Rc GetCBV(const CliCommand& comm, CliThread& cli, bool& c, bool& v);
C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.cpp
  W005 Functional cast
    485:       rc = nbt->SelectFaction(Faction(id), TraceDefault);
    693:       rc = nbt->SelectFaction(Faction(id), TraceExcluded);
    1090:       rc = nbt->SelectFaction(Faction(id), TraceIncluded);
    2509:       auto heap = Memory::Heap(MemoryType(m));
  W042 Member could be private
    1961:    static void SendAckToOutputFile(const CliThread& cli);
  W047 Data is init-only
    1765:    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  W078 Remove virtual tag: function is an override or final
    115:    virtual word ProcessCommand(CliThread& cli) const override;
    206:    virtual word ProcessCommand(CliThread& cli) const override;
    285:    virtual word ProcessCommand(CliThread& cli) const override;
    521:    virtual word ProcessCommand(CliThread& cli) const override;
    561:    virtual word ProcessCommand(CliThread& cli) const override;
    608:    virtual word ProcessCommand(CliThread& cli) const override;
    716:    virtual word ProcessCommand(CliThread& cli) const override;
    757:    virtual word ProcessCommand(CliThread& cli) const override;
    960:    virtual word ProcessCommand(CliThread& cli) const override;
    1113:    virtual word ProcessCommand(CliThread& cli) const override;
    1197:    virtual word ProcessCommand(CliThread& cli) const override;
    1253:    virtual word ProcessCommand(CliThread& cli) const override;
    1314:    virtual word ProcessCommand(CliThread& cli) const override;
    1348:    virtual word ProcessCommand(CliThread& cli) const override;
    1452:    virtual word ProcessCommand(CliThread& cli) const override;
    1511:    virtual word ProcessCommand(CliThread& cli) const override;
    1592:    virtual word ProcessCommand(CliThread& cli) const override;
    1812:    virtual word ProcessCommand(CliThread& cli) const override;
    1963:    virtual word ProcessCommand(CliThread& cli) const override;
    2220:    virtual word ProcessCommand(CliThread& cli) const override;
    2260:    virtual word ProcessCommand(CliThread& cli) const override;
    2335:    virtual word ProcessCommand(CliThread& cli) const override;
    2562:    virtual word ProcessCommand(CliThread& cli) const override;
    2625:    virtual word ProcessCommand(CliThread& cli) const override;
    2794:    virtual word ProcessCommand(CliThread& cli) const override;
    2863:    virtual word ProcessCommand(CliThread& cli) const override;
  W092 Function could be free
    758:    static word DisplayHelpFile(const CliThread& cli, const string& name);
    1961:    static void SendAckToOutputFile(const CliThread& cli);
  W117 Line can merge with the next line and be under the length limit
    2487: fixed_string PoolsHeader1 =
C:/Users/gregu/Documents/rsc/rsc/nb/NbIncrement.h
  W028 Unused data
    181:    static const id_t LastNbIndex     = 3;
  W060 Base class constructor is public
    41:    StatusCommand();
    55:    LogsAction();
    67:    explicit LogsCommand(bool bind = true);
    83:    SetWhatParm();
    96:    explicit SetCommand(bool bind = true);
    112:    IncludeWhatParm();
    126:    explicit IncludeCommand(bool bind = true);
    142:    ExcludeWhatParm();
    155:    explicit ExcludeCommand(bool bind = true);
    185:    explicit QueryCommand(bool bind = true);
    201:    SaveWhatParm();
    213:    explicit SaveCommand(bool bind = true);
    229:    ClearWhatParm();
    247:    explicit ClearCommand(bool bind = true);
  W078 Remove virtual tag: function is an override or final
    44:    virtual word ProcessCommand(CliThread& cli) const override;
    70:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    72:    virtual word ProcessCommand(CliThread& cli) const override;
    99:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    101:    virtual word ProcessCommand(CliThread& cli) const override;
    129:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    131:    virtual word ProcessCommand(CliThread& cli) const override;
    158:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    160:    virtual word ProcessCommand(CliThread& cli) const override;
    188:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    190:    virtual word ProcessCommand(CliThread& cli) const override;
    216:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    218:    virtual word ProcessCommand(CliThread& cli) const override;
    250:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    252:    virtual word ProcessCommand(CliThread& cli) const override;
  W111 Override of Object.Patch not found
    38: class StatusCommand : public CliCommand
    59: class LogsCommand : public CliCommand
    87: class SetCommand : public CliCommand
    116: class IncludeCommand : public CliCommand
    146: class ExcludeCommand : public CliCommand
    175: class QueryCommand : public CliCommand
    205: class SaveCommand : public CliCommand
    233: class ClearCommand : public CliCommand
  W112 Function could be defaulted
    42:    virtual ~StatusCommand() { }
    56:    virtual ~LogsAction() { }
    68:    virtual ~LogsCommand() { }
    84:    virtual ~SetWhatParm() { }
    97:    virtual ~SetCommand() { }
    113:    virtual ~IncludeWhatParm() { }
    127:    virtual ~IncludeCommand() { }
    143:    virtual ~ExcludeWhatParm() { }
    156:    virtual ~ExcludeCommand() { }
    172:    virtual ~QueryWhatParm() { }
    186:    virtual ~QueryCommand() { }
    202:    virtual ~SaveWhatParm() { }
    214:    virtual ~SaveCommand() { }
    230:    virtual ~ClearWhatParm() { }
    248:    virtual ~ClearCommand() { }
C:/Users/gregu/Documents/rsc/rsc/nb/NbModule.h
  W047 Data is init-only
    64:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    40:    virtual void Patch(sel_t selector, void* arguments) override;
    52:    virtual void Startup(RestartLevel level) override;
    56:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    60:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/nb/NbPools.h
  W078 Remove virtual tag: function is an override or final
    45:    virtual void ClaimBlocks() override;
    49:    virtual void Patch(sel_t selector, void* arguments) override;
    72:    virtual void ClaimBlocks() override;
    76:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.cpp
  W005 Functional cast
    207:             stream << Faction(f) << CRLF;
  W078 Remove virtual tag: function is an override or final
    53:    virtual const char* Name() const override { return TraceBufferToolName; }
    54:    virtual const char* Expl() const override { return TraceBufferToolExpl; }
    70:    virtual const char* Name() const override { return FunctionTraceToolName; }
    71:    virtual const char* Expl() const override { return FunctionTraceToolExpl; }
    72:    virtual string Status() const override;
    100:    virtual const char* Name() const override { return MemoryTraceToolName; }
    101:    virtual const char* Expl() const override { return MemoryTraceToolExpl; }
  W106 Function does not invoke Debug::ft
    172: TraceStatus NbTracer::FactionStatus(Faction faction) const
C:/Users/gregu/Documents/rsc/rsc/nb/NbTracer.h
  W042 Member could be private
    77:    static bool ThreadsEmpty();
  W092 Function could be free
    73:    static TraceRc SelectThread(ThreadId tid, TraceStatus status);
    77:    static bool ThreadsEmpty();
  W110 Override of Base.Display not found
    63: class NbTracer : public Permanent
  W111 Override of Object.Patch not found
    63: class NbTracer : public Permanent
C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.cpp
  W103 Function not sorted in standard order
    76: char FactionChar(Faction faction)
  W106 Function does not invoke Debug::ft
    45: char BlockingReasonChar(BlockingReason reason)
    76: char FactionChar(Faction faction)
C:/Users/gregu/Documents/rsc/rsc/nb/NbTypes.h
  W030 Unused enumerator
    44:    DispOption_N  // number of reasons; can be used to extend this enum
    74:    IdleFaction,         // idle thread (not used)
  W033 Unused typedef
    175: typedef std::basic_string<char, CharTraits, ImmAllocator<char>>  ImmString;
    176: typedef std::basic_string<char, CharTraits, PermAllocator<char>> PermString;
    177: typedef std::basic_string<char, CharTraits, ProtAllocator<char>> ProtString;
  W099 Line contains adjacent spaces
    174: typedef std::basic_string<char, CharTraits, DynAllocator<char>>  DynString;
    175: typedef std::basic_string<char, CharTraits, ImmAllocator<char>>  ImmString;
C:/Users/gregu/Documents/rsc/rsc/nb/Object.cpp
  W006 reinterpret_cast
    141:    auto obj = reinterpret_cast< ObjectStruct* >(this);
  W106 Function does not invoke Debug::ft
    71: Object::ClassId Object::GetClassId() const
    82: bool Object::GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid)
    109: Object::ObjectId Object::GetObjectId() const
C:/Users/gregu/Documents/rsc/rsc/nb/Object.h
  W032 Unused function
    95:    ClassId GetClassId() const;
    107:    ObjectId GetObjectId() const;
    113:    static bool GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid);
    121:    static void* operator new(size_t size, MemoryType type);
    122:    static void* operator new[](size_t size, MemoryType type);
    124:    static void operator delete[](void* addr);
    125:    static void operator delete(void* addr, MemoryType type);
    126:    static void operator delete[](void* addr, MemoryType type);
    135:    void MorphTo(Class& target);
  W042 Member could be private
    70:    typedef uint32_t InstanceId;  // identifies an object within a Class
    71:    typedef uint32_t ObjectId;    // ClassId (12 bits) + InstanceId (20 bits)
    101:    virtual InstanceId GetInstanceId() const;
  W043 Member could be protected
    48:    typedef uint8_t sel_t;
    57:    virtual void Patch(sel_t selector, void* arguments) { }
    69:    typedef id_t ClassId;         // identifies a Class
  W053 Data could be const
    140:    uintptr_t patchArea_;
  W075 Virtual function is public
    57:    virtual void Patch(sel_t selector, void* arguments) { }
    82:    virtual Class* GetClass() const;
    90:    virtual void PostInitialize() { }
    101:    virtual InstanceId GetInstanceId() const;
  W077 Virtual function has no overrides
    82:    virtual Class* GetClass() const;
    90:    virtual void PostInitialize() { }
    101:    virtual InstanceId GetInstanceId() const;
  W078 Remove virtual tag: function is an override or final
    61:    virtual void Display(std::ostream& stream,
    117:    virtual MemoryType MemType() const override;
  W092 Function could be free
    113:    static bool GetClassInstanceId(ObjectId oid, Class*& cls, InstanceId& iid);
  W112 Function could be defaulted
    44:    virtual ~Object() { }
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.cpp
  W004 C-style cast
    237:       blocks_[currSegments_] = (uword*) Memory::Alloc(size, type_, false);
    260:          auto b = (ObjectBlock*) &seg[j];
    312:             auto b = (ObjectBlock*) &seg[j];
    349:             auto curr = (Pooled*) getptr1(item, diff);
    713:       return (ObjectBlock*) &blocks_[0][0];
    783:       return (ObjectBlock*) &blocks_[i][j];
    808:             auto b = (ObjectBlock*) &seg[j];
    840:    auto block = (const_ptr_t) ObjToBlock(obj);
    841:    auto maxdiff = (ptrdiff_t) (blockSize_ * (ObjectsPerSegment - 1));
    845:       auto b0 = (const_ptr_t) &blocks_[i][0];
    888:    return (ObjectBlock*) getptr1(obj, BlockHeader::Size);
    918:          auto b = (ObjectBlock*) &seg[j];
  W006 reinterpret_cast
    112:       reinterpret_cast< word* >(&pool->targSegments_), 0,
    476:    auto fake = reinterpret_cast< const ObjectPool* >(&local);
  W008 Cast removes const qualification
    841:    auto maxdiff = (ptrdiff_t) (blockSize_ * (ObjectsPerSegment - 1));
  W078 Remove virtual tag: function is an override or final
    81:    virtual void SetCurr() override;
  W099 Line contains adjacent spaces
    95:    CounterPtr      allocCount_;
    96:    CounterPtr      freeCount_;
    97:    CounterPtr      failCount_;
    98:    CounterPtr      auditCount_;
  W106 Function does not invoke Debug::ft
    276: size_t ObjectPool::AllocCount() const
    442: bool ObjectPool::BidToIndices(PooledObjectId bid, size_t& i, size_t& j) const
    697: size_t ObjectPool::FailCount() const
    742: size_t ObjectPool::FreeCount() const
    749: bool ObjectPool::IndicesToBid(size_t i, size_t j, PooledObjectId& bid) const
    761: size_t ObjectPool::InUseCount() const
    768: size_t ObjectPool::LowAvailCount() const
    775: ObjectBlock* ObjectPool::Next(PooledObjectId& bid) const
    794: Pooled* ObjectPool::NextUsed(PooledObjectId& bid) const
    867: ObjectPoolId ObjectPool::ObjPid(const Pooled* obj)
    876: PooledObjectSeqNo ObjectPool::ObjSeq(const Pooled* obj)
    885: ObjectBlock* ObjectPool::ObjToBlock(const Pooled* obj)
  W110 Override of Base.Display not found
    75: class ObjectPoolSizeCfg : public CfgIntParm
    88: class ObjectPoolStats : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPool.h
  W005 Functional cast
    88:    ObjectPoolId Pid() const { return ObjectPoolId(pid_.GetId()); }
  W042 Member could be private
    182:    static ptrdiff_t CellDiff();
  W053 Data could be const
    256:    RegCell pid_;
  W065 Base class virtual destructor is not public
    208:    virtual ~ObjectPool();
  W075 Virtual function is public
    99:    virtual Pooled* DeqBlock(size_t size);
    104:    virtual void EnqBlock(Pooled* obj, bool deleted);
    168:    virtual void DisplayStats(std::ostream& stream) const;
  W077 Virtual function has no overrides
    99:    virtual Pooled* DeqBlock(size_t size);
    104:    virtual void EnqBlock(Pooled* obj, bool deleted);
  W078 Remove virtual tag: function is an override or final
    186:    virtual void Startup(RestartLevel level) override;
    190:    virtual void Shutdown(RestartLevel level) override;
    194:    virtual void Display(std::ostream& stream,
    199:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    228:    bool BidToIndices(PooledObjectId bid, size_t& i, size_t& j) const;
    233:    bool IndicesToBid(size_t i, size_t j, PooledObjectId& bid) const;
  W092 Function could be free
    247:    static ObjectBlock* ObjToBlock(const Pooled* obj);
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolAudit.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Display(std::ostream& stream,
    52:    virtual void Patch(sel_t selector, void* arguments) override;
    73:    virtual const char* AbbrName() const override;
    77:    virtual void Enter() override;
    81:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.cpp
  W078 Remove virtual tag: function is an override or final
    55:    virtual const char* Name() const override { return ObjPoolTraceToolName; }
    56:    virtual const char* Expl() const override { return ObjPoolTraceToolExpl; }
    66:    virtual void DisplayStats(ostream& stream, id_t id) const override;
  W106 Function does not invoke Debug::ft
    289: ObjectPool* ObjectPoolRegistry::Pool(ObjectPoolId pid) const
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolRegistry.h
  W042 Member could be private
    56:    static bool NullifyObjectData() { return NullifyObjectData_; }
  W078 Remove virtual tag: function is an override or final
    60:    virtual void Startup(RestartLevel level) override;
    64:    virtual void Shutdown(RestartLevel level) override;
    68:    virtual void Display(std::ostream& stream,
    73:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/ObjectPoolTrace.h
  W078 Remove virtual tag: function is an override or final
    53:    virtual bool Display(std::ostream& stream, bool diff) override;
    57:    virtual const char* EventString() const override;
C:/Users/gregu/Documents/rsc/rsc/nb/Permanent.h
  W032 Unused function
    57:    static void* operator new[](size_t size);
  W078 Remove virtual tag: function is an override or final
    48:    virtual MemoryType MemType() const override { return MemPerm; }
    52:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    44:    virtual ~Permanent() { }
C:/Users/gregu/Documents/rsc/rsc/nb/PermanentHeap.cpp
  W106 Function does not invoke Debug::ft
    48: PermanentHeap* PermanentHeap::Instance()
C:/Users/gregu/Documents/rsc/rsc/nb/PermanentHeap.h
  W092 Function could be free
    41:    static PermanentHeap* Instance();
  W111 Override of Object.Patch not found
    36: class PermanentHeap : public SysHeap
C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.cpp
  W004 C-style cast
    142:    auto obj = (Pooled*) addr;
  W006 reinterpret_cast
    116:    auto fake = reinterpret_cast< const Pooled* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/Pooled.h
  W078 Remove virtual tag: function is an override or final
    67:    virtual void ClaimBlocks() override;
    73:    virtual void Claim() override;
    77:    virtual void Display(std::ostream& stream,
    82:    virtual MemoryType MemType() const override;
    86:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    49:    virtual ~Pooled() { }
C:/Users/gregu/Documents/rsc/rsc/nb/PooledClass.h
  W027 Unused class
    39: class PooledClass : public Class
  W032 Unused function
    53:    PooledClass(ClassId cid, size_t size);
    69:    bool SetPool(ObjectPool& pool);
  W078 Remove virtual tag: function is an override or final
    44:    virtual void Display(std::ostream& stream,
    49:    virtual void Patch(sel_t selector, void* arguments) override;
    73:    virtual Object* New(size_t size) override;
C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.cpp
  W006 reinterpret_cast
    69:    auto fake = reinterpret_cast< const PosixSignal* >(&local);
  W106 Function does not invoke Debug::ft
    124: Flags PS_Break()
    129: Flags PS_Delayed()
    134: Flags PS_Exit()
    139: Flags PS_Final()
    144: Flags PS_Interrupt()
    149: Flags PS_Native()
    154: Flags PS_NoError()
    159: Flags PS_NoLog()
    164: Flags PS_NoRecover()
C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignal.h
  W053 Data could be const
    114:    signal_t value_;
    126:    uint8_t severity_;
    130:    Flags attrs_;
    134:    RegCell sid_;
  W054 Data could be const pointer
    118:    const char* name_;
    122:    const char* expl_;
  W065 Base class virtual destructor is not public
    105:    virtual ~PosixSignal();
  W078 Remove virtual tag: function is an override or final
    89:    virtual void Display(std::ostream& stream,
    94:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    99:    PosixSignal(signal_t value, const char* name,
C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.cpp
  W106 Function does not invoke Debug::ft
    57: Flags PosixSignalRegistry::Attrs(signal_t value) const
    90: PosixSignal* PosixSignalRegistry::Find(signal_t value) const
    102: PosixSignal* PosixSignalRegistry::Find(const string& name) const
    153: signal_t PosixSignalRegistry::Value(const string& name) const
C:/Users/gregu/Documents/rsc/rsc/nb/PosixSignalRegistry.h
  W078 Remove virtual tag: function is an override or final
    74:    virtual void Display(std::ostream& stream,
    79:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/Protected.h
  W032 Unused function
    56:    static void* operator new[](size_t size);
  W078 Remove virtual tag: function is an override or final
    47:    virtual MemoryType MemType() const override { return MemProt; }
    51:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    43:    virtual ~Protected() { }
C:/Users/gregu/Documents/rsc/rsc/nb/Q1Link.cpp
  W107 Function does not invoke Debug::ft as first statement
    49:    Debug::ft(Q1Link_dtor);
C:/Users/gregu/Documents/rsc/rsc/nb/Q1Link.h
  W032 Unused function
    57:    bool IsQueued() const { return next != nullptr; }
  W114 Function could be tagged noexcept
    48:    Q1Link();
C:/Users/gregu/Documents/rsc/rsc/nb/Q1Way.h
  W088 Argument could be const
    79/1:    bool Enq(T& elem)
    100/1:    bool Henq(T& elem)
    122/1:    bool Insert(T* prev, T& elem)
    157/1:    bool Exq(T& elem)
    321/1:    void Corrupt(T* elem)
  W099 Line contains adjacent spaces
    387:    inline static fn_name Q1Way_ctor()   { return "Q1Way.ctor"; }
    388:    inline static fn_name Q1Way_dtor()   { return "Q1Way.dtor"; }
    389:    inline static fn_name Q1Way_Init()   { return "Q1Way.Init"; }
    390:    inline static fn_name Q1Way_Enq()    { return "Q1Way.Enq"; }
    391:    inline static fn_name Q1Way_Henq()   { return "Q1Way.Henq"; }
    393:    inline static fn_name Q1Way_Deq()    { return "Q1Way.Deq"; }
    394:    inline static fn_name Q1Way_Exq()    { return "Q1Way.Exq"; }
    395:    inline static fn_name Q1Way_Next()   { return "Q1Way.Next"; }
    396:    inline static fn_name Q1Way_Size()   { return "Q1Way.Size"; }
    397:    inline static fn_name Q1Way_Purge()  { return "Q1Way.Purge"; }
    398:    inline static fn_name Q1Way_Item()   { return "Q1Way.Item"; }
  W114 Function could be tagged noexcept
    54:    Q1Way() : diff_(NilDiff) { }
C:/Users/gregu/Documents/rsc/rsc/nb/Q2Link.cpp
  W106 Function does not invoke Debug::ft
    40: Q2Link::~Q2Link()
C:/Users/gregu/Documents/rsc/rsc/nb/Q2Link.h
  W032 Unused function
    57:    bool IsQueued() const { return next != nullptr; }
  W114 Function could be tagged noexcept
    48:    Q2Link();
C:/Users/gregu/Documents/rsc/rsc/nb/Q2Way.h
  W088 Argument could be const
    135/1:    bool Exq(T& elem)
  W090 Function could be const
    135:    bool Exq(T& elem)
  W099 Line contains adjacent spaces
    360:    inline static fn_name Q2Way_ctor()  { return "Q2Way.ctor"; }
    361:    inline static fn_name Q2Way_dtor()  { return "Q2Way.dtor"; }
    362:    inline static fn_name Q2Way_Init()  { return "Q2Way.Init"; }
    363:    inline static fn_name Q2Way_Enq()   { return "Q2Way.Enq"; }
    364:    inline static fn_name Q2Way_Henq()  { return "Q2Way.Henq"; }
    365:    inline static fn_name Q2Way_Deq()   { return "Q2Way.Deq"; }
    366:    inline static fn_name Q2Way_Exq()   { return "Q2Way.Exq"; }
    367:    inline static fn_name Q2Way_Next()  { return "Q2Way.Next"; }
    368:    inline static fn_name Q2Way_Prev()  { return "Q2Way.Prev"; }
    369:    inline static fn_name Q2Way_Size()  { return "Q2Way.Size"; }
    371:    inline static fn_name Q2Way_Item()  { return "Q2Way.Item"; }
  W114 Function could be tagged noexcept
    51:    Q2Way() : diff_(NilDiff) { }
C:/Users/gregu/Documents/rsc/rsc/nb/RegCell.cpp
  W106 Function does not invoke Debug::ft
    37: RegCell::~RegCell()
    49: void RegCell::SetId(id_t cid)
C:/Users/gregu/Documents/rsc/rsc/nb/RegCell.h
  W114 Function could be tagged noexcept
    50:    RegCell();
C:/Users/gregu/Documents/rsc/rsc/nb/Registry.h
  W088 Argument could be const
    266/1:    bool Erase(T& item)
  W099 Line contains adjacent spaces
    625:    inline static fn_name Registry_ctor()   { return "Registry.ctor"; }
    626:    inline static fn_name Registry_dtor()   { return "Registry.dtor"; }
    627:    inline static fn_name Registry_Init()   { return "Registry.Init"; }
    629:    inline static fn_name Registry_Erase()  { return "Registry.Erase"; }
    630:    inline static fn_name Registry_Next()   { return "Registry.Next"; }
    631:    inline static fn_name Registry_Prev()   { return "Registry.Prev"; }
    632:    inline static fn_name Registry_Size()   { return "Registry.Size"; }
    633:    inline static fn_name Registry_Empty()  { return "Registry.Empty"; }
    634:    inline static fn_name Registry_Purge()  { return "Registry.Purge"; }
    635:    inline static fn_name Registry_Cell()   { return "Registry.Cell"; }
C:/Users/gregu/Documents/rsc/rsc/nb/Restart.h
  W092 Function could be free
    80:    static void Initiate(reinit_t reason, debug32_t errval);
C:/Users/gregu/Documents/rsc/rsc/nb/RootThread.h
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Display(std::ostream& stream,
    55:    virtual void Patch(sel_t selector, void* arguments) override;
    75:    virtual const char* AbbrName() const override;
    82:    virtual void Enter() override;
    86:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/SignalException.h
  W078 Remove virtual tag: function is an override or final
    51:    virtual void Display(std::ostream& stream,
    56:    virtual const char* what() const noexcept override;
C:/Users/gregu/Documents/rsc/rsc/nb/Singleton.h
  W047 Data is init-only
    130:    static T* Instance_;
  W099 Line contains adjacent spaces
    126:       Singleton_Destroy()  { return "Singleton.Destroy"; }
C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.cpp
  W106 Function does not invoke Debug::ft
    125: Singletons* Singletons::Instance()
  W114 Function could be tagged noexcept
    42:    SingletonTuple(const Base** a, MemoryType t) : addr(a), type(t) { }
C:/Users/gregu/Documents/rsc/rsc/nb/Singletons.h
  W078 Remove virtual tag: function is an override or final
    64:    virtual void Display(std::ostream& stream,
    69:    virtual void Shutdown(RestartLevel level) override;
    73:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/SoftwareException.h
  W060 Base class constructor is public
    41:    SoftwareException
    43:    SoftwareException
  W078 Remove virtual tag: function is an override or final
    52:    virtual void Display(std::ostream& stream,
    57:    virtual const char* what() const noexcept override;
  W117 Line can merge with the next line and be under the length limit
    41:    SoftwareException
C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.cpp
  W006 reinterpret_cast
    89:    auto fake = reinterpret_cast< const Statistic* >(&local);
  W106 Function does not invoke Debug::ft
    117: uint64_t Statistic::Overall() const
    258: uint64_t HighWatermark::Overall() const
    334: uint64_t LowWatermark::Overall() const
C:/Users/gregu/Documents/rsc/rsc/nb/Statistics.h
  W042 Member could be private
    66:    static ptrdiff_t CellDiff();
  W043 Member could be protected
    62:    virtual void DisplayStat(std::ostream& stream) const;
  W050 Data is not private
    89:    std::atomic_size_t curr_;
    93:    std::atomic_size_t prev_;
    97:    std::atomic_uint64_t total_;
    101:    size_t divisor_;
  W053 Data could be const
    118:    RegCell sid_;
    122:    DynString expl_;
  W060 Base class constructor is public
    134:    explicit Counter(const std::string& expl, size_t divisor = 1);
  W075 Virtual function is public
    58:    virtual uint64_t Overall() const;
    62:    virtual void DisplayStat(std::ostream& stream) const;
  W078 Remove virtual tag: function is an override or final
    70:    virtual void Display(std::ostream& stream,
    75:    virtual void Patch(sel_t selector, void* arguments) override;
    146:    virtual void DisplayStat(std::ostream& stream) const override;
    150:    virtual void Patch(sel_t selector, void* arguments) override;
    198:    virtual uint64_t Overall() const override;
    202:    virtual void DisplayStat(std::ostream& stream) const override;
    206:    virtual void StartInterval(bool first) override;
    234:    virtual uint64_t Overall() const override;
    238:    virtual void DisplayStat(std::ostream& stream) const override;
    242:    virtual void StartInterval(bool first) override;
C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.cpp
  W006 reinterpret_cast
    81:    auto fake = reinterpret_cast< const StatisticsGroup* >(&local);
  W099 Line contains adjacent spaces
    39: fixed_string StatisticsGroup::ReportHeader =   "      Curr      Prev         All";
C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsGroup.h
  W042 Member could be private
    57:    id_t Gid() const { return gid_.GetId(); }
    61:    static ptrdiff_t CellDiff();
  W053 Data could be const
    100:    RegCell gid_;
    104:    DynString expl_;
  W075 Virtual function is public
    69:    virtual void DisplayStats(std::ostream& stream, id_t id) const;
  W078 Remove virtual tag: function is an override or final
    73:    virtual void Display(std::ostream& stream,
    78:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.cpp
  W007 Cast down the inheritance hierarchy
    62:       (static_cast< CfgFileTimeParm* >(reg->FindParm("StatsFileName")));
  W106 Function does not invoke Debug::ft
    147: StatisticsGroup* StatisticsRegistry::GetGroup(id_t gid) const
  W117 Line can merge with the next line and be under the length limit
    110:    stream << prefix
C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsRegistry.h
  W042 Member could be private
    77:    StatisticsGroup* GetGroup(id_t gid) const;
    81:    void DisplayStats(std::ostream& stream) const;
    85:    static std::string StatsFileName() { return StatsFileName_; }
  W078 Remove virtual tag: function is an override or final
    93:    virtual void Startup(RestartLevel level) override;
    97:    virtual void Display(std::ostream& stream,
    102:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    115:    void StartInterval(bool first);
C:/Users/gregu/Documents/rsc/rsc/nb/StatisticsThread.h
  W053 Data could be const
    53:    static secs_t LongIntervalSecs;
    58:    static secs_t ShortIntervalSecs;
    65:    static size_t WakeupsBetweenReports;
    70:    static ticks_t PrevToCurrTicks;
  W078 Remove virtual tag: function is an override or final
    43:    virtual void Display(std::ostream& stream,
    48:    virtual void Patch(sel_t selector, void* arguments) override;
    87:    virtual const char* AbbrName() const override;
    92:    virtual void Enter() override;
    96:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.cpp
  W018 Remove #include directive
    25: #include <sstream>
C:/Users/gregu/Documents/rsc/rsc/nb/StreamRequest.h
  W043 Member could be protected
    57:    StreamRequest(const StreamRequest& that);
  W060 Base class constructor is public
    52:    StreamRequest();
    57:    StreamRequest(const StreamRequest& that);
  W078 Remove virtual tag: function is an override or final
    76:    virtual void Display(std::ostream& stream,
    81:    virtual void Patch(sel_t selector, void* arguments) override;
    85:    virtual void Cleanup() override;
C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.cpp
  W006 reinterpret_cast
    100:    auto fake = reinterpret_cast< const Symbol* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/Symbol.h
  W053 Data could be const
    96:    DynString name_;
    108:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    82:    virtual void Display(std::ostream& stream,
    87:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    52:    static const std::string& ValidNameChars();
    57:    static const std::string& InvalidInitialChars();
C:/Users/gregu/Documents/rsc/rsc/nb/SymbolRegistry.h
  W078 Remove virtual tag: function is an override or final
    73:    virtual void Display(std::ostream& stream,
    78:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    52:    bool BindSymbol
C:/Users/gregu/Documents/rsc/rsc/nb/SysConsole.cpp
  W106 Function does not invoke Debug::ft
    32: std::istream& SysConsole::In()
    39: ostream& SysConsole::Out()
C:/Users/gregu/Documents/rsc/rsc/nb/SysDecls.h
  W044 Typedef of pointer type
    46: typedef void* SysHeap_t;
    47: typedef void* SysThread_t;
    49: typedef void* SysMutex_t;
    50: typedef void* SysSentry_t;
C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.h
  W032 Unused function
    87:    void GetDir(std::string& dirName);
  W075 Virtual function is public
    46:    virtual void GetName(std::string& fileName) const = 0;
    50:    virtual bool IsSubdir() const = 0;
    54:    virtual bool AtEnd() const = 0;
    59:    virtual bool Advance() = 0;
  W082 Adjacent arguments have the same type
    99:    bool FindFiles(const char* dirName,
  W112 Function could be defaulted
    41:    virtual ~FileList() { }
    63:    FileList() { }
C:/Users/gregu/Documents/rsc/rsc/nb/SysFile.win.cpp
  W056 Default constructor invoked: POD members not initialized
    57:    _finddata_t attributes_;
  W062 Member not included in member initialization list
    40:    FileWalker(const char* dirName, const char* fileSpec);
    57:    _finddata_t attributes_;
  W078 Remove virtual tag: function is an override or final
    42:    virtual void GetName(string& fileName) const override;
    43:    virtual bool IsSubdir() const override;
    44:    virtual bool AtEnd() const override;
    45:    virtual bool Advance() override;
  W106 Function does not invoke Debug::ft
    99: bool FileWalker::AtEnd() const
    106: void FileWalker::GetName(string& fileName) const
    115: bool FileWalker::IsSubdir() const
C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.h
  W032 Unused function
    101:    static void* operator new[](size_t size);
    106:    static void operator delete[](void* addr);
  W078 Remove virtual tag: function is an override or final
    91:    virtual void Display(std::ostream& stream,
    96:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    55:    bool Validate(const void* addr);
  W092 Function could be free
    87:    static void DisplayHeaps(std::ostream& stream);
C:/Users/gregu/Documents/rsc/rsc/nb/SysHeap.win.cpp
  W004 C-style cast
    162:    aHeaps = (HANDLE*) HeapAlloc(DefaultProcessHeap, 0, BytesToAllocate);
C:/Users/gregu/Documents/rsc/rsc/nb/SysMemory.win.cpp
  W018 Remove #include directive
    23: #include "SysMemory.h"
C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.cpp
  W106 Function does not invoke Debug::ft
    48: Thread* SysMutex::Owner() const
C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.h
  W078 Remove virtual tag: function is an override or final
    78:    virtual void Display(std::ostream& stream,
    83:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/SysMutex.win.cpp
  W107 Function does not invoke Debug::ft as first statement
    107:    Debug::ft(SysMutex_Acquire);
C:/Users/gregu/Documents/rsc/rsc/nb/SysSignals.h
  W027 Unused class
    54:    class SigAlrm : public PosixSignal
    68:    class SigBus : public PosixSignal
    96:    class SigQuit : public PosixSignal
    110:    class SigSys : public PosixSignal
    124:    class SigVtAlrm : public PosixSignal
  W092 Function could be free
    37:    static void CreateNativeSignals();
C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.h
  W030 Unused enumerator
    58:       LowPriority,       // preemptable threads
  W078 Remove virtual tag: function is an override or final
    159:    virtual void Display(std::ostream& stream,
    164:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    105:    static SysThread_t Create(const ThreadEntry entry,
  W088 Argument could be const
    106/4:       const Thread* client, size_t stackSize, SysThreadId& nid);
  W090 Function could be const
    141:    DelayRc Delay(msecs_t msecs);
    147:    bool Interrupt();
  W092 Function could be free
    52:    static SysThreadId RunningThreadId();
    112:    static SysThread_t Wrap();
    116:    static void Delete(SysThread_t& thread);
    121:    static SysSentry_t CreateSentry();
    125:    static void DeleteSentry(SysSentry_t& sentry);
C:/Users/gregu/Documents/rsc/rsc/nb/SysThread.win.cpp
  W004 C-style cast
    141:       (LPTHREAD_START_ROUTINE) entry,  // thread entry function
    142:       (LPVOID) client,                 // argument to entry function
    144:       (DWORD*) &nid);                  // updates thread's identifier
    345:    _set_se_translator((_se_translator_function) SE_Handler);
  W008 Cast removes const qualification
    141:       (LPTHREAD_START_ROUTINE) entry,  // thread entry function
    142:       (LPVOID) client,                 // argument to entry function
  W026 Unused argument
    52/2: void SE_Handler(uint32_t errval, void* ex)
  W106 Function does not invoke Debug::ft
    269: void SysThread::RegisterForSignal(signal_t sig, sighandler_t handler)
    296: SysThreadId SysThread::RunningThreadId()
  W107 Function does not invoke Debug::ft as first statement
    57:    Debug::ft(NodeBase_SE_Handler);
C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.h
  W026 Unused argument
    38/1:    void Startup(RestartLevel level);
C:/Users/gregu/Documents/rsc/rsc/nb/SysThreadStack.win.cpp
  W004 C-style cast
    163:    Symbols = (SYMBOL_INFO*) Memory::Alloc(size, MemPerm, false);
  W015 #include not sorted in standard order
    29: #include <dbghelp.h>
  W082 Adjacent arguments have the same type
    72:    static const char* GetFileLoc(DWORD64 frame, DWORD& line, DWORD& disp);
  W106 Function does not invoke Debug::ft
    121: DWORD64 StackInfo::GetFrame(fn_depth depth)
    137: fn_depth StackInfo::GetFrames()
    145: void StackInfo::Shutdown()
    154: DWORD StackInfo::Startup()
    265: fn_depth SysThreadStack::FuncDepth()
C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.h
  W032 Unused function
    71:    bool TickTimingAvailable() const { return available_; }
  W110 Override of Base.Display not found
    41: class SysTickTimer : public Immutable
  W111 Override of Object.Patch not found
    41: class SysTickTimer : public Immutable
C:/Users/gregu/Documents/rsc/rsc/nb/SysTickTimer.win.cpp
  W056 Default constructor invoked: POD members not initialized
    44:    LARGE_INTEGER frequency;
    75:       LARGE_INTEGER now;
    81:       _timeb now;
  W106 Function does not invoke Debug::ft
    71: ticks_t SysTickTimer::TicksNow() const
C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.cpp
  W005 Functional cast
    362:          Truncate(TimeField(int(field) + 1));
    545:          return OutOfRange(TimeField(f));
  W106 Function does not invoke Debug::ft
    181: int16_t SysTime::DayOfWeek() const
    191: int16_t SysTime::DayOfYear() const
    207: const int16_t* SysTime::DaysPerMonth(int16_t year)
    215: size_t SysTime::DaysSinceT0() const
    245: bool SysTime::IsLeapYear(int16_t year)
    265: int64_t SysTime::MsecsSinceT0() const
C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.h
  W032 Unused function
    76:    int16_t Get(TimeField field) const { return time_[field]; }
  W042 Member could be private
    80:    int16_t DayOfWeek() const;
    131:    const char* strMonth() const;
  W078 Remove virtual tag: function is an override or final
    143:    virtual void Display(std::ostream& stream,
    148:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    71:    SysTime(int16_t year, int16_t month, int16_t day,
  W092 Function could be free
    88:    static bool IsLeapYear(int16_t year);
    153:    static const int16_t* DaysPerMonth(int16_t year);
C:/Users/gregu/Documents/rsc/rsc/nb/SysTime.win.cpp
  W056 Default constructor invoked: POD members not initialized
    42:    _timeb timebuff;
    43:    tm timeofday;
C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.cpp
  W006 reinterpret_cast
    33:    auto bytes = reinterpret_cast< uint8_t* >(&value);
  W106 Function does not invoke Debug::ft
    30: uintptr_t BadPointer()
C:/Users/gregu/Documents/rsc/rsc/nb/SysTypes.h
  W028 Unused data
    50: constexpr uword UWORD_MAX = (sizeof(word) == 8 ? UINT64_MAX : UINT32_MAX);
  W044 Typedef of pointer type
    88: typedef char* ptr_t;
    89: typedef const char* const_ptr_t;
    105: typedef const char* const fixed_string;
    110: typedef const char* const fn_name;      // for defining a function name
    111: typedef const char* const fn_name_arg;  // when fn_name is an argument
C:/Users/gregu/Documents/rsc/rsc/nb/Temporary.h
  W032 Unused function
    55:    static void* operator new[](size_t size);
  W078 Remove virtual tag: function is an override or final
    46:    virtual MemoryType MemType() const override { return MemTemp; }
    50:    virtual void Patch(sel_t selector, void* arguments) override;
  W112 Function could be defaulted
    42:    virtual ~Temporary() { }
C:/Users/gregu/Documents/rsc/rsc/nb/ThisThread.cpp
  W106 Function does not invoke Debug::ft
    29: bool ThisThread::EnterBlockingOperation(BlockingReason why, fn_name_arg func)
    36: void ThisThread::ExitBlockingOperation(fn_name_arg func)
    43: void ThisThread::MakePreemptable()
    50: void ThisThread::MakeUnpreemptable()
    57: void ThisThread::MemProtect()
    64: void ThisThread::MemUnprotect()
    71: DelayRc ThisThread::Pause(msecs_t msecs)
    78: void ThisThread::PauseOver(word limit)
    85: word ThisThread::RtcPercentUsed()
    92: ThreadId ThisThread::RunningThreadId()
    99: TraceRc ThisThread::StartTracing(bool immediate, bool autostop)
    106: void ThisThread::StopTracing()
C:/Users/gregu/Documents/rsc/rsc/nb/Thread.cpp
  W006 reinterpret_cast
    1170:    auto fake = reinterpret_cast< const Thread* >(&local);
  W009 Pointer arithmetic
    2682:    ptrdiff_t stacksize = &local - priv_->stackBase_;
  W047 Data is init-only
    482:    MutexGuard guard(&lock_);
    676:    MutexGuard guard(&lock_);
    711:    MutexGuard guard(&lock_);
  W078 Remove virtual tag: function is an override or final
    92:    virtual bool Display(ostream& stream, bool diff) override;
    100:    virtual bool IsFirstAfterContextSwitch() const override;
    104:    virtual const char* EventString() const override;
    757:    virtual void Display(ostream& stream,
  W092 Function could be free
    88:    static void CaptureEvent(fn_name_arg func, Id rid, word info = 0);
  W099 Line contains adjacent spaces
    264:    CounterPtr       traps_;
    265:    CounterPtr       yields_;
    266:    CounterPtr       exceeds_;
    270:    AccumulatorPtr   totUsecs_;
  W106 Function does not invoke Debug::ft
    438: ContextSwitch* ContextSwitches::AddSwitch()
    1151: TraceStatus Thread::CalcStatus(bool dynamic) const
    1532: main_t Thread::EnterThread(void* arg)
    1736: void Thread::FunctionInvoked(fn_name_arg func)
    1833: bool Thread::HasExited() const
    1896: bool Thread::IsLocked() const
    1903: Thread* Thread::LockedThread()
    1970: TraceRc Thread::LogContextSwitches(bool on)
    2095: SysThreadId Thread::NativeThreadId() const
    2123: DelayRc Thread::Pause(msecs_t msecs)
    2163: double Thread::PercentIdle()
    2522: bool Thread::RunningLocked()
    2673: void Thread::StackCheck()
    2945: TraceRc Thread::StartTracing(bool immediate, bool autostop)
    2981: void Thread::StopTracing()
    3044: void Thread::Trace(Thread* thr, fn_name_arg func, TraceRecordId rid, word info)
    3060: bool Thread::TraceRunningThread(Thread*& thr)
    3095: void Thread::TrapCheck()
  W107 Function does not invoke Debug::ft as first statement
    1656:    Debug::ft(Thread_ExitIfSafe);
    2467:    Debug::ft(Thread_ResumeLocked);
    2645:    Debug::ft(Thread_SignalHandler);
    2717:          Debug::ft(Thread_Start);
    3229:       Debug::ft(Thread_Unlock);
  W110 Override of Base.Display not found
    258: class ThreadStats : public Dynamic
    351: class ContextSwitches : public Permanent
    606: class Orphans : public Permanent
  W111 Override of Object.Patch not found
    351: class ContextSwitches : public Permanent
    606: class Orphans : public Permanent
    740: class ThreadPriv : public Permanent
  W114 Function could be tagged noexcept
    308:    ContextSwitch();
  W117 Line can merge with the next line and be under the length limit
    468: fixed_string SwitchFooter =
C:/Users/gregu/Documents/rsc/rsc/nb/Thread.h
  W005 Functional cast
    157:    Id Tid() const { return Id(tid_.GetId()); }
  W026 Unused argument
    353/2:       (BlockingReason why, fn_name_arg func) { return true; }
    361/1:    virtual void ScheduledIn(fn_name_arg func) { }
  W032 Unused function
    121:    static std::atomic_uint32_t* Vector();
    169:    bool ChangeFaction(Faction faction);
  W042 Member could be private
    125:    static bool TestFlag(FlagId fid);
    129:    static void ResetFlag(FlagId fid);
    161:    SysThreadId NativeThreadId() const;
    238:    static ptrdiff_t CellDiff();
  W065 Base class virtual destructor is not public
    280:    virtual ~Thread();
  W075 Virtual function is public
    186:    virtual TraceStatus CalcStatus(bool dynamic) const;
    210:    virtual void DisplayStats(std::ostream& stream) const;
  W077 Virtual function has no overrides
    210:    virtual void DisplayStats(std::ostream& stream) const;
    292:    virtual bool EnqMsg(MsgBuffer& msg);
    298:    virtual MsgBuffer* DeqMsg(msecs_t timeout);
  W078 Remove virtual tag: function is an override or final
    243:    virtual void Startup(RestartLevel level) override;
    248:    virtual void Shutdown(RestartLevel level) override;
    252:    virtual void Display(std::ostream& stream,
    257:    virtual void Patch(sel_t selector, void* arguments) override;
    303:    virtual void Claim() override;
    308:    virtual void Cleanup() override;
  W082 Adjacent arguments have the same type
    560:    void DisplaySummary
  W090 Function could be const
    117:    bool Interrupt(const Flags& mask = Flags());
    508:    void SetTrap(bool on);
    516:    void StackCheck();
    528:    void SetSignal(signal_t sig);
  W092 Function could be free
    105:    static void PauseOver(word limit);
    219:    static double PercentIdle();
    223:    static TraceRc LogContextSwitches(bool on);
    227:    static void DisplayContextSwitches(std::ostream& stream);
    438:    static SysThread::Priority FactionToPriority(Faction& faction);
C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.cpp
  W078 Remove virtual tag: function is an override or final
    78:    virtual void DisplayStats(ostream& stream, id_t id) const override;
    89:    virtual void SetCurr() override;
  W106 Function does not invoke Debug::ft
    287: bool ThreadAdmin::BreakEnabled()
    385: void ThreadAdmin::Incr(Register r)
    493: word ThreadAdmin::TrapCount()
  W110 Override of Base.Display not found
    51: class ThreadsStats : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/nb/ThreadAdmin.h
  W078 Remove virtual tag: function is an override or final
    143:    virtual void Startup(RestartLevel level) override;
    147:    virtual void Shutdown(RestartLevel level) override;
    151:    virtual void Display(std::ostream& stream,
    156:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    90:    static int WarpFactor();
  W099 Line contains adjacent spaces
    176:    CfgIntParmPtr  initTimeoutMsecs_;
    177:    CfgIntParmPtr  schedTimeoutMsecs_;
    179:    CfgIntParmPtr  rtcTimeoutMsecs_;
    181:    CfgIntParmPtr  rtcLimit_;
    182:    CfgIntParmPtr  rtcInterval_;
    184:    CfgIntParmPtr  trapLimit_;
    185:    CfgIntParmPtr  trapInterval_;
    187:    CfgIntParmPtr  stackUsageLimit_;
    188:    CfgIntParmPtr  stackCheckInterval_;
C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.cpp
  W078 Remove virtual tag: function is an override or final
    45:    virtual void DisplayStats(ostream& stream, id_t id) const override;
  W106 Function does not invoke Debug::ft
    209: ThreadId ThreadRegistry::FindThreadId(SysThreadId nid) const
    218: Thread* ThreadRegistry::GetThread(ThreadId tid) const
C:/Users/gregu/Documents/rsc/rsc/nb/ThreadRegistry.h
  W078 Remove virtual tag: function is an override or final
    74:    virtual void ClaimBlocks() override;
    78:    virtual void Startup(RestartLevel level) override;
    82:    virtual void Shutdown(RestartLevel level) override;
    86:    virtual void Display(std::ostream& stream,
    91:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    112:    void AssociateIds(const Thread& thread);
C:/Users/gregu/Documents/rsc/rsc/nb/TimedRecord.h
  W043 Member could be protected
    48:    ticks_t GetTicks() const { return ticks_; }
    52:    void SetTicks(const ticks_t& ticks) { ticks_ = ticks; }
    56:    SysThreadId Nid() const { return nid_; }
  W078 Remove virtual tag: function is an override or final
    71:    virtual bool Display(std::ostream& stream, bool diff) override;
C:/Users/gregu/Documents/rsc/rsc/nb/Tool.cpp
  W006 reinterpret_cast
    67:    auto fake = reinterpret_cast< const Tool* >(&local);
C:/Users/gregu/Documents/rsc/rsc/nb/Tool.h
  W053 Data could be const
    105:    char abbr_;
    109:    bool safe_;
  W065 Base class virtual destructor is not public
    92:    virtual ~Tool();
  W075 Virtual function is public
    56:    virtual const char* Name() const = 0;
    60:    virtual const char* Expl() const = 0;
    66:    virtual std::string Status() const;
  W078 Remove virtual tag: function is an override or final
    74:    virtual void Display(std::ostream& stream,
    79:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/ToolRegistry.cpp
  W106 Function does not invoke Debug::ft
    117: Tool* ToolRegistry::GetTool(FlagId id) const
C:/Users/gregu/Documents/rsc/rsc/nb/ToolRegistry.h
  W078 Remove virtual tag: function is an override or final
    68:    virtual void Display(std::ostream& stream,
    73:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nb/ToolTypes.cpp
  W103 Function not sorted in standard order
    67: ostream& operator<<(ostream& stream, TraceStatus status)
C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.cpp
  W004 C-style cast
    126:    buff_ = (uword*) Memory::Alloc(InitialSize << BYTES_PER_WORD_LOG2, MemPerm);
    236:    auto addr = (TraceRecord*) &buff_[end_];
    431:       next = (uword*) record + incr;
    449:             record = (TraceRecord*) buff_;  // case (b)
    453:          record = (TraceRecord*) next;
    462:       next = (uword*) record + incr;
    488:       auto record = (TraceRecord*) &buff_[start_];
    595:    buff_ = (uword*) Memory::Alloc(size << BYTES_PER_WORD_LOG2, MemPerm, false);
  W009 Pointer arithmetic
    431:       next = (uword*) record + incr;
    462:       next = (uword*) record + incr;
  W078 Remove virtual tag: function is an override or final
    66:    virtual bool Display(ostream& stream, bool diff) override;
  W106 Function does not invoke Debug::ft
    112: TraceBuffer::TraceBuffer() :
    140: TraceBuffer::~TraceBuffer()
    154: void* TraceBuffer::AddRecord(size_t nBytes)
    354: bool TraceBuffer::Empty() const
    385: bool TraceBuffer::IsLocked()
    394: void TraceBuffer::Lock()
    414: void TraceBuffer::Next(TraceRecord*& record, const Flags& mask) const
    475: void TraceBuffer::PurgeRecords(size_t end)
    543: void TraceBuffer::RecordInvocation(fn_name_arg func) const
    746: void TraceBuffer::Unlock()
C:/Users/gregu/Documents/rsc/rsc/nb/TraceBuffer.h
  W032 Unused function
    168:    const SysTime& StartTimeFull() const { return startTime_; }
  W042 Member could be private
    177:    typedef std::map< fn_name_arg, size_t > InvocationsTable;
  W078 Remove virtual tag: function is an override or final
    228:    virtual void ClaimBlocks() override;
    232:    virtual void Shutdown(RestartLevel level) override;
    236:    virtual void Patch(sel_t selector, void* arguments) override;
  W110 Override of Base.Display not found
    62: class TraceBuffer : public Permanent
C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.cpp
  W005 Functional cast
    38:    size_(int16_t(size)),
C:/Users/gregu/Documents/rsc/rsc/nb/TraceRecord.h
  W032 Unused function
    99:    static void operator delete(void* addr, void* where) { }
  W042 Member could be private
    90:    static void operator delete(void* addr) { }
    94:    static void* operator new(size_t size, void* where);
  W043 Member could be protected
    71:    void Nullify() { owner_ = NIL_ID; }
  W050 Data is not private
    136:    Id rid_ : 8;
  W075 Virtual function is public
    80:    virtual bool Display(std::ostream& stream, bool diff);
  W090 Function could be const
    116:    virtual void ClaimBlocks() { }
C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.cpp
  W004 C-style cast
    58:    functionq_ = (Q2Way< FunctionStats >*) Memory::Alloc(size, MemTemp);
  W007 Cast down the inheritance hierarchy
    198:             auto ft = static_cast<FunctionTrace*>(rec);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    97: void FunctionProfiler::CheckHigh(FunctionStats*& high,
C:/Users/gregu/Documents/rsc/rsc/nt/FunctionProfiler.h
  W020 Using statement in header
    38: using namespace NodeBase;
  W053 Data could be const
    105:    size_t size_;
  W082 Adjacent arguments have the same type
    83:    static void CheckHigh(FunctionStats*& high, FunctionStats* curr,
  W090 Function could be const
    77:    FunctionStats* EnsureRecord(fn_name_arg func, size_t count);
  W092 Function could be free
    83:    static void CheckHigh(FunctionStats*& high, FunctionStats* curr,
  W110 Override of Base.Display not found
    49: class FunctionProfiler : public Temporary
C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.cpp
  W006 reinterpret_cast
    80:    auto fake = reinterpret_cast< const FunctionStats* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    51: int FunctionStats::Compare(const FunctionStats& that) const
    69: void FunctionStats::IncrCalls(usecs_t net)
C:/Users/gregu/Documents/rsc/rsc/nt/FunctionStats.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W053 Data could be const
    84:    Q2Link link_;
  W078 Remove virtual tag: function is an override or final
    75:    virtual void Display(std::ostream& stream,
  W112 Function could be defaulted
    49:    ~FunctionStats();
C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.cpp
  W005 Functional cast
    3179:    pool->time_[id1].Truncate(TimeField(field - 1));
    3210:    pool->time_[id1].Round(TimeField(field - 1), interval);
  W006 reinterpret_cast
    1325:    auto fake = reinterpret_cast< const Q1WayItem* >(&local);
    1845:    auto fake = reinterpret_cast< const Q2WayItem* >(&local);
    2406:    auto fake = reinterpret_cast< const RegistryItem* >(&local);
    3640:    auto p = reinterpret_cast< char* >(BAD_POINTER);
  W022 Add using statement
    1: namespace NodeBase
  W028 Unused data
    187:    static const id_t LastNtIndex = SortIndex;
  W042 Member could be private
    3424:    typedef id_t Test;
  W047 Data is init-only
    234:    FunctionGuard guard(FunctionGuard::MakePreemptable);
    426:    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  W053 Data could be const
    1189:    Q1Link link_;
    1701:    Q2Link link_;
  W078 Remove virtual tag: function is an override or final
    194:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    634:    virtual word ProcessCommand(CliThread& cli) const override;
    1082:    virtual word ProcessCommand(CliThread& cli) const override;
    1090:    virtual word ProcessCommand(CliThread& cli) const override;
    1181:    virtual void Display(ostream& stream,
    1198:    virtual void Display(ostream& stream,
    1223:    virtual word ProcessCommand(CliThread& cli) const override;
    1231:    virtual word ProcessCommand(CliThread& cli) const override;
    1239:    virtual word ProcessCommand(CliThread& cli) const override;
    1247:    virtual word ProcessCommand(CliThread& cli) const override;
    1255:    virtual word ProcessCommand(CliThread& cli) const override;
    1263:    virtual word ProcessCommand(CliThread& cli) const override;
    1271:    virtual word ProcessCommand(CliThread& cli) const override;
    1279:    virtual word ProcessCommand(CliThread& cli) const override;
    1287:    virtual word ProcessCommand(CliThread& cli) const override;
    1295:    virtual word ProcessCommand(CliThread& cli) const override;
    1693:    virtual void Display(ostream& stream,
    1710:    virtual void Display(ostream& stream,
    1735:    virtual word ProcessCommand(CliThread& cli) const override;
    1743:    virtual word ProcessCommand(CliThread& cli) const override;
    1751:    virtual word ProcessCommand(CliThread& cli) const override;
    1759:    virtual word ProcessCommand(CliThread& cli) const override;
    1767:    virtual word ProcessCommand(CliThread& cli) const override;
    1775:    virtual word ProcessCommand(CliThread& cli) const override;
    1783:    virtual word ProcessCommand(CliThread& cli) const override;
    1791:    virtual word ProcessCommand(CliThread& cli) const override;
    1799:    virtual word ProcessCommand(CliThread& cli) const override;
    1807:    virtual word ProcessCommand(CliThread& cli) const override;
    1815:    virtual word ProcessCommand(CliThread& cli) const override;
    2259:    virtual void Display(ostream& stream,
    2275:    virtual void Display(ostream& stream,
    2315:    virtual word ProcessCommand(CliThread& cli) const override;
    2323:    virtual word ProcessCommand(CliThread& cli) const override;
    2331:    virtual word ProcessCommand(CliThread& cli) const override;
    2339:    virtual word ProcessCommand(CliThread& cli) const override;
    2347:    virtual word ProcessCommand(CliThread& cli) const override;
    2355:    virtual word ProcessCommand(CliThread& cli) const override;
    2363:    virtual word ProcessCommand(CliThread& cli) const override;
    2371:    virtual word ProcessCommand(CliThread& cli) const override;
    2379:    virtual word ProcessCommand(CliThread& cli) const override;
    2853:    virtual word ProcessCommand(CliThread& cli) const override;
    2861:    virtual word ProcessCommand(CliThread& cli) const override;
    2869:    virtual word ProcessCommand(CliThread& cli) const override;
    2877:    virtual word ProcessCommand(CliThread& cli) const override;
    2885:    virtual word ProcessCommand(CliThread& cli) const override;
    2893:    virtual word ProcessCommand(CliThread& cli) const override;
    2901:    virtual word ProcessCommand(CliThread& cli) const override;
    2909:    virtual word ProcessCommand(CliThread& cli) const override;
    2917:    virtual word ProcessCommand(CliThread& cli) const override;
    2925:    virtual word ProcessCommand(CliThread& cli) const override;
    2933:    virtual word ProcessCommand(CliThread& cli) const override;
    2941:    virtual word ProcessCommand(CliThread& cli) const override;
    2949:    virtual word ProcessCommand(CliThread& cli) const override;
    2957:    virtual word ProcessCommand(CliThread& cli) const override;
    3441:    virtual void Display(ostream& stream,
    3449:    virtual const char* AbbrName() const override;
    3450:    virtual bool IsCritical() const override;
    3451:    virtual void Enter() override;
    3452:    virtual RecoveryAction Recover() override;
    3453:    virtual void Destroy() override;
    3723:    virtual word ProcessCommand(CliThread& cli) const override;
  W082 Adjacent arguments have the same type
    196:    word Sort(const string& input, const string& output, string& expl) const;
  W092 Function could be free
    196:    word Sort(const string& input, const string& output, string& expl) const;
    3446:    static void UseBadPointer();
    3447:    static void LoopForever();
  W106 Function does not invoke Debug::ft
    1304: Q1WayItem::~Q1WayItem()
    1338: Q1WayPool::Q1WayPool()
    1367: void Q1WayPool::Reallocate()
    1824: Q2WayItem::~Q2WayItem()
    1858: Q2WayPool::Q2WayPool()
    1887: void Q2WayPool::Reallocate()
    2388: RegistryItem::~RegistryItem()
    2419: RegistryPool::RegistryPool()
  W107 Function does not invoke Debug::ft as first statement
    3520:       Debug::ft(RecoveryTestThread_Enter);
    3602:       Debug::ft(RecoveryTestThread_LoopForever);
  W110 Override of Base.Display not found
    1051: class LbcPool : public Temporary
    2810: class SysTimePool : public Temporary
C:/Users/gregu/Documents/rsc/rsc/nt/NtIncrement.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W028 Unused data
    80:    static const id_t LastNtIndex    = FuncTraceScope;
  W060 Base class constructor is public
    44:    CorruptWhatParm();
    56:    explicit CorruptCommand(bool bind = true);
    98:    NtSaveWhatParm();
    110:    explicit NtSaveCommand(bool bind = true);
    124:    SizesCommand();
    139:    TestcaseAction();
    160:    explicit TestcaseCommand(bool bind = true);
  W078 Remove virtual tag: function is an override or final
    59:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    61:    virtual word ProcessCommand(CliThread& cli) const override;
    87:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    113:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    129:    virtual word ProcessCommand(CliThread& cli) const override;
    163:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    165:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nt/NtModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.cpp
  W007 Cast down the inheritance hierarchy
    68:    return static_cast< NtTestData* >(data);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nt/NtTestData.h
  W020 Using statement in header
    31: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    86:    virtual void Display(std::ostream& stream,
  W090 Function could be const
    82:    void Reset();
  W092 Function could be free
    45:    static NtTestData* Access(CliThread& cli);
C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.cpp
  W047 Data is init-only
    97:    FunctionGuard guard(FunctionGuard::MakePreemptable);
    247:    FunctionGuard guard(FunctionGuard::MakePreemptable);
  W106 Function does not invoke Debug::ft
    154: TestDatabase::State TestDatabase::GetState(const string& testcase)
C:/Users/gregu/Documents/rsc/rsc/nt/TestDatabase.h
  W078 Remove virtual tag: function is an override or final
    80:    virtual void Shutdown(NodeBase::RestartLevel level) override;
  W110 Override of Base.Display not found
    41: class TestDatabase : public NodeBase::Temporary
  W114 Function could be tagged noexcept
    141:       TestInfo(State state, uint32_t hash) : state(state), hash(hash) { }
C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/InputHandler.h
  W020 Using statement in header
    31: using namespace NodeBase;
  W026 Unused argument
    132/3:       (IpBuffer& buff, byte_t* src, size_t size) const;
    137/1:    virtual void SocketFailed(SysSocket* socket) const { }
  W043 Member could be protected
    65:    IpPort* Port() const { return port_; }
  W075 Virtual function is public
    95:    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
    103:    virtual void NetworkToHost
    122:    virtual void ReceiveBuff
    131:    virtual byte_t* HostToNetwork
    137:    virtual void SocketFailed(SysSocket* socket) const { }
  W078 Remove virtual tag: function is an override or final
    141:    virtual void Display(std::ostream& stream,
    146:    virtual void Patch(sel_t selector, void* arguments) override;
  W088 Argument could be const
    132/1:       (IpBuffer& buff, byte_t* src, size_t size) const;
C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.cpp
  W004 C-style cast
    79:    buffer_ = (byte_t*) Memory::Alloc(SysSocket::MaxMsgSize, MemDyn);
  W009 Pointer arithmetic
    197:       source += rcvd;
C:/Users/gregu/Documents/rsc/rsc/nw/IoThread.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W042 Member could be private
    89:    virtual bool ExitOnRestart(RestartLevel level) const override;
  W050 Data is not private
    93:    const ipport_t port_;
    98:    IpPort* ipPort_;
    102:    SysIpL2Addr host_;
    106:    size_t recvs_;
    110:    SysIpL3Addr txAddr_;
    115:    SysIpL3Addr rxAddr_;
    119:    ticks_t ticks0_;
    123:    byte_t* buffer_;
  W078 Remove virtual tag: function is an override or final
    59:    virtual void Display(std::ostream& stream,
    64:    virtual void Patch(sel_t selector, void* arguments) override;
    89:    virtual bool ExitOnRestart(RestartLevel level) const override;
C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.cpp
  W004 C-style cast
    71:    buff_ = (byte_t*) Memory::Alloc(BuffSize(buffSize_), MemDyn);
    90:    buff_ = (byte_t*) Memory::Alloc(BuffSize(buffSize_), MemDyn);
    130:       auto buff = (byte_t*) Memory::Realloc(buff_, BuffSize(newSize));
  W009 Pointer arithmetic
    142:       Memory::Copy((buff_ + hdrSize_ + paySize), source, size);
    142:       Memory::Copy((buff_ + hdrSize_ + paySize), source, size);
    243:       bytes = buff_ + hdrSize_;
    269:    bytes += hdrSize_;
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    204: TraceStatus IpBuffer::GetStatus() const
C:/Users/gregu/Documents/rsc/rsc/nw/IpBuffer.h
  W009 Pointer arithmetic
    103:    byte_t* PayloadPtr() const { return buff_ + hdrSize_; }
  W020 Using statement in header
    32: using namespace NodeBase;
  W060 Base class constructor is public
    52:    IpBuffer(MsgDirection dir, size_t header, size_t payload);
    56:    IpBuffer(const IpBuffer& that);
  W075 Virtual function is public
    116:    virtual size_t PayloadSize() const;
    135:    virtual bool AddBytes(const byte_t* source, size_t size, bool& moved);
  W078 Remove virtual tag: function is an override or final
    147:    virtual TraceStatus GetStatus() const override;
    151:    virtual void Display(std::ostream& stream,
    156:    virtual void Patch(sel_t selector, void* arguments) override;
    164:    virtual void Cleanup() override;
  W082 Adjacent arguments have the same type
    52:    IpBuffer(MsgDirection dir, size_t header, size_t payload);
  W092 Function could be free
    169:    static size_t BuffSize(size_t nBytes);
C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.cpp
  W006 reinterpret_cast
    276:    auto fake = reinterpret_cast< const IpPort* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W099 Line contains adjacent spaces
    55:    CounterPtr       recvs_;
    56:    AccumulatorPtr   bytesRcvd_;
    59:    CounterPtr       discards_;
    60:    CounterPtr       rejects_;
    61:    CounterPtr       sends_;
    62:    AccumulatorPtr   bytesSent_;
    64:    CounterPtr       overflows_;
  W106 Function does not invoke Debug::ft
    205: size_t IpPort::Discards() const
  W110 Override of Base.Display not found
    49: class IpPortStats : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/nw/IpPort.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W053 Data could be const
    180:    Q1Link link_;
  W075 Virtual function is public
    89:    virtual SysTcpSocket* CreateAppSocket();
    124:    virtual void DisplayStats(std::ostream& stream) const;
  W077 Virtual function has no overrides
    124:    virtual void DisplayStats(std::ostream& stream) const;
  W078 Remove virtual tag: function is an override or final
    132:    virtual void Startup(RestartLevel level) override;
    136:    virtual void Shutdown(RestartLevel level) override;
    140:    virtual void Display(std::ostream& stream,
    145:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    161:    virtual IoThread* CreateIoThread();
C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/IpPortCfgParm.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    57:    virtual void Display(std::ostream& stream,
    62:    virtual void Patch(sel_t selector, void* arguments) override;
    66:    virtual bool SetNextValue(word value) override;
    71:    virtual RestartLevel RestartRequired() const override { return RestartCold; }
  W082 Adjacent arguments have the same type
    48:    IpPortCfgParm(const char* key, const char* def,
C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    54:    virtual void SetCurr() override;
    56:    virtual bool SetNext(const string& input) override;
    114:    virtual void DisplayStats(ostream& stream, id_t id) const override;
  W106 Function does not invoke Debug::ft
    283: IpPort* IpPortRegistry::GetPort(ipport_t port, IpProtocol protocol) const
  W110 Override of Base.Display not found
    47: class HostAddrCfg : public CfgStrParm
C:/Users/gregu/Documents/rsc/rsc/nw/IpPortRegistry.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    71:    virtual void Startup(RestartLevel level) override;
    75:    virtual void Shutdown(RestartLevel level) override;
    79:    virtual void Display(std::ostream& stream,
    84:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nw/IpService.cpp
  W006 reinterpret_cast
    69:    auto fake = reinterpret_cast< const IpService* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/IpService.h
  W020 Using statement in header
    33: using namespace NodeBase;
  W032 Unused function
    82:    virtual CliText* CreateText() const = 0;
  W053 Data could be const
    152:    RegCell sid_;
  W065 Base class virtual destructor is not public
    134:    virtual ~IpService();
  W075 Virtual function is public
    54:    virtual const char* Name() const = 0;
    58:    virtual IpProtocol Protocol() const = 0;
    63:    virtual ipport_t Port() const = 0;
    67:    virtual Faction GetFaction() const = 0;
    71:    virtual size_t RxSize() const { return IoThread::MaxRxBuffSize; }
    75:    virtual size_t TxSize() const { return IoThread::MaxTxBuffSize; }
    82:    virtual CliText* CreateText() const = 0;
    88:    virtual bool HasSharedSocket() const = 0;
    96:    virtual void GetAppSocketSizes(size_t& rxSize, size_t& txSize) const;
  W077 Virtual function has no overrides
    71:    virtual size_t RxSize() const { return IoThread::MaxRxBuffSize; }
    75:    virtual size_t TxSize() const { return IoThread::MaxTxBuffSize; }
  W078 Remove virtual tag: function is an override or final
    115:    virtual void Startup(RestartLevel level) override;
    119:    virtual void Display(std::ostream& stream,
    124:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    148:    virtual IpPort* CreatePort(ipport_t pid) = 0;
C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    78: IpService* IpServiceRegistry::GetService(const string& name) const
C:/Users/gregu/Documents/rsc/rsc/nw/IpServiceRegistry.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W032 Unused function
    50:    IpService* GetService(const std::string& name) const;
  W078 Remove virtual tag: function is an override or final
    54:    virtual void Startup(RestartLevel level) override;
    58:    virtual void Display(std::ostream& stream,
    63:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nw/NwCliParms.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/NwCliParms.h
  W020 Using statement in header
    30: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    226:    virtual word ProcessCommand(CliThread& cli) const override;
    325:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/nw/NwIncrement.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W060 Base class constructor is public
    41:    NwClearWhatParm();
    56:    explicit NwClearCommand(bool bind = true);
    69:    NwExcludeWhatParm();
    82:    explicit NwExcludeCommand(bool bind = true);
    95:    NwIncludeWhatParm();
    108:    explicit NwIncludeCommand(bool bind = true);
    123:    explicit NwQueryCommand(bool bind = true);
    136:    NwStatusCommand() = default;
  W078 Remove virtual tag: function is an override or final
    59:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    85:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    111:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    126:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    139:    virtual word ProcessCommand(CliThread& cli) const override;
  W111 Override of Object.Patch not found
    45: class NwClearCommand : public ClearCommand
    73: class NwExcludeCommand : public ExcludeCommand
    99: class NwIncludeCommand : public IncludeCommand
    118: class NwQueryCommand : public QueryCommand
    133: class NwStatusCommand : public StatusCommand
C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/NwModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    66:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    42:    virtual void Patch(sel_t selector, void* arguments) override;
    54:    virtual void Startup(RestartLevel level) override;
    58:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    62:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/NwTrace.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    80:    virtual bool Display(std::ostream& stream, bool diff) override;
    84:    virtual const char* EventString() const override;
C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    47:    virtual const char* Name() const override { return NetworkTraceToolName; }
    48:    virtual const char* Expl() const override { return NetworkTraceToolExpl; }
C:/Users/gregu/Documents/rsc/rsc/nw/NwTracer.h
  W020 Using statement in header
    34: using namespace NodeBase;
  W042 Member could be private
    56:    bool PeersEmpty() const;
    60:    bool PortsEmpty() const;
  W110 Override of Base.Display not found
    42: class NwTracer : public Permanent
  W111 Override of Object.Patch not found
    42: class NwTracer : public Permanent
  W114 Function could be tagged noexcept
    104:       PeerFilter();
    105:       PeerFilter(const SysIpL3Addr& a, TraceStatus s);
    115:       PortFilter();
    116:       PortFilter(ipport_t p, TraceStatus s);
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.h
  W020 Using statement in header
    29: using namespace NodeBase;
  W060 Base class constructor is public
    42:    SysIpL2Addr();
    46:    explicit SysIpL2Addr(ipv4addr_t v4Addr);
    51:    explicit SysIpL2Addr(const std::string& text);
    55:    SysIpL2Addr(const SysIpL2Addr& that);
  W075 Virtual function is public
    79:    virtual std::string to_str() const;
  W078 Remove virtual tag: function is an override or final
    87:    virtual void Display(std::ostream& stream,
    92:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    67:    static SysIpL2Addr LoopbackAddr();
    83:    static bool HostName(std::string& name);
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL2Addr.win.cpp
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    52:    in_addr result;
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.h
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    115:    bool operator!=(const SysIpL3Addr& that) const;
  W060 Base class constructor is public
    40:    SysIpL3Addr();
    45:    SysIpL3Addr(ipv4addr_t v4Addr, ipport_t port,
    51:    SysIpL3Addr(const SysIpL2Addr& l2Addr, ipport_t port,
    59:    SysIpL3Addr
    64:    SysIpL3Addr(const SysIpL3Addr& that);
  W078 Remove virtual tag: function is an override or final
    102:    virtual std::string to_str() const override;
    119:    virtual void Display(std::ostream& stream,
    124:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    59:    SysIpL3Addr
C:/Users/gregu/Documents/rsc/rsc/nw/SysIpL3Addr.win.cpp
  W004 C-style cast
    58:          auto netaddr = (sockaddr_in*) info->ai_addr;
    114:       ((sockaddr*) &addr, sizeof(addr), buff1, 64, buff2, 64, 0) == 0)
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    48:    addrinfo hints;
    105:    sockaddr_in addr;
C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    135: bool SysSocket::SetTracing(bool tracing)
    143: bool SysSocket::Trace(TraceStatus status)
    154: bool SysSocket::TraceEnabled()
C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.h
  W020 Using statement in header
    34: using namespace NodeBase;
  W032 Unused function
    51: uint64_t htonll(uint64_t hostllong);
    54: uint64_t ntohll(uint32_t netllong);
  W043 Member could be protected
    98:    bool IsValid() const;
  W065 Base class virtual destructor is not public
    180:    virtual ~SysSocket();
  W075 Virtual function is public
    90:    virtual IpProtocol Protocol() const { return IpAny; }
    116:    virtual AllocRc SetService(const IpService* service, bool shared);
    120:    virtual SendRc SendBuff(IpBuffer& buff) = 0;
  W078 Remove virtual tag: function is an override or final
    158:    virtual void Display(std::ostream& stream,
    163:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    134:    static bool StartLayer();
    138:    static void StopLayer();
C:/Users/gregu/Documents/rsc/rsc/nw/SysSocket.win.cpp
  W004 C-style cast
    100:    if(bind(socket_, (sockaddr*) &addr, sizeof(addr)) == SOCKET_ERROR)
    209:       (const char*) &rxSize, sizeof(rxSize)) == SOCKET_ERROR)
    216:       (char*) &max, &maxsize) == SOCKET_ERROR)
    226:       (const char*) &txSize, sizeof(txSize)) == SOCKET_ERROR)
    233:       (char*) &max, &maxsize) == SOCKET_ERROR)
  W015 #include not sorted in standard order
    26: #include <windows.h>
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    64:    sockaddr_in addr;
    252:    WSAData wsaData;
  W106 Function does not invoke Debug::ft
    35: uint32_t htonl(uint32_t hostlong) { return ::htonl(hostlong); }
    37: uint64_t htonll(uint64_t hostllong) { return ::htonll(hostllong); }
    39: uint16_t htons(uint16_t hostshort) { return ::htons(hostshort); }
    41: uint32_t ntohl(uint32_t netlong) { return ::ntohl(netlong); }
    43: uint64_t ntohll(uint32_t netllong) { return ::ntohll(netllong); }
    45: uint16_t ntohs(uint16_t netshort) { return ::ntohs(netshort); }
C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.h
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    134:    bool LocAddr(SysIpL3Addr& locAddr);
    190:    IpBuffer* IcMsg() const { return icMsg_; }
  W042 Member could be private
    89:    word Connect(const SysIpL3Addr& remAddr);
    129:    word Send(const byte_t* data, size_t size);
    181:    bool IsOpen() const;
    216:    void Disconnect();
    221:    void Close();
  W075 Virtual function is public
    173:    virtual void Acquire();
    177:    virtual void Release();
  W077 Virtual function has no overrides
    173:    virtual void Acquire();
    177:    virtual void Release();
  W078 Remove virtual tag: function is an override or final
    152:    virtual IpProtocol Protocol() const override { return IpTcp; }
    156:    virtual AllocRc SetService(const IpService* service, bool shared) override;
    198:    virtual SendRc SendBuff(IpBuffer& buff) override;
    202:    virtual void ClaimBlocks() override;
    206:    virtual void Display(std::ostream& stream,
    211:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    106:    static word Poll(SysTcpSocket* sockets[], size_t size, msecs_t msecs);
C:/Users/gregu/Documents/rsc/rsc/nw/SysTcpSocket.win.cpp
  W004 C-style cast
    44:    auto socket = accept(Socket(), (sockaddr*) &peer, &peersize);
    88:    if(connect(Socket(), (sockaddr*) &peer, sizeof(peer)) == SOCKET_ERROR)
    149:    if(getsockname(Socket(), (sockaddr*) &host, &hostsize) != 0)
    257:    if(getpeername(Socket(), (sockaddr*) &peer, &peersize) == SOCKET_ERROR)
    313:       (const char*) &alive, sizeof(alive)) == SOCKET_ERROR)
    323:       (char*) &val, &valsize) == SOCKET_ERROR)
  W006 reinterpret_cast
    239:    auto rcvd = recv(Socket(), reinterpret_cast< char* >(buff), size, 0);
    284:    auto sent = send(Socket(), reinterpret_cast< const char* >(data), size, 0);
  W007 Cast down the inheritance hierarchy
    310:    bool alive = static_cast< const TcpIpService* >(service)->Keepalive();
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    41:    sockaddr_in peer;
    82:    sockaddr_in peer;
    146:    sockaddr_in host;
    254:    sockaddr_in peer;
  W057 Default constructor invoked
    180:    std::unique_ptr< pollfd[] > list(new pollfd[size]);
C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.h
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    72:    word SendTo(const byte_t* data, size_t size, const SysIpL3Addr& remAddr);
  W078 Remove virtual tag: function is an override or final
    76:    virtual IpProtocol Protocol() const override { return IpUdp; }
    80:    virtual SendRc SendBuff(IpBuffer& buff) override;
    84:    virtual void Display(std::ostream& stream,
    89:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/nw/SysUdpSocket.win.cpp
  W004 C-style cast
    48:          (char*) &max, &maxsize) == SOCKET_ERROR)
    77:       size, 0, (sockaddr*) &peer, &peersize);
    115:       size, 0, (sockaddr*) &peer, peersize);
  W006 reinterpret_cast
    76:    auto rcvd = recvfrom(Socket(), reinterpret_cast< char* >(buff),
    114:    auto sent = sendto(Socket(), reinterpret_cast< const char* >(data),
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    67:    sockaddr_in peer;
    99:    sockaddr_in peer;
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.cpp
  W007 Cast down the inheritance hierarchy
    173:    auto registrant = static_cast< SysTcpSocket* >(ipPort_->GetSocket());
    183:    auto svc = static_cast< const TcpIpService* >(ipPort_->GetService());
    283:    auto registrant = static_cast< SysTcpSocket* >(ipPort_->GetSocket());
    446:    auto sock = static_cast< SysTcpSocket* >(socket);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    466: SysTcpSocket* TcpIoThread::Listener() const
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIoThread.h
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    77:    virtual void Unblock() override;
  W078 Remove virtual tag: function is an override or final
    60:    virtual void ClaimBlocks() override;
    64:    virtual void Display(std::ostream& stream,
    69:    virtual void Patch(sel_t selector, void* arguments) override;
    77:    virtual void Unblock() override;
    81:    virtual void Cleanup() override;
    85:    virtual const char* AbbrName() const override;
    89:    virtual void Enter() override;
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.cpp
  W007 Cast down the inheritance hierarchy
    65:    auto thread = static_cast< TcpIoThread* >(GetThread());
    70:       thread = static_cast< TcpIoThread* >(CreateIoThread());
    76:    auto svc = static_cast< const TcpIpService* >(GetService());
    106:    auto svc = static_cast< const TcpIpService* >(GetService());
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpPort.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Patch(sel_t selector, void* arguments) override;
    51:    virtual IoThread* CreateIoThread() override;
    55:    virtual SysTcpSocket* CreateAppSocket() override;
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/TcpIpService.h
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    86:    virtual IpPort* CreatePort(ipport_t pid) override;
  W075 Virtual function is public
    40:    virtual bool AcceptsConns() const { return true; }
    45:    virtual size_t MaxConns() const = 0;
    50:    virtual size_t MaxBacklog() const = 0;
    54:    virtual bool Keepalive() const { return false; }
  W078 Remove virtual tag: function is an override or final
    58:    virtual IpProtocol Protocol() const override { return IpTcp; }
    64:    virtual bool HasSharedSocket() const override { return false; }
    68:    virtual void Display(std::ostream& stream,
    73:    virtual void Patch(sel_t selector, void* arguments) override;
    86:    virtual IpPort* CreatePort(ipport_t pid) override;
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.cpp
  W007 Cast down the inheritance hierarchy
    108:    auto socket = static_cast< SysUdpSocket* >(ipPort_->GetSocket());
    112:       auto svc = static_cast< const UdpIpService* >(ipPort_->GetService());
    243:       auto socket = static_cast< SysUdpSocket* >(ipPort_->GetSocket());
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIoThread.h
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    58:    virtual void Unblock() override;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Patch(sel_t selector, void* arguments) override;
    58:    virtual void Unblock() override;
    62:    virtual void Cleanup() override;
    66:    virtual const char* AbbrName() const override;
    70:    virtual void Enter() override;
  W090 Function could be const
    78:    void ReleaseResources();
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.cpp
  W007 Cast down the inheritance hierarchy
    57:    auto svc = static_cast< const UdpIpService* >(GetService());
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpPort.h
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Patch(sel_t selector, void* arguments) override;
    51:    virtual IoThread* CreateIoThread() override;
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/nw/UdpIpService.h
  W042 Member could be private
    59:    virtual IpPort* CreatePort(ipport_t pid) override;
  W078 Remove virtual tag: function is an override or final
    37:    virtual IpProtocol Protocol() const override { return IpUdp; }
    42:    virtual bool HasSharedSocket() const override { return true; }
    46:    virtual void Patch(sel_t selector, void* arguments) override;
    59:    virtual IpPort* CreatePort(ipport_t pid) override;
C:/Users/gregu/Documents/rsc/rsc/on/OnModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/on/OnModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/pb/PbModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    97: CliText* PotsBicFeature::Attrs() const { return new PotsBicAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsBicFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    82: CliText* PotsBocFeature::Attrs() const { return new PotsBocAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsBocFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    79: CliText* PotsCfbFeature::Attrs() const { return new PotsCfbAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfbFeature.h
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual CliText* Attrs() const override;
    41:    virtual PotsFeatureProfile* Subscribe
    53:    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    97: CliText* PotsCfnFeature::Attrs() const { return new PotsCfnAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfnFeature.h
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    41:    virtual CliText* Attrs() const override;
    42:    virtual PotsFeatureProfile* Subscribe
    54:    virtual void Display(std::ostream& stream,
    57:    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    79: CliText* PotsCfuFeature::Attrs() const { return new PotsCfuAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCfuFeature.h
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual CliText* Attrs() const override;
    41:    virtual PotsFeatureProfile* Subscribe
    53:    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    513: void PotsCircuit::Trace(const SignalEntry& entry)
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCircuit.h
  W020 Using statement in header
    40: using namespace MediaBase;
    41: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W032 Unused function
    91:    bool IsRinging() const { return ringing_; }
    95:    bool CanFlash() const { return flash_; }
    100:    Cause::Ind GetCause() const { return cause_; }
  W042 Member could be private
    132:    void ResetCircuit();
  W054 Data could be const pointer
    220:    PotsProfile* profile_;
  W056 Default constructor invoked: POD members not initialized
    168:    struct SignalEntry
    232:    SignalEntry trace_[TraceSize];
  W078 Remove virtual tag: function is an override or final
    149:    virtual std::string Name() const override;
    153:    virtual bool Supports(ProtocolId prid) const
    158:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCliParms.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCliParms.h
  W020 Using statement in header
    28: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    76: CliText* PotsCwtFeature::Attrs() const { return new PotsCwtAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCwtFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    69: CliText* PotsCxfFeature::Attrs() const { return new PotsCxfAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsCxfFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.cpp
  W006 reinterpret_cast
    88:    auto fake = reinterpret_cast< const PotsFeature* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeature.h
  W005 Functional cast
    63:    Id Fid() const { return Id(fid_.GetId()); }
  W020 Using statement in header
    38: using namespace NodeBase;
  W026 Unused argument
    87/1:       (PotsProfile& profile, CliThread& cli) const = 0;  //d
  W042 Member could be private
    63:    Id Fid() const { return Id(fid_.GetId()); }
    71:    const char* FullName() const { return name_; }
    75:    bool CanBeDeactivated() const { return deactivation_; }
    91:    static ptrdiff_t CellDiff();
  W054 Data could be const pointer
    133:    const char* abbr_;
    137:    const char* name_;
  W065 Base class virtual destructor is not public
    108:    virtual ~PotsFeature();
  W075 Virtual function is public
    86:    virtual PotsFeatureProfile* Subscribe
  W078 Remove virtual tag: function is an override or final
    95:    virtual void Display(std::ostream& stream,
  W082 Adjacent arguments have the same type
    103:    PotsFeature(PotsFeature::Id fid, bool deactivation,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.cpp
  W006 reinterpret_cast
    97:    auto fake = reinterpret_cast< const PotsFeatureProfile* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureProfile.h
  W020 Using statement in header
    31: using namespace NodeBase;
  W026 Unused argument
    55/1:    virtual bool Deactivate(PotsProfile& profile);
    89/1:    virtual bool Unsubscribe(PotsProfile& profile);
  W042 Member could be private
    59:    PotsFeature::Id Fid() const { return fid_; }
    63:    static ptrdiff_t LinkDiff();
  W053 Data could be const
    93:    PotsFeature::Id fid_;
    97:    Q1Link link_;
  W065 Base class virtual destructor is not public
    76:    virtual ~PotsFeatureProfile();
  W075 Virtual function is public
    50:    virtual bool Activate(PotsProfile& profile, CliThread& cli);  //d
    55:    virtual bool Deactivate(PotsProfile& profile);
  W077 Virtual function has no overrides
    89:    virtual bool Unsubscribe(PotsProfile& profile);
  W078 Remove virtual tag: function is an override or final
    67:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    148: PotsFeature* PotsFeatureRegistry::Feature(PotsFeature::Id fid) const
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatureRegistry.h
  W020 Using statement in header
    36: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    73:    virtual void Display(std::ostream& stream,
  W090 Function could be const
    57:    void Audit();
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsFeatures.h
  W020 Using statement in header
    29: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    58:    virtual void Display(std::ostream& stream,
    63:    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
    64:    virtual bool Deactivate(PotsProfile& profile) override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    84: CliText* PotsHtlFeature::Attrs() const { return new PotsHtlAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsHtlFeature.h
  W020 Using statement in header
    30: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
  W053 Data could be const
    58:    Address::DN dn_;
  W078 Remove virtual tag: function is an override or final
    42:    virtual CliText* Attrs() const override;
    43:    virtual PotsFeatureProfile* Subscribe
    55:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.cpp
  W007 Cast down the inheritance hierarchy
    443:       auto mep = static_cast< MediaEndpt* >(obj);
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    112:    virtual word ProcessCommand(CliThread& cli) const override;
    155:    virtual word ProcessCommand(CliThread& cli) const override;
    184:    virtual word ProcessCommand(CliThread& cli) const override;
    230:    virtual word ProcessCommand(CliThread& cli) const override;
    268:    virtual word ProcessCommand(CliThread& cli) const override;
    341:    virtual word ProcessCommand(CliThread& cli) const override;
    397:    virtual word ProcessCommand(CliThread& cli) const override;
    481:    virtual word ProcessCommand(CliThread& cli) const override;
    519:    virtual word ProcessCommand(CliThread& cli) const override;
    622:    virtual word ProcessCommand(CliThread& cli) const override;
    666:    virtual word ProcessCommand(CliThread& cli) const override;
    722:    virtual word ProcessCommand(CliThread& cli) const override;
    793:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsIncrement.h
  W020 Using statement in header
    29: using namespace SessionTools;
  W022 Add using statement
    1: namespace NodeBase
  W060 Base class constructor is public
    40:    PbSizesCommand() = default;
  W078 Remove virtual tag: function is an override or final
    43:    virtual void DisplaySizes(CliThread& cli, bool all) const override;
    45:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/pb/PotsMessages.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.cpp
  W006 reinterpret_cast
    86:    auto fake = reinterpret_cast< const PotsProfile* >(&local);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfile.h
  W020 Using statement in header
    40: using namespace NodeBase;
    41: using namespace CallBase;
  W022 Add using statement
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    138:    virtual void Startup(RestartLevel level) override;
    142:    virtual void Shutdown(RestartLevel level) override;
    146:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    113: PotsProfile* PotsProfileRegistry::Profile(Address::DN dn) const
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProfileRegistry.h
  W020 Using statement in header
    35: using namespace NodeBase;
    36: using namespace CallBase;
  W078 Remove virtual tag: function is an override or final
    71:    virtual void Startup(RestartLevel level) override;
    75:    virtual void Shutdown(RestartLevel level) override;
    79:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.cpp
  W006 reinterpret_cast
    577:    reinterpret_cast< const PotsFacilityInfo* >(bytes)->Display(stream, prefix);
    746:    reinterpret_cast< const PotsHeaderInfo* >(bytes)->Display(stream, prefix);
    867:    reinterpret_cast< const PotsRingInfo* >(bytes)->Display(stream, prefix);
    955:    reinterpret_cast< const PotsScanInfo* >(bytes)->Display(stream, prefix);
  W007 Cast down the inheritance hierarchy
    592:    auto&            pmsg = static_cast< PotsMessage& >(msg);
    653:    auto&             pmsg = static_cast< const PotsMessage& >(msg);
    760:    auto&          pmsg = static_cast< PotsMessage& >(msg);
    786:    auto&           pmsg = static_cast< const PotsMessage& >(msg);
    880:    auto&         pmsg = static_cast< const PotsMessage& >(msg);
    968:    auto&         pmsg = static_cast< const PotsMessage& >(msg);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    57:    virtual CliText* CreateText() const override;
    70:    virtual CliText* CreateText() const override;
    83:    virtual CliText* CreateText() const override;
    96:    virtual CliText* CreateText() const override;
    109:    virtual CliText* CreateText() const override;
    122:    virtual CliText* CreateText() const override;
    135:    virtual CliText* CreateText() const override;
    143:    virtual CliText* CreateText() const override;
    161:    virtual CliText* CreateText() const override;
    174:    virtual CliText* CreateText() const override;
    196:    virtual CliParm* CreateCliParm(Usage use) const override;
    208:    virtual void DisplayMsg(ostream& stream, const string& prefix,
    210:    virtual CliParm* CreateCliParm(Usage use) const override;
    211:    virtual TestRc InjectMsg
    213:    virtual TestRc VerifyMsg
    242:    virtual void DisplayMsg(ostream& stream, const string& prefix,
    244:    virtual CliParm* CreateCliParm(Usage use) const override;
    245:    virtual TestRc InjectMsg
    247:    virtual TestRc VerifyMsg
    275:    virtual void DisplayMsg(ostream& stream, const string& prefix,
    277:    virtual CliParm* CreateCliParm(Usage use) const override;
    278:    virtual TestRc VerifyMsg
    292:    virtual void DisplayMsg(ostream& stream, const string& prefix,
    294:    virtual CliParm* CreateCliParm(Usage use) const override;
    295:    virtual TestRc VerifyMsg
  W099 Line contains adjacent spaces
    589:    id_t             index;
    590:    word             sid, ind;
    592:    auto&            pmsg = static_cast< PotsMessage& >(msg);
    652:    TestRc            rc;
    653:    auto&             pmsg = static_cast< const PotsMessage& >(msg);
    655:    id_t              index;
    656:    word              sid, ind;
    758:    word           port;
    760:    auto&          pmsg = static_cast< PotsMessage& >(msg);
    785:    TestRc          rc;
    786:    auto&           pmsg = static_cast< const PotsMessage& >(msg);
    787:    word            port;
    879:    TestRc        rc;
    880:    auto&         pmsg = static_cast< const PotsMessage& >(msg);
    882:    bool          ring = false;
    883:    auto          exists = false;
    967:    TestRc        rc;
    968:    auto&         pmsg = static_cast< const PotsMessage& >(msg);
    970:    string        scan;
    971:    auto          digits = false;
    972:    auto          flash = false;
    973:    auto          exists = false;
  W106 Function does not invoke Debug::ft
    355: CliText* PotsAlertingSignal::CreateText() const
    369: CliText* PotsDigitsSignal::CreateText() const
    383: CliText* PotsFacilitySignal::CreateText() const
    397: CliText* PotsFlashSignal::CreateText() const
    411: CliText* PotsLockoutSignal::CreateText() const
    425: CliText* PotsOffhookSignal::CreateText() const
    439: CliText* PotsOnhookSignal::CreateText() const
    453: CliText* PotsProgressSignal::CreateText() const
    467: CliText* PotsReleaseSignal::CreateText() const
    481: CliText* PotsSuperviseSignal::CreateText() const
    524: CliParm* PotsDigitsParameter::CreateCliParm(Usage use) const
    566: CliParm* PotsFacilityParameter::CreateCliParm(Usage use) const
    736: CliParm* PotsHeaderParameter::CreateCliParm(Usage use) const
    857: CliParm* PotsRingParameter::CreateCliParm(Usage use) const
    945: CliParm* PotsScanParameter::CreateCliParm(Usage use) const
C:/Users/gregu/Documents/rsc/rsc/pb/PotsProtocol.h
  W020 Using statement in header
    46: using namespace NodeBase;
    47: using namespace SessionBase;
    48: using namespace MediaBase;
    49: using namespace CallBase;
  W028 Unused data
    106:    static const Id LastId    = NextId + 9;  // range constant
    134:    static const Id LastId   = NextId + 7;  // range constant
    226:    static const Ind MaxInd         = UINT8_MAX;
  W032 Unused function
    293:    MediaInfo* AddMedia(const MediaInfo& media);
    447:    virtual void InjectFinalMsg() override;
  W043 Member could be protected
    269:    explicit PotsMessage(SbIpBufferPtr& buff);
  W060 Base class constructor is public
    269:    explicit PotsMessage(SbIpBufferPtr& buff);
    273:    PotsMessage(ProtocolSM* psm, size_t size);
  W078 Remove virtual tag: function is an override or final
    418:    virtual void Display(std::ostream& stream,
    427:    virtual void EnsureMediaMsg() override;
    431:    virtual Message::Route Route() const override;
    435:    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
    439:    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
    443:    virtual void SendFinalMsg() override;
    447:    virtual void InjectFinalMsg() override;
  W112 Function could be defaulted
    114:    virtual ~PotsSignal();
    142:    virtual ~PotsParameter();
C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    74: CliText* PotsSusFeature::Attrs() const { return new PotsSusAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsSusFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    85: CliText* PotsTwcFeature::Attrs() const { return new PotsTwcAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsTwcFeature.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual CliText* Attrs() const override;
    39:    virtual PotsFeatureProfile* Subscribe
C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    96: CliText* PotsWmlFeature::Attrs() const { return new PotsWmlAttrs; }
C:/Users/gregu/Documents/rsc/rsc/pb/PotsWmlFeature.h
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    41:    virtual CliText* Attrs() const override;
    42:    virtual PotsFeatureProfile* Subscribe
    54:    virtual void Display(std::ostream& stream,
    57:    virtual bool Activate(PotsProfile& profile, CliThread& cli) override;
C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/rn/RnModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/rsc/main.cpp
  W015 #include not sorted in standard order
    97: #include "AnModule.h"
  W032 Unused function
    137: main_t main(int argc, char* argv[])
C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeMsgEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSapEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    91: void AnalyzeSapEvent::Capture
C:/Users/gregu/Documents/rsc/rsc/sb/AnalyzeSnpEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    87: void AnalyzeSnpEvent::Capture
C:/Users/gregu/Documents/rsc/rsc/sb/Context.cpp
  W006 reinterpret_cast
    573:    auto fake = reinterpret_cast< const Context* >(&local);
    886:             auto toi = reinterpret_cast< TimeoutInfo* >(pptr->bytes);
  W007 Cast down the inheritance hierarchy
    763:                inv = static_cast< InvokerThread* >(Thread::RunningThread());
    882:             (m)->FindParm(Parameter::Timeout);
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    75:    virtual void Display(ostream& stream, const string& prefix) const override;
    79:    virtual const char* what() const noexcept override;
  W106 Function does not invoke Debug::ft
    329: void Context::Dump() const
    953: bool Context::TraceOn()
    963: bool Context::TraceOn(TransTrace*& trans)
  W107 Function does not invoke Debug::ft as first statement
    695:    Debug::ft(Context_ProcessWork);
C:/Users/gregu/Documents/rsc/rsc/sb/Context.h
  W020 Using statement in header
    43: using namespace NodeBase;
  W026 Unused argument
    122/1:    static void Kill(fn_name_arg func, debug64_t errval, debug32_t offset);
  W032 Unused function
    117:    virtual void NextPort(MsgPort*& port) const { port = nullptr; }
    127:    static void Dump(fn_name_arg func, debug64_t errval, debug32_t offset);
    272:    size_t MsgCount(bool priority, bool standard) const;
  W037 Member hides inherited name
    167:    static ptrdiff_t LinkDiff();
  W053 Data could be const
    312:    Q2Link link_;
    336:    Faction faction_;
  W056 Default constructor invoked: POD members not initialized
    225:    struct MessageEntry
    360:    MessageEntry trace_[TraceSize];
  W065 Base class virtual destructor is not public
    189:    virtual ~Context();
  W075 Virtual function is public
    101:    virtual ContextType Type() const = 0;
    105:    virtual RootServiceSM* RootSsm() const { return nullptr; }
    109:    virtual ProtocolSM* FirstPsm() const { return nullptr; }
    113:    virtual void NextPsm(ProtocolSM*& psm) const { psm = nullptr; }
    117:    virtual void NextPort(MsgPort*& port) const { port = nullptr; }
  W078 Remove virtual tag: function is an override or final
    171:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    175:    virtual void Display(std::ostream& stream,
    180:    virtual void Patch(sel_t selector, void* arguments) override;
    202:    virtual void Cleanup() override;
  W082 Adjacent arguments have the same type
    133:    void TraceMsg(ProtocolId prid, SignalId sid, MsgDirection dir);
  W088 Argument could be const
    291/1:    bool ProcessMsg(Q1Way< Message >& msgq, const InvokerThread* inv);
  W090 Function could be const
    159:    bool StopTimer(const Base& owner, TimerId tid);
  W092 Function could be free
    122:    static void Kill(fn_name_arg func, debug64_t errval, debug32_t offset);
    127:    static void Dump(fn_name_arg func, debug64_t errval, debug32_t offset);
C:/Users/gregu/Documents/rsc/rsc/sb/Event.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    138: void Event::Capture
C:/Users/gregu/Documents/rsc/rsc/sb/Event.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W042 Member could be private
    114:    virtual bool SaveContext();
    125:    virtual Event* RestoreContext(EventHandler::Rc& rc);
    131:    virtual void FreeContext(bool freeMsg);
    159:    virtual bool Save();
    163:    virtual Event* Restore(EventHandler::Rc& rc);
    167:    virtual void Free();
  W053 Data could be const
    214:    Id eid_;
  W075 Virtual function is public
    114:    virtual bool SaveContext();
    125:    virtual Event* RestoreContext(EventHandler::Rc& rc);
    131:    virtual void FreeContext(bool freeMsg);
  W078 Remove virtual tag: function is an override or final
    135:    virtual void Display(std::ostream& stream,
    140:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    56:    static bool IsValidId(Id eid)
    72:    static bool AppCanHandle(Id eid)
C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/EventHandler.h
  W020 Using statement in header
    40: using namespace NodeBase;
  W065 Base class virtual destructor is not public
    126:    virtual ~EventHandler();
  W075 Virtual function is public
    117:    virtual Rc ProcessEvent
  W092 Function could be free
    86:    static bool AppCanRegister(Id ehid)
    94:    static bool AppCanUse(Id ehid)
  W111 Override of Object.Patch not found
    50: class EventHandler : public Protected
C:/Users/gregu/Documents/rsc/rsc/sb/Factory.cpp
  W006 reinterpret_cast
    202:    auto fake = reinterpret_cast< const Factory* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W099 Line contains adjacent spaces
    49:    CounterPtr       icMsgsIntra_;
    50:    CounterPtr       icMsgsInter_;
    52:    CounterPtr       ogMsgsIntra_;
    53:    CounterPtr       ogMsgsInter_;
    55:    CounterPtr       contexts_;
    56:    CounterPtr       msgsDeleted_;
    57:    CounterPtr       ctxsDeleted_;
  W106 Function does not invoke Debug::ft
    219: size_t Factory::DiscardedContextCount() const
    226: size_t Factory::DiscardedMessageCount() const
  W110 Override of Base.Display not found
    43: class FactoryStats : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/sb/Factory.h
  W005 Functional cast
    87:    Id Fid() const { return Id(fid_.GetId()); }
  W020 Using statement in header
    45: using namespace NodeBase;
  W026 Unused argument
    127/1:    virtual Message* AllocOgMsg(SignalId sid) const;
  W032 Unused function
    219:    void SetFaction(Faction faction) { faction_ = faction; }
  W053 Data could be const
    267:    ProtocolId prid_;
  W054 Data could be const pointer
    271:    const char* name_;
  W065 Base class virtual destructor is not public
    203:    virtual ~Factory();
  W075 Virtual function is public
    121:    virtual CliText* CreateText() const;
    127:    virtual Message* AllocOgMsg(SignalId sid) const;
    134:    virtual bool InjectMsg(Message& msg) const;
    140:    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const;
    150:    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
    172:    virtual void DisplayStats(std::ostream& stream) const;
  W077 Virtual function has no overrides
    172:    virtual void DisplayStats(std::ostream& stream) const;
  W078 Remove virtual tag: function is an override or final
    180:    virtual void Startup(RestartLevel level) override;
    184:    virtual void Shutdown(RestartLevel level) override;
    188:    virtual void Display(std::ostream& stream,
    193:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    157:    void RecordMsg(bool incoming, bool inter, size_t size) const;
  W088 Argument could be const
    150/1:    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
  W090 Function could be const
    150:    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq);
C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    46:    virtual void DisplayStats(ostream& stream, id_t id) const override;
  W106 Function does not invoke Debug::ft
    151: Factory* FactoryRegistry::GetFactory(FactoryId fid) const
C:/Users/gregu/Documents/rsc/rsc/sb/FactoryRegistry.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    53:    virtual void Startup(RestartLevel level) override;
    57:    virtual void Shutdown(RestartLevel level) override;
    61:    virtual void Display(std::ostream& stream,
    66:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/ForceTransitionEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/GlobalAddress.h
  W020 Using statement in header
    30: using namespace NetworkBase;
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    49:    GlobalAddress(const SysIpL3Addr& l3Addr, FactoryId fid);
    85:    bool operator!=(const GlobalAddress& that) const;
  W078 Remove virtual tag: function is an override or final
    89:    virtual void Display(std::ostream& stream,
    94:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    53:    GlobalAddress(const SysIpL2Addr& l2Addr, ipport_t port, FactoryId fid);
C:/Users/gregu/Documents/rsc/rsc/sb/InitiationReqEvent.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    89: void InitiationReqEvent::Capture
C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.cpp
  W006 reinterpret_cast
    210:    auto fake = reinterpret_cast< const Initiator* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/Initiator.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W053 Data could be const
    120:    ServiceId sid_;
    124:    ServiceId aid_;
    128:    TriggerId tid_;
    136:    Q1Link link_;
  W065 Base class virtual destructor is not public
    93:    virtual ~Initiator();
  W078 Remove virtual tag: function is an override or final
    75:    virtual void Display(std::ostream& stream,
    80:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    88:    Initiator(ServiceId sid, ServiceId aid, TriggerId tid, Priority prio);
  W088 Argument could be const
    107/2:       (const ServiceSM& parentSsm, Event& currEvent, Event*& nextEvent) const;
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.cpp
  W006 reinterpret_cast
    187:          reinterpret_cast< word* >(&poolSize_), 1,
    227:    auto fake = reinterpret_cast< const InvokerPool* >(&local);
  W007 Cast down the inheritance hierarchy
    182:    cfgInvokers_.reset(static_cast< CfgIntParm* >(reg->FindParm(parmKey)));
    535:       auto inv = static_cast< InvokerThread* >(Thread::RunningThread());
  W022 Add using statement
    1: namespace NodeBase
  W099 Line contains adjacent spaces
    65:    CounterPtr       requeues_;
    66:    CounterPtr       trojans_;
    67:    CounterPtr       lockouts_;
  W106 Function does not invoke Debug::ft
    700: void InvokerPool::RecordDelay(Message::Priority prio, msecs_t delay) const
    804: size_t InvokerPool::WorkQCurrLength(Message::Priority prio) const
    812: msecs_t InvokerPool::WorkQMaxDelay(Message::Priority prio) const
    820: size_t InvokerPool::WorkQMaxLength(Message::Priority prio) const
  W110 Override of Base.Display not found
    58: class InvokerPoolStats : public Dynamic
    72: class InvokerWork : public Dynamic
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPool.h
  W005 Functional cast
    69:    Faction GetFaction() const { return Faction(faction_.GetId()); }
  W020 Using statement in header
    43: using namespace NodeBase;
  W042 Member could be private
    91:    static ptrdiff_t CellDiff();
  W065 Base class virtual destructor is not public
    116:    virtual ~InvokerPool();
  W075 Virtual function is public
    87:    virtual void DisplayStats(std::ostream& stream) const;
  W077 Virtual function has no overrides
    87:    virtual void DisplayStats(std::ostream& stream) const;
  W078 Remove virtual tag: function is an override or final
    95:    virtual void Startup(RestartLevel level) override;
    99:    virtual void Display(std::ostream& stream,
    104:    virtual void Patch(sel_t selector, void* arguments) override;
    203:    virtual void ClaimBlocks() override;
  W090 Function could be const
    147:    void KickThread();
    151:    Context* FindWork();
    175:    void Requeue(Context& ctx);
    183:    void ScheduledOut();
  W092 Function could be free
    187:    static bool GenerateLog(Factory::Rc rc);
    199:    static TransTrace* TraceRxNet(Message& msg, const Factory& fac);
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.cpp
  W005 Functional cast
    92:       auto p = reg->Pool(Faction(id));
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    46:    virtual void DisplayStats(ostream& stream, id_t id) const override;
  W106 Function does not invoke Debug::ft
    178: InvokerPool* InvokerPoolRegistry::Pool(Faction faction) const
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerPoolRegistry.h
  W020 Using statement in header
    34: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    64:    virtual void ClaimBlocks() override;
    68:    virtual void Startup(RestartLevel level) override;
    72:    virtual void Display(std::ostream& stream,
    77:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.cpp
  W006 reinterpret_cast
    124:    auto fake = reinterpret_cast< const InvokerThread* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    113: TraceStatus InvokerThread::CalcStatus(bool dynamic) const
C:/Users/gregu/Documents/rsc/rsc/sb/InvokerThread.h
  W020 Using statement in header
    40: using namespace NodeBase;
  W042 Member could be private
    63:    static word RtcYieldPercent() { return RtcYieldPercent_; }
    71:    static ptrdiff_t CellDiff2();
  W053 Data could be const
    133:    RegCell iid_;
    159:    static word RtcYieldPercent_;
  W078 Remove virtual tag: function is an override or final
    75:    virtual void Display(std::ostream& stream,
    80:    virtual void Patch(sel_t selector, void* arguments) override;
    106:    virtual const char* AbbrName() const override;
    111:    virtual void Enter() override;
    116:    virtual bool BlockingAllowed(BlockingReason why, fn_name_arg func) override;
    120:    virtual void ScheduledIn(fn_name_arg func) override;
    124:    virtual TraceStatus CalcStatus(bool dynamic) const override;
    129:    virtual RecoveryAction Recover() override;
C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/LocalAddress.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W032 Unused function
    66:    bool operator!=(const LocalAddress& that) const;
  W114 Function could be tagged noexcept
    49:    LocalAddress() : bid(NIL_ID), seq(0), pid(NIL_ID), fid(NIL_ID) { }
    53:    LocalAddress(const LocalAddress& that) = default;
    57:    LocalAddress& operator=(const LocalAddress& that) = default;
C:/Users/gregu/Documents/rsc/rsc/sb/Message.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    244: MsgDirection Message::Dir() const
    331: ProtocolId Message::GetProtocol() const
    366: SignalId Message::GetSignal() const
    422: MsgHeader* Message::Header() const
C:/Users/gregu/Documents/rsc/rsc/sb/Message.h
  W020 Using statement in header
    46: using namespace NetworkBase;
    47: using namespace NodeBase;
  W029 Unused enum
    89:    enum Location
  W030 Unused enumerator
    91:       NotQueued,     // being built by a factory
    92:       ContextQ,      // has arrived at a context
    93:       PsmIncomingQ,  // has arrived at a PSM
    94:       PsmOutgoingQ,  // has been sent by a PSM
    95:       PsmPendingQ    // being built by a PSM
    105:       IllegalSignal,   // illegal signal found              0000  sid
    106:       IllegalParm,     // illegal parameter found          index  pid
    107:       IncompleteParm,  // parameter too short              index  pid
    108:       MissingParm,     // mandatory parameter missing       0000  pid
    109:       Overflow,        // last parameter extends past end  index  pid
    110:       Trampled         // last parameter trampled fence    index  pid
  W032 Unused function
    198:    Message* FindSignal(SignalId sid) const;
  W042 Member could be private
    350:    virtual void Handled(bool retain);
    354:    virtual bool SendFailure(debug64_t errval, debug32_t offset);
  W043 Member could be protected
    149:    virtual InspectRc InspectMsg(debug32_t& errval) const;
    258:    MsgDirection Dir() const;
  W075 Virtual function is public
    149:    virtual InspectRc InspectMsg(debug32_t& errval) const;
    169:    virtual void Save();
    174:    virtual void Unsave();
    182:    virtual bool Retrieve(ProtocolSM* psm);
    189:    virtual bool Relay(ProtocolSM& ogPsm);
    193:    virtual bool SendToSelf();
    250:    virtual void SetReceiver(const GlobalAddress& receiver);
    254:    virtual void SetSender(const GlobalAddress& sender);
    279:    virtual bool Send(Route route);
    283:    virtual bool Restore();
  W077 Virtual function has no overrides
    169:    virtual void Save();
    174:    virtual void Unsave();
    182:    virtual bool Retrieve(ProtocolSM* psm);
    189:    virtual bool Relay(ProtocolSM& ogPsm);
    193:    virtual bool SendToSelf();
    250:    virtual void SetReceiver(const GlobalAddress& receiver);
    254:    virtual void SetSender(const GlobalAddress& sender);
    283:    virtual bool Restore();
    337:    virtual void Refresh();
    350:    virtual void Handled(bool retain);
    354:    virtual bool SendFailure(debug64_t errval, debug32_t offset);
    362:    virtual void ClearContext() const;
  W078 Remove virtual tag: function is an override or final
    299:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    303:    virtual void Display(std::ostream& stream,
    308:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    127:    void SetSignal(SignalId sid);
    131:    void SetJoin(bool join);
    242:    void SetProtocol(ProtocolId prid);
    246:    void SetPriority(Priority prio);
    250:    virtual void SetReceiver(const GlobalAddress& receiver);
    254:    virtual void SetSender(const GlobalAddress& sender);
    379:    void SetRxAddr(const LocalAddress& rxaddr);
  W092 Function could be free
    291:    static const char* strPriority(Priority prio);
C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.cpp
  W007 Cast down the inheritance hierarchy
    82:    static_cast< MsgFactory* >(fac)->ProcessIcMsg(msg);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/MsgContext.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    42:    virtual void Patch(sel_t selector, void* arguments) override;
    54:    virtual ContextType Type() const override { return SingleMsg; }
    58:    virtual void EndOfTransaction() override;
    62:    virtual void ProcessIcMsg(Message& msg) override;
C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/MsgFactory.h
  W042 Member could be private
    58:    static void CaptureMsg(Context& ctx, const Message& msg, TransTrace* tt);
  W078 Remove virtual tag: function is an override or final
    41:    virtual void Patch(sel_t selector, void* arguments) override;
    53:    virtual Context* AllocContext() const override;
    64:    virtual Rc ReceiveMsg
  W092 Function could be free
    58:    static void CaptureMsg(Context& ctx, const Message& msg, TransTrace* tt);
C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/MsgHeader.h
  W020 Using statement in header
    34: using namespace NetworkBase;
  W042 Member could be private
    53:    uint8_t           spare    : 6;   // reserved for future use
  W099 Line contains adjacent spaces
    44:    LocalAddress      txAddr;         // source address
    45:    LocalAddress      rxAddr;         // destination address
    47:    bool              initial  : 1;   // true for initial message
    48:    bool              final    : 1;   // true for final message
    49:    bool              join     : 1;   // true to create PSM and join root SSM
    50:    bool              self     : 1;   // true for message to self
    51:    bool              injected : 1;   // true if sent by InjectCommand
    52:    bool              kill     : 1;   // true to kill context on arrival
    53:    uint8_t           spare    : 6;   // reserved for future use
    54:    Message::Route    route    : 2;   // the route that the message took
    55:    ProtocolId        protocol : 16;  // message's protocol
    56:    SignalId          signal   : 16;  // message's signal
    57:    uint16_t          length   : 16;  // total bytes in all parameters
C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.cpp
  W007 Cast down the inheritance hierarchy
    77:    locAddr_.sbAddr_.fid = static_cast< ProtocolSM& >(upper).GetFactory();
    150:    return static_cast< PsmFactory* >(fac)->AllocIcPsm(msg, *this);
    214:    auto port = static_cast< MsgPort* >(pool->BidToObj(locAddr.bid));
    271:       static_cast< PsmFactory* >(fac)->PortAllocated(*this, msg);
  W008 Cast removes const qualification
    350:    return const_cast< MsgPort* >(this);
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/MsgPort.h
  W022 Add using statement
    1: namespace NodeBase
  W028 Unused data
    142:    static const PooledObjectId MaxId = 0x40000;  // 2^18 = 256K
  W078 Remove virtual tag: function is an override or final
    94:    virtual MsgPort* Port() const override;
    98:    virtual ProtocolSM* UppermostPsm() const override;
    102:    virtual FactoryId GetFactory()
    108:    virtual ProtocolLayer* JoinPeer
    113:    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
    117:    virtual void Display(std::ostream& stream,
    122:    virtual void Patch(sel_t selector, void* arguments) override;
    130:    virtual Message::Route Route() const override;
    134:    virtual void AdjacentDeleted(bool upper) override;
    138:    virtual void Cleanup() override;
    146:    virtual ProtocolLayer* AllocUpper(const Message& msg) override;
    150:    virtual Event* ReceiveMsg(Message& msg) override;
    155:    virtual bool SendMsg(Message& msg) override;
    160:    virtual Message* WrapMsg(Message& msg) override;
  W092 Function could be free
    185:    static MsgPort* FindPeer(const GlobalAddress& remAddr);
C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.cpp
  W006 reinterpret_cast
    102:    auto fake = reinterpret_cast< const Parameter* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    194: Parameter::Usage Parameter::GetUsage(SignalId sid) const
C:/Users/gregu/Documents/rsc/rsc/sb/Parameter.h
  W005 Functional cast
    79:    Id Pid() const { return Id(pid_.GetId()); }
  W020 Using statement in header
    40: using namespace NodeBase;
  W030 Unused enumerator
    115:       StreamContainsIllegalParm,
  W032 Unused function
    83:    ProtocolId Prid() const { return prid_; }
  W053 Data could be const
    186:    ProtocolId prid_;
  W065 Base class virtual destructor is not public
    172:    virtual ~Parameter();
  W075 Virtual function is public
    93:    virtual void DisplayMsg(std::ostream& stream,
    102:    virtual CliParm* CreateCliParm(Usage use) const;
    131:    virtual TestRc InjectMsg(CliThread& cli, Message& msg, Usage use) const;
    143:    virtual TestRc VerifyMsg
  W078 Remove virtual tag: function is an override or final
    156:    virtual void Display(std::ostream& stream,
    161:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    148:    static const char* ExplainRc(TestRc rc);
C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.cpp
  W006 reinterpret_cast
    92:    auto fake = reinterpret_cast< const Protocol* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    135: Parameter* Protocol::FirstParm() const
    148: Signal* Protocol::FirstSignal() const
    161: Parameter* Protocol::GetParameter(ParameterId pid) const
    173: Signal* Protocol::GetSignal(SignalId sid) const
    185: void Protocol::NextParm(Parameter*& parm) const
    198: void Protocol::NextSignal(Signal*& sig) const
C:/Users/gregu/Documents/rsc/rsc/sb/Protocol.h
  W005 Functional cast
    71:    Id Prid() const { return Id(prid_.GetId()); }
  W020 Using statement in header
    40: using namespace NodeBase;
  W032 Unused function
    80:    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const = 0;
  W042 Member could be private
    71:    Id Prid() const { return Id(prid_.GetId()); }
  W065 Base class virtual destructor is not public
    136:    virtual ~Protocol();
  W075 Virtual function is public
    80:    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const = 0;
    112:    virtual void DisplayMsg(std::ostream& stream,
  W078 Remove virtual tag: function is an override or final
    121:    virtual void Display(std::ostream& stream,
    126:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolLayer.h
  W020 Using statement in header
    34: using namespace NetworkBase;
    35: using namespace NodeBase;
  W026 Unused argument
    174/1:    virtual ProtocolLayer* AllocLower(const Message* msg);
  W032 Unused function
    75:    bool IsLowermost() const { return lower_ == nullptr; }
  W042 Member could be private
    119:    virtual ProtocolLayer* JoinPeer
    126:    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) = 0;
  W043 Member could be protected
    71:    bool IsUppermost() const { return upper_ == nullptr; }
    96:    virtual FactoryId GetFactory() const = 0;
  W065 Base class virtual destructor is not public
    150:    virtual ~ProtocolLayer();
  W075 Virtual function is public
    59:    virtual MsgPort* Port() const = 0;
    63:    virtual ProtocolSM* UppermostPsm() const = 0;
    96:    virtual FactoryId GetFactory() const = 0;
    100:    virtual Message::Route Route() const = 0;
    109:    virtual SysTcpSocket* CreateAppSocket();
    119:    virtual ProtocolLayer* JoinPeer
    126:    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) = 0;
  W078 Remove virtual tag: function is an override or final
    130:    virtual void Display(std::ostream& stream,
    135:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    191:    virtual Message* UnwrapMsg(Message& msg);
    198:    virtual Message* WrapMsg(Message& msg);
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    79: Protocol* ProtocolRegistry::GetProtocol(ProtocolId prid) const
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolRegistry.h
  W020 Using statement in header
    35: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    54:    virtual void Display(std::ostream& stream,
    59:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.cpp
  W007 Cast down the inheritance hierarchy
    434:       auto psm = static_cast< ProtocolSM* >(layer);
  W008 Cast removes const qualification
    698:    if(upper == nullptr) return const_cast< ProtocolSM* >(this);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/ProtocolSM.h
  W022 Add using statement
    1: namespace NodeBase
  W026 Unused argument
    300/1:    virtual void MsgHandled(Message& msg) { }
    306/1:    virtual void RestoreIcMsg(Message& msg) { }
    312/1:    virtual void RefreshMsg(Message& msg) { }
  W030 Unused enumerator
    95:       SignalUnknown,     // signal not recognized
    97:       ParameterUnknown,  // parameter not recognized
    98:       ParameterInvalid,  // parameter not valid for this signal
  W032 Unused function
    136:    Message* FirstSentMsg() const { return sentMsgq_.First(); }
    194:    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
    324:    virtual void InjectFinalMsg();
  W042 Member could be private
    67:    typedef uint8_t Priority;
    250:    virtual bool SendMsg(Message& msg) override;
  W043 Member could be protected
    75:    enum IncomingRc
    84:    enum OutgoingRc
    130:    Message* FirstOgMsg() const { return ogMsgq_.First(); }
  W053 Data could be const
    371:    FactoryId fid_;
  W077 Virtual function has no overrides
    240:    virtual void SetState(StateId stid);
    295:    virtual Priority GetPriority() const { return NormalPriority; }
    300:    virtual void MsgHandled(Message& msg) { }
    306:    virtual void RestoreIcMsg(Message& msg) { }
    312:    virtual void RefreshMsg(Message& msg) { }
  W078 Remove virtual tag: function is an override or final
    144:    virtual FactoryId GetFactory() const override { return fid_; }
    177:    virtual MsgPort* Port() const override;
    181:    virtual ProtocolSM* UppermostPsm() const override;
    188:    virtual ProtocolLayer* JoinPeer
    194:    virtual bool DropPeer(const GlobalAddress& peerPrevRemAddr) override;
    198:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    202:    virtual void Display(std::ostream& stream,
    207:    virtual void Patch(sel_t selector, void* arguments) override;
    246:    virtual Event* ReceiveMsg(Message& msg) override;
    250:    virtual bool SendMsg(Message& msg) override;
    254:    virtual void Cleanup() override;
    260:    virtual ProtocolLayer* AllocLower(const Message* msg) override;
    265:    virtual Message* UnwrapMsg(Message& msg) override;
  W090 Function could be const
    117:    void StopTimer(const Base& owner, TimerId tid);
C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/PsmContext.h
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    84:    virtual void NextPort(MsgPort*& port) const override { portq_.Next(port); }
  W078 Remove virtual tag: function is an override or final
    43:    virtual ProtocolSM* FirstPsm() const override { return psmq_.First(); }
    47:    virtual void NextPsm(ProtocolSM*& psm) const override { psmq_.Next(psm); }
    51:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    55:    virtual void Display(std::ostream& stream,
    60:    virtual void Patch(sel_t selector, void* arguments) override;
    76:    virtual ContextType Type() const override { return SinglePort; }
    80:    virtual MsgPort* FirstPort() const override { return portq_.First(); }
    84:    virtual void NextPort(MsgPort*& port) const override { portq_.Next(port); }
    89:    virtual void EndOfTransaction() override;
    93:    virtual bool IsIdle() const override { return psmq_.Empty(); }
    97:    virtual void EnqPsm(ProtocolSM& psm) override;
    101:    virtual void HenqPsm(ProtocolSM& psm) override;
    105:    virtual void ExqPsm(ProtocolSM& psm) override;
    109:    virtual void EnqPort(MsgPort& port) override;
    113:    virtual void ExqPort(MsgPort& port) override;
    117:    virtual void ProcessIcMsg(Message& msg) override;
C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/PsmFactory.h
  W078 Remove virtual tag: function is an override or final
    41:    virtual void Patch(sel_t selector, void* arguments) override;
    53:    virtual Context* AllocContext() const override;
    58:    virtual Rc ReceiveMsg
C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.cpp
  W007 Cast down the inheritance hierarchy
    48:    ctx_ = static_cast< SsmContext* >(Context::RunningContext());
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/RootServiceSM.h
  W022 Add using statement
    1: namespace NodeBase
  W026 Unused argument
    50/1:    virtual Event* RaiseProtocolError(ProtocolSM& psm, ProtocolSM::Error err);
  W075 Virtual function is public
    50:    virtual Event* RaiseProtocolError(ProtocolSM& psm, ProtocolSM::Error err);
  W078 Remove virtual tag: function is an override or final
    54:    virtual void Display(std::ostream& stream,
    59:    virtual void Patch(sel_t selector, void* arguments) override;
    77:    virtual EventHandler::Rc ProcessSap
    82:    virtual EventHandler::Rc ProcessSnp
    87:    virtual EventHandler::Rc ProcessSip
    93:    virtual EventHandler::Rc ProcessInitAck
    99:    virtual EventHandler::Rc ProcessInitNack
C:/Users/gregu/Documents/rsc/rsc/sb/SbCliParms.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbCliParms.h
  W020 Using statement in header
    28: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/sb/SbEvents.h
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    91:    StateId CurrState() const { return currState_; }
    104:    Message* SavedMsg() const { return savedMsg_; }
    213:    StateId CurrState() const { return currState_; }
    217:    StateId NextState() const { return nextState_; }
    358:    bool IsInitiation() const { return initiation_; }
    369:    Message* GetMessage() const { return message_; }
  W078 Remove virtual tag: function is an override or final
    53:    virtual void Display(std::ostream& stream,
    58:    virtual void Patch(sel_t selector, void* arguments) override;
    63:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    68:    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
    108:    virtual bool SaveContext() override;
    112:    virtual Event* RestoreContext(EventHandler::Rc& rc) override;
    116:    virtual void FreeContext(bool freeMsg) override;
    120:    virtual void Display(std::ostream& stream,
    125:    virtual void Patch(sel_t selector, void* arguments) override;
    129:    virtual bool Save() override;
    133:    virtual Event* Restore(EventHandler::Rc& rc) override;
    137:    virtual void Free() override;
    148:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    153:    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
    157:    virtual void SetCurrSsm(ServiceSM* ssm) override { currSsm_ = ssm; }
    161:    virtual void SetCurrInitiator(const Initiator* init) override
    166:    virtual void Capture
    233:    virtual void Display(std::ostream& stream,
    238:    virtual void Patch(sel_t selector, void* arguments) override;
    249:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    254:    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
    258:    virtual void Capture
    306:    virtual void Display(std::ostream& stream,
    311:    virtual void Patch(sel_t selector, void* arguments) override;
    316:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    403:    virtual void Display(std::ostream& stream,
    408:    virtual void Patch(sel_t selector, void* arguments) override;
    413:    virtual Event* BuildSap(ServiceSM& owner, TriggerId tid) override;
    418:    virtual Event* BuildSnp(ServiceSM& owner, TriggerId tid) override;
    422:    virtual void Capture
C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbExtInputHandler.h
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Patch(sel_t selector, void* arguments) override;
    60:    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.cpp
  W007 Cast down the inheritance hierarchy
    48:    auto pid = ssm.CalcPort(static_cast< const AnalyzeMsgEvent& >(currEvent));
    124:    auto& fte = static_cast< ForceTransitionEvent& >(currEvent);
    138:    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbHandlers.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    45:    virtual Rc ProcessEvent
    59:    virtual Rc ProcessEvent
    73:    virtual Rc ProcessEvent
    87:    virtual Rc ProcessEvent
    101:    virtual Rc ProcessEvent
  W111 Override of Object.Patch not found
    40: class SbAnalyzeMessage : public EventHandler
    54: class SbAnalyzeSap : public EventHandler
    68: class SbAnalyzeSnp : public EventHandler
    82: class SbForceTransition : public EventHandler
    96: class SbInitiationReq : public EventHandler
C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.cpp
  W004 C-style cast
    752:    ((ProtocolSM*) p)->Kill();
  W005 Functional cast
    701:       auto pool = reg->Pool(Faction(sc));
  W007 Cast down the inheritance hierarchy
    819:       auto msg = static_cast< Message* >(obj);
    906:       auto port = static_cast< MsgPort* >(obj);
    1118:       auto psm = static_cast< ProtocolSM* >(obj);
    1350:       auto ssm = static_cast< ServiceSM* >(obj);
    1563:       auto tmr = static_cast< Timer* >(obj);
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    274:    virtual word ProcessCommand(CliThread& cli) const override;
    318:    virtual word ProcessCommand(CliThread& cli) const override;
    465:    virtual word ProcessCommand(CliThread& cli) const override;
    521:    virtual word ProcessCommand(CliThread& cli) const override;
    662:    virtual word ProcessCommand(CliThread& cli) const override;
    723:    virtual word ProcessCommand(CliThread& cli) const override;
    765:    virtual word ProcessCommand(CliThread& cli) const override;
    860:    virtual word ProcessCommand(CliThread& cli) const override;
    944:    virtual word ProcessCommand(CliThread& cli) const override;
    1016:    virtual word ProcessCommand(CliThread& cli) const override;
    1072:    virtual word ProcessCommand(CliThread& cli) const override;
    1177:    virtual word ProcessCommand(CliThread& cli) const override;
    1233:    virtual word ProcessCommand(CliThread& cli) const override;
    1304:    virtual word ProcessCommand(CliThread& cli) const override;
    1388:    virtual word ProcessCommand(CliThread& cli) const override;
    1515:    virtual word ProcessCommand(CliThread& cli) const override;
    1601:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/sb/SbIncrement.h
  W020 Using statement in header
    30: using namespace NetworkBase;
  W022 Add using statement
    1: namespace NodeBase
  W028 Unused data
    57:    static const id_t LastSbIndex    = LastNwIndex + 9;
    86:    static const id_t LastSbIndex   = LastNwIndex + 6;
    115:    static const id_t LastSbIndex   = LastNwIndex + 5;
  W078 Remove virtual tag: function is an override or final
    64:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    93:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    122:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    137:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    150:    virtual word ProcessCommand(CliThread& cli) const override;
  W112 Function could be defaulted
    42:    virtual ~SbClearWhatParm() { }
    62:    virtual ~SbClearCommand() { }
    75:    virtual ~SbExcludeWhatParm() { }
    91:    virtual ~SbExcludeCommand() { }
    104:    virtual ~SbIncludeWhatParm() { }
    120:    virtual ~SbIncludeCommand() { }
    135:    virtual ~SbQueryCommand() { }
    147:    SbStatusCommand() { }
    148:    virtual ~SbStatusCommand() { }
C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.cpp
  W006 reinterpret_cast
    77:    auto header = reinterpret_cast< const MsgHeader* >(source);
  W007 Cast down the inheritance hierarchy
    108:    SbIpBufferPtr sbbuff(static_cast< SbIpBuffer* >(buff.release()));
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbInputHandler.h
  W020 Using statement in header
    28: using namespace NetworkBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    47:    virtual void Patch(sel_t selector, void* arguments) override;
    57:    virtual IpBuffer* AllocBuff(const byte_t* source, size_t size,
    87:    virtual void ReceiveBuff
C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.cpp
  W007 Cast down the inheritance hierarchy
    59:       (static_cast< CfgIntParm* >(reg->FindParm("NoIngressQueueLength")));
    71:       (static_cast< CfgIntParm* >(reg->FindParm("NoIngressMessageCount")));
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbInvokerPools.h
  W022 Add using statement
    1: namespace NodeBase
  W075 Virtual function is public
    42:    virtual bool RejectIngressWork() const override;
  W078 Remove virtual tag: function is an override or final
    42:    virtual bool RejectIngressWork() const override;
    46:    virtual void Display(std::ostream& stream,
    51:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbIpBuffer.h
  W006 reinterpret_cast
    64:       { return reinterpret_cast< MsgHeader* >(HeaderPtr()); }
  W020 Using statement in header
    30: using namespace NetworkBase;
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    85:    static void operator delete(void* addr, SbPoolUser user);
  W078 Remove virtual tag: function is an override or final
    68:    virtual void Display(std::ostream& stream,
    73:    virtual void Patch(sel_t selector, void* arguments) override;
    89:    virtual size_t PayloadSize() const override;
C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    66:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    42:    virtual void Patch(sel_t selector, void* arguments) override;
    54:    virtual void Startup(RestartLevel level) override;
    58:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    62:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.cpp
  W007 Cast down the inheritance hierarchy
    217:       auto port = static_cast< MsgPort* >(obj);
    277:    auto psm = static_cast< ProtocolSM* >(NextUsed(psmToAudit_));
    294:       psm = static_cast< ProtocolSM* >(NextUsed(psmToAudit_));
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    397: void TimerPool::IncrTimeouts() const
C:/Users/gregu/Documents/rsc/rsc/sb/SbPools.h
  W020 Using statement in header
    35: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    78:    virtual void ClaimBlocks() override;
    82:    virtual void Patch(sel_t selector, void* arguments) override;
    107:    virtual void Patch(sel_t selector, void* arguments) override;
    141:    virtual void Patch(sel_t selector, void* arguments) override;
    166:    virtual void ClaimBlocks() override;
    170:    virtual void Display(std::ostream& stream,
    175:    virtual void Patch(sel_t selector, void* arguments) override;
    208:    virtual void DisplayStats(std::ostream& stream) const override;
    212:    virtual void ClaimBlocks() override;
    216:    virtual void Startup(RestartLevel level) override;
    220:    virtual void Shutdown(RestartLevel level) override;
    224:    virtual void Patch(sel_t selector, void* arguments) override;
    253:    virtual void Patch(sel_t selector, void* arguments) override;
    278:    virtual void Patch(sel_t selector, void* arguments) override;
    305:    virtual void ClaimBlocks() override;
    309:    virtual void Patch(sel_t selector, void* arguments) override;
  W110 Override of Base.Display not found
    194: class TimerPool : public ObjectPool
C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.cpp
  W005 Functional cast
    143:          stream << strClass(reg->GetService(ServiceId(cid_)), false);
    148:          stream << strClass(reg->GetFactory(FactoryId(cid_)), false);
    462:    width -= col_t(label.size());
  W007 Cast down the inheritance hierarchy
    355:          bt = static_cast< BuffTrace* >(rec);
    857:       curr_ = static_cast< const AnalyzeSapEvent& >(sxp).CurrEvent()->Eid();
    860:       curr_ = static_cast< const AnalyzeSnpEvent& >(sxp).CurrEvent()->Eid();
    887:    mod_((static_cast< const InitiationReqEvent& >(sip)).GetModifier())
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbTrace.h
  W020 Using statement in header
    37: using namespace NodeBase;
  W042 Member could be private
    535:    const StateId stid_;
  W050 Data is not private
    492:    ServiceId owner_;
    496:    const EventId eid_;
    531:    const ServiceId sid_;
    535:    const StateId stid_;
    539:    const EventHandler::Rc rc_;
  W060 Base class constructor is public
    468:    EventTrace(Id rid, const Event& evt);
    513:    HandlerTrace(ServiceId sid, const State& state, const Event& evt,
  W078 Remove virtual tag: function is an override or final
    93:    virtual bool Display(std::ostream& stream, bool diff) override;
    97:    virtual const char* EventString() const override;
    182:    virtual bool Display(std::ostream& stream, bool diff) override;
    191:    virtual void ClaimBlocks() override;
    195:    virtual const char* EventString() const override;
    199:    virtual void Shutdown(RestartLevel level) override;
    232:    virtual bool Display(std::ostream& stream, bool diff) override;
    270:    virtual bool Display(std::ostream& stream, bool diff) override;
    274:    virtual const char* EventString() const override;
    299:    virtual bool Display(std::ostream& stream, bool diff) override;
    303:    virtual const char* EventString() const override;
    332:    virtual bool Display(std::ostream& stream, bool diff) override;
    336:    virtual const char* EventString() const override;
    378:    virtual bool Display(std::ostream& stream, bool diff) override;
    382:    virtual const char* EventString() const override;
    431:    virtual bool Display(std::ostream& stream, bool diff) override;
    435:    virtual const char* EventString() const override;
    476:    virtual bool Display(std::ostream& stream, bool diff) override;
    488:    virtual const char* EventString() const override;
    518:    virtual bool Display(std::ostream& stream, bool diff) override;
    556:    virtual bool Display(std::ostream& stream, bool diff) override;
    577:    virtual bool Display(std::ostream& stream, bool diff) override;
  W082 Adjacent arguments have the same type
    169:    static BuffTrace* NextIcMsg
    484:    static void DisplayEvent(std::ostream& stream, ServiceId sid, EventId eid);
  W092 Function could be free
    243:    static std::string OutputId(const std::string& label, id_t id);
    484:    static void DisplayEvent(std::ostream& stream, ServiceId sid, EventId eid);
C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    55:    virtual const char* Name() const override { return TransTraceToolName; }
    56:    virtual const char* Expl() const override { return TransTraceToolExpl; }
    69:    virtual const char* Name() const override { return BufferTraceToolName; }
    70:    virtual const char* Expl() const override { return BufferTraceToolExpl; }
    83:    virtual const char* Name() const override { return ContextTraceToolName; }
    84:    virtual const char* Expl() const override { return ContextTraceToolExpl; }
C:/Users/gregu/Documents/rsc/rsc/sb/SbTracer.h
  W020 Using statement in header
    36: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    161:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    129:    TraceRc SelectSignal(ProtocolId prid, SignalId sid, TraceStatus status);
    181:       SignalFilter(ProtocolId p, SignalId s, TraceStatus ts);
  W110 Override of Base.Display not found
    115: class SbTracer : public Permanent
  W114 Function could be tagged noexcept
    180:       SignalFilter();
    181:       SignalFilter(ProtocolId p, SignalId s, TraceStatus ts);
C:/Users/gregu/Documents/rsc/rsc/sb/SbTypes.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SbTypes.h
  W020 Using statement in header
    30: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/sb/Service.cpp
  W006 reinterpret_cast
    283:    auto fake = reinterpret_cast< const Service* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    371: Trigger* Service::GetTrigger(TriggerId tid) const
C:/Users/gregu/Documents/rsc/rsc/sb/Service.h
  W005 Functional cast
    59:    Id Sid() const { return Id(sid_.GetId()); }
  W020 Using statement in header
    35: using namespace NodeBase;
  W032 Unused function
    125:    bool Disable();
    129:    bool Enable();
  W042 Member could be private
    73:    static bool IsValidPortId(PortId pid)
    115:    bool IsModifiable() const { return modifiable_; }
    119:    bool IsModifier() const { return modifier_; }
  W043 Member could be protected
    63:    typedef ServicePortId PortId;
    81:    virtual const char* PortName(PortId pid) const;
  W065 Base class virtual destructor is not public
    179:    virtual ~Service();
  W075 Virtual function is public
    81:    virtual const char* PortName(PortId pid) const;
    111:    virtual ServiceSM* AllocModifier() const;
  W078 Remove virtual tag: function is an override or final
    162:    virtual void Display(std::ostream& stream,
    167:    virtual void Patch(sel_t selector, void* arguments) override;
  W082 Adjacent arguments have the same type
    174:    explicit Service(Id sid, bool modifiable = false, bool modifier = false);
  W092 Function could be free
    73:    static bool IsValidPortId(PortId pid)
C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    79: Service* ServiceRegistry::GetService(ServiceId sid) const
C:/Users/gregu/Documents/rsc/rsc/sb/ServiceRegistry.h
  W020 Using statement in header
    30: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    49:    virtual void Display(std::ostream& stream,
    54:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.cpp
  W004 C-style cast
    773:             else if(((AnalyzeSapEvent*) nextEvent)->CurrInitiator() != nullptr)
    775:             else if(((AnalyzeSapEvent*) nextEvent)->CurrSsm() != nullptr)
  W007 Cast down the inheritance hierarchy
    457:             tid = static_cast< AnalyzeSapEvent* >(sapEvent)->GetTrigger();
    461:          modifierSsm = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrSsm();
    462:          currEvent = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrEvent();
    513:             tid = static_cast< AnalyzeSapEvent* >(sapEvent)->GetTrigger();
    519:          currEvent = static_cast< AnalyzeSapEvent* >(sapEvent)->CurrEvent();
    521:             (sapEvent)->CurrInitiator();
    773:             else if(((AnalyzeSapEvent*) nextEvent)->CurrInitiator() != nullptr)
    775:             else if(((AnalyzeSapEvent*) nextEvent)->CurrSsm() != nullptr)
    879:          initEvent = static_cast< InitiationReqEvent* >(nextEvent);
    883:             initEvent->SetSapEvent(static_cast< AnalyzeSapEvent& >(sapEvent));
    946:                (initEvent)->GetModifier();
    986:    auto& initEvent = static_cast< InitiationReqEvent& >(currEvent);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    312: Service* ServiceSM::GetService() const
C:/Users/gregu/Documents/rsc/rsc/sb/ServiceSM.h
  W020 Using statement in header
    38: using namespace NodeBase;
  W026 Unused argument
    81/2:    virtual EventHandler::Rc ProcessSnp(Event& currEvent, Event*& nextEvent);
    189/1:       (Event& currEvent, Event*& nextEvent);
    189/2:       (Event& currEvent, Event*& nextEvent);
  W032 Unused function
    134:    bool HasTriggered(TriggerId tid) const;
  W042 Member could be private
    97:    StateId NextState() const { return nextState_; }
  W065 Base class virtual destructor is not public
    169:    virtual ~ServiceSM();
  W075 Virtual function is public
    69:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) = 0;
    75:    virtual EventHandler::Rc ProcessSap(Event& currEvent, Event*& nextEvent);
    81:    virtual EventHandler::Rc ProcessSnp(Event& currEvent, Event*& nextEvent);
    102:    virtual void SetNextState(StateId stid);
    109:    virtual void PsmDeleted(ProtocolSM& exPsm);
    123:    virtual void SetNextSap(TriggerId sap);
    129:    virtual void SetNextSnp(TriggerId snp);
    141:    virtual void MorphToService(ServiceId sid);
  W077 Virtual function has no overrides
    141:    virtual void MorphToService(ServiceId sid);
  W078 Remove virtual tag: function is an override or final
    145:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    149:    virtual void Display(std::ostream& stream,
    154:    virtual void Patch(sel_t selector, void* arguments) override;
  W090 Function could be const
    188:    virtual EventHandler::Rc ProcessInitNack
    237:    EventHandler::Rc ProcessSsmqSap
    248:    void ProcessSsmqSnp(ServiceSM* modifier, Event& snpEvent);
C:/Users/gregu/Documents/rsc/rsc/sb/Signal.cpp
  W006 reinterpret_cast
    77:    auto fake = reinterpret_cast< const Signal* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/Signal.h
  W005 Functional cast
    75:    Id Sid() const { return Id(sid_.GetId()); }
  W020 Using statement in header
    36: using namespace NodeBase;
  W032 Unused function
    79:    ProtocolId Prid() const { return prid_; }
  W053 Data could be const
    118:    ProtocolId prid_;
  W065 Base class virtual destructor is not public
    109:    virtual ~Signal();
  W075 Virtual function is public
    86:    virtual CliText* CreateText() const;
  W078 Remove virtual tag: function is an override or final
    94:    virtual void Display(std::ostream& stream,
    99:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    60:    static bool IsValidId(Id sid)
C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.cpp
  W007 Cast down the inheritance hierarchy
    97:    return static_cast< SsmFactory* >(fac)->AllocRoot(msg, psm);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SsmContext.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    44:    virtual RootServiceSM* RootSsm() const override { return root_; }
    48:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    52:    virtual void Display(std::ostream& stream,
    57:    virtual void Patch(sel_t selector, void* arguments) override;
    61:    virtual ContextType Type() const override { return MultiPort; }
    65:    virtual void EndOfTransaction() override;
    77:    virtual void ProcessIcMsg(Message& msg) override;
    81:    virtual bool IsIdle() const override;
  W092 Function could be free
    86:    static RootServiceSM* AllocRoot(const Message& msg, ProtocolSM& psm);
C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/SsmFactory.h
  W026 Unused argument
    47/1:    virtual ProtocolSM* AllocOgPsm(const Message& msg) const;
  W075 Virtual function is public
    41:    virtual RootServiceSM* AllocRoot(const Message& msg, ProtocolSM& psm) const;
    47:    virtual ProtocolSM* AllocOgPsm(const Message& msg) const;
  W078 Remove virtual tag: function is an override or final
    51:    virtual void Patch(sel_t selector, void* arguments) override;
    63:    virtual Context* AllocContext() const override;
    68:    virtual Rc ReceiveMsg
  W082 Adjacent arguments have the same type
    55:    SsmFactory(Id fid, ProtocolId prid, const char* name);
C:/Users/gregu/Documents/rsc/rsc/sb/State.cpp
  W006 reinterpret_cast
    190:    auto fake = reinterpret_cast< const State* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    125: bool State::BindEventHandler(EventHandlerId ehid, EventId eid)
    157: bool State::BindMsgAnalyzer(EventHandlerId ehid, ServicePortId pid)
    237: EventHandlerId State::GetHandler(EventId eid) const
    245: EventHandlerId State::MsgAnalyzer(ServicePortId pid) const
C:/Users/gregu/Documents/rsc/rsc/sb/State.h
  W005 Functional cast
    54:    Id Stid() const { return Id(stid_.GetId()); }
  W020 Using statement in header
    31: using namespace NodeBase;
  W032 Unused function
    58:    ServiceId Sid() const { return sid_; }
  W053 Data could be const
    117:    ServiceId sid_;
  W065 Base class virtual destructor is not public
    91:    virtual ~State();
  W078 Remove virtual tag: function is an override or final
    74:    virtual void Display(std::ostream& stream,
    79:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/TextTlvMessage.h
  W020 Using statement in header
    29: using namespace NodeBase;
  W027 Unused class
    39: class TextTlvMessage : public TlvMessage
  W032 Unused function
    60:    explicit TextTlvMessage(SbIpBufferPtr& text);
    64:    TextTlvMessage(ProtocolSM* psm, size_t size);
    70:    bool Receive();
  W077 Virtual function has no overrides
    79:    virtual SbIpBufferPtr Parse() = 0;
    86:    virtual SbIpBufferPtr Build() = 0;
  W078 Remove virtual tag: function is an override or final
    48:    virtual void Display(std::ostream& stream,
    53:    virtual void Patch(sel_t selector, void* arguments) override;
    74:    virtual bool Send(Route route) override;
  W090 Function could be const
    79:    virtual SbIpBufferPtr Parse() = 0;
    86:    virtual SbIpBufferPtr Build() = 0;
C:/Users/gregu/Documents/rsc/rsc/sb/Timer.cpp
  W006 reinterpret_cast
    191:    auto fake = reinterpret_cast< const Timer* >(&local);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/Timer.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W037 Member hides inherited name
    54:    static ptrdiff_t LinkDiff();
  W042 Member could be private
    54:    static ptrdiff_t LinkDiff();
  W053 Data could be const
    135:    TimerId tid_;
    147:    Q2Link link_;
  W078 Remove virtual tag: function is an override or final
    58:    virtual void Display(std::ostream& stream,
    63:    virtual void Patch(sel_t selector, void* arguments) override;
    104:    virtual void Cleanup() override;
C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.cpp
  W006 reinterpret_cast
    119:    auto toi = reinterpret_cast< const TimeoutInfo* >(bytes);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/TimerProtocol.h
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    94:    virtual void DisplayMsg(std::ostream& stream, const std::string& prefix,
  W111 Override of Object.Patch not found
    88: class TimeoutParameter : public TlvParameter
C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.cpp
  W006 reinterpret_cast
    142:          auto psm = reinterpret_cast< const Base* >(t->Psm());
    154:          auto psm = reinterpret_cast< const Base* >(t->Psm());
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/TimerRegistry.h
  W020 Using statement in header
    31: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void ClaimBlocks() override;
    54:    virtual void Display(std::ostream& stream,
    59:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.cpp
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    60: TraceStatus TimerThread::CalcStatus(bool dynamic) const
C:/Users/gregu/Documents/rsc/rsc/sb/TimerThread.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    43:    virtual void Patch(sel_t selector, void* arguments) override;
    51:    virtual const char* AbbrName() const override;
    59:    virtual TraceStatus CalcStatus(bool dynamic) const override;
    64:    virtual void Enter() override;
    68:    virtual void Destroy() override;
C:/Users/gregu/Documents/rsc/rsc/sb/TlvIntParameter.h
  W020 Using statement in header
    36: using namespace NodeBase;
  W078 Remove virtual tag: function is an override or final
    62:    virtual TestRc InjectMsg
    96:    virtual TestRc VerifyMsg
  W112 Function could be defaulted
    58:    virtual ~TlvIntParameter() { }
C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.cpp
  W004 C-style cast
    177:    auto pptr = (TlvParmPtr) (layout->bytes + layout->header.length);
    286:    return (Fence*) fence;
    444:    pit.pptr = (TlvParmPtr) &pit.mptr->bytes[nextIndex];
  W006 reinterpret_cast
    67:    auto encap = reinterpret_cast< const TlvMsgLayout* >(parm.bytes);
    512:    auto encap = reinterpret_cast< TlvMsgLayout* >(pptr->bytes);
  W009 Pointer arithmetic
    177:    auto pptr = (TlvParmPtr) (layout->bytes + layout->header.length);
    285:    auto fence = layout->bytes + layout->header.length;
  W017 Add #include directive
    1: "Debug.h"
  W022 Add using statement
    1: namespace NodeBase
  W056 Default constructor invoked: POD members not initialized
    194:    ParmIterator pit;
    317:    ParmIterator pit;
    337:    ParmIterator pit;
    398:    ParmIterator locpit;
C:/Users/gregu/Documents/rsc/rsc/sb/TlvMessage.h
  W006 reinterpret_cast
    265:       { return reinterpret_cast< TlvMsgLayout* >(Buffer()->HeaderPtr()); }
  W018 Remove #include directive
    28: #include "Debug.h"
  W022 Add using statement
    1: namespace NodeBase
  W032 Unused function
    61:    TlvMessage(const TlvParmLayout& parm, ProtocolSM* psm);
    66:    TlvMessage(const Message& msg, ProtocolSM* psm);
    75:    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
    166:    size_t AllParms(TlvParmArray ptab, size_t size) const;
    172:    size_t FindParms(ParameterId pid, TlvParmArray ptab, size_t size) const;
    186:    TlvParmPtr AddBytes(const byte_t* src, size_t size, ParameterId pid);
    192:    TlvParmPtr CopyParm(const TlvParmLayout& src, ParameterId pid = NIL_ID);
    196:    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
    248:    byte_t* FindBytes(size_t& size, ParameterId pid) const;
    255:    virtual bool MatchParm(TlvParmPtr pptr, ParmIterator& pit, bool& last) const;
    270:    size_t ParmOffset(ParmIterator& pit) const;
  W042 Member could be private
    155:    TlvParmPtr FirstParm(ParmIterator& pit) const;
    160:    TlvParmPtr NextParm(ParmIterator& pit) const;
    181:    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
    242:    typedef uint16_t Fence;
    260:    virtual void AddFence();
    264:    TlvMsgLayout* TlvLayout() const
    275:    Fence* FencePtr() const;
    279:    void CheckFence() const;
  W056 Default constructor invoked: POD members not initialized
    310:    struct ParmIterator
  W060 Base class constructor is public
    49:    explicit TlvMessage(SbIpBufferPtr& buff);
    53:    TlvMessage(ProtocolSM* psm, size_t size);
    61:    TlvMessage(const TlvParmLayout& parm, ProtocolSM* psm);
    66:    TlvMessage(const Message& msg, ProtocolSM* psm);
  W075 Virtual function is public
    75:    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
    181:    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
    196:    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
    200:    virtual void DeleteParm(TlvParmLayout& parm);
  W077 Virtual function has no overrides
    75:    virtual TlvParmPtr Wrap(const TlvMessage& msg, ParameterId pid);
    181:    virtual TlvParmPtr AddParm(ParameterId pid, size_t plen);
    196:    virtual TlvParmPtr ExpandParm(TlvParmLayout& parm, size_t plen);
    200:    virtual void DeleteParm(TlvParmLayout& parm);
    255:    virtual bool MatchParm(TlvParmPtr pptr, ParmIterator& pit, bool& last) const;
    260:    virtual void AddFence();
  W078 Remove virtual tag: function is an override or final
    204:    virtual InspectRc InspectMsg(debug32_t& errval) const override;
    208:    virtual bool Send(Message::Route route) override;
    212:    virtual void Patch(sel_t selector, void* arguments) override;
    295:    virtual void ChangeDir(MsgDirection nextDir) override;
  W082 Adjacent arguments have the same type
    112:    template< typename T > T* CopyType
  W088 Argument could be const
    200/1:    virtual void DeleteParm(TlvParmLayout& parm);
  W092 Function could be free
    222:    static size_t Pad(size_t size)
    299:    inline static fn_name TlvMessage_FindType()
    301:    inline static fn_name TlvMessage_AddType()
    303:    inline static fn_name TlvMessage_CopyType()
    305:    inline static fn_name TlvMessage_VerifyParm()
C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.cpp
  W007 Cast down the inheritance hierarchy
    73:    auto& tmsg = static_cast< const TlvMessage& >(msg);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/TlvParameter.h
  W020 Using statement in header
    32: using namespace NodeBase;
  W032 Unused function
    73:    static Id ExtractPid(const TlvParmLayout& parm);
  W044 Typedef of pointer type
    60: typedef TlvParmLayout* TlvParmPtr;  // pointer to a parameter
    61: typedef TlvParmPtr* TlvParmArray;   // array of pointers to parameters
  W078 Remove virtual tag: function is an override or final
    77:    virtual void Patch(sel_t selector, void* arguments) override;
    94:    virtual TestRc VerifyMsg
  W092 Function could be free
    73:    static Id ExtractPid(const TlvParmLayout& parm);
C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.cpp
  W006 reinterpret_cast
    69:       auto pptr = reinterpret_cast< TlvParmPtr >(&bytes[index]);
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/TlvProtocol.h
  W032 Unused function
    39:    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const override;
  W078 Remove virtual tag: function is an override or final
    39:    virtual SignalId ExtractSignal(const SbIpBuffer& buff) const override;
    43:    virtual void DisplayMsg(std::ostream& stream,
    48:    virtual void Patch(sel_t selector, void* arguments) override;
C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sb/Trigger.h
  W020 Using statement in header
    36: using namespace NodeBase;
  W042 Member could be private
    74:    static bool IsValidId(Id tid)
  W053 Data could be const
    118:    Id tid_;
  W065 Base class virtual destructor is not public
    99:    virtual ~Trigger();
  W078 Remove virtual tag: function is an override or final
    85:    virtual void Display(std::ostream& stream,
    90:    virtual void Patch(sel_t selector, void* arguments) override;
  W092 Function could be free
    74:    static bool IsValidId(Id tid)
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.cpp
  W007 Cast down the inheritance hierarchy
    61:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    64:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    101:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    117:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    119:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    139:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    154:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    155:    auto& ode = static_cast< BcOriginationDeniedEvent& >(currEvent);
    170:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    172:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    178:          auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
    199:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    226:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    256:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    273:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    297:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    312:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    326:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    341:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    356:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    358:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    377:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    398:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    413:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    429:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    446:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    447:    auto& rre = static_cast< BcRemoteReleaseEvent& >(currEvent);
    464:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    478:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    480:    auto cmsg = static_cast< CipMessage* >(npsm->FirstRcvdMsg());
    510:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    525:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    526:    auto& tde = static_cast< BcTerminationDeniedEvent& >(currEvent);
    541:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    542:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    563:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    582:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    597:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    599:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    624:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    653:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    668:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    684:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    700:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    702:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    723:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    738:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    754:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    756:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    773:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    799:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    818:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    833:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    852:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    867:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    883:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    885:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    894:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    921:    auto& ate = static_cast< BcApplyTreatmentEvent& >(currEvent);
    922:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    960:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    976:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    992:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    993:    auto& lre = static_cast< BcLocalReleaseEvent& >(currEvent);
    1008:    auto& cte = static_cast< BcReleaseCallEvent& >(currEvent);
    1009:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    1043:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    1064:    auto& rue = static_cast< ProxyBcReleaseUserEvent& >(currEvent);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcHandlers.h
  W020 Using statement in header
    28: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual Rc ProcessEvent
    48:    virtual Rc ProcessEvent
    60:    virtual Rc ProcessEvent
    70:    virtual Rc ProcessEvent
    80:    virtual Rc ProcessEvent
    92:    virtual Rc ProcessEvent
    102:    virtual Rc ProcessEvent
    112:    virtual Rc ProcessEvent
    122:    virtual Rc ProcessEvent
    134:    virtual Rc ProcessEvent
    144:    virtual Rc ProcessEvent
    156:    virtual Rc ProcessEvent
    168:    virtual Rc ProcessEvent
    180:    virtual Rc ProcessEvent
    190:    virtual Rc ProcessEvent
    200:    virtual Rc ProcessEvent
    210:    virtual Rc ProcessEvent
    220:    virtual Rc ProcessEvent
    230:    virtual Rc ProcessEvent
    242:    virtual Rc ProcessEvent
    254:    virtual Rc ProcessEvent
    266:    virtual Rc ProcessEvent
    276:    virtual Rc ProcessEvent
    288:    virtual Rc ProcessEvent
    298:    virtual Rc ProcessEvent
    308:    virtual Rc ProcessEvent
    320:    virtual Rc ProcessEvent
    330:    virtual Rc ProcessEvent
    340:    virtual Rc ProcessEvent
    350:    virtual Rc ProcessEvent
    360:    virtual Rc ProcessEvent
    372:    virtual Rc ProcessEvent
    382:    virtual Rc ProcessEvent
    392:    virtual Rc ProcessEvent
    404:    virtual Rc ProcessEvent
    414:    virtual Rc ProcessEvent
    424:    virtual Rc ProcessEvent
    436:    virtual Rc ProcessEvent
    446:    virtual Rc ProcessEvent
    458:    virtual Rc ProcessEvent
    470:    virtual Rc ProcessEvent
    480:    virtual Rc ProcessEvent
    492:    virtual Rc ProcessEvent
    502:    virtual Rc ProcessEvent
    512:    virtual Rc ProcessEvent
    522:    virtual Rc ProcessEvent
    532:    virtual Rc ProcessEvent
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcService.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcSsm.cpp
  W007 Cast down the inheritance hierarchy
    73:          auto& ppsm = static_cast< PotsCallPsm& >(psm);
    78:          auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(port));
    86:       SetNPsm(static_cast< CipPsm& >(psm));
    90:       SetUPsm(static_cast< MediaPsm& >(psm));
    130:    auto pmsg = static_cast< PotsMessage* >(ame.Msg());
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    384: PotsProfile* PotsBcSsm::Profile() const
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBcStates.cpp
  W022 Add using statement
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.cpp
  W007 Cast down the inheritance hierarchy
    84:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    57:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    58:    virtual EventHandler::Rc ProcessInitAck
    60:    virtual EventHandler::Rc ProcessInitNack
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBicService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    50:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.cpp
  W007 Cast down the inheritance hierarchy
    84:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    57:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    58:    virtual EventHandler::Rc ProcessInitAck
    60:    virtual EventHandler::Rc ProcessInitNack
C:/Users/gregu/Documents/rsc/rsc/sn/PotsBocService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    50:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallFactory.cpp
  W007 Cast down the inheritance hierarchy
    112:    auto& pmsg = static_cast< const Pots_UN_Message& >(msg);
    193:       auto pmsg = static_cast< const PotsMessage* >(msg);
    195:       cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
    199:       auto ppsm = static_cast < const PotsCallPsm* >(port.Upper());
    200:       cct = static_cast< PotsCircuit* >(tsw->GetCircuit(ppsm->TsPort()));
    263:    auto& icmsg = static_cast< const PotsMessage& >(msg1);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallHandler.cpp
  W006 reinterpret_cast
    96:    auto pptr = reinterpret_cast< TlvParmPtr >(sbuff->PayloadPtr());
    97:    auto phi = reinterpret_cast< PotsHeaderInfo* >(pptr->bytes);
  W007 Cast down the inheritance hierarchy
    94:    auto sbuff = static_cast< SbIpBuffer* >(buff.get());
    115:    auto prof = static_cast< PotsCircuit* >(cct)->Profile();
  W022 Add using statement
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallIpService.cpp
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCallPsm.cpp
  W007 Cast down the inheritance hierarchy
    105:       return static_cast< PotsCallPsm* >(psm);
    177:    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
    212:    auto& pmsg = static_cast< Pots_NU_Message& >(msg);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.cpp
  W007 Cast down the inheritance hierarchy
    206:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    266:       auto& ire = static_cast< InitiationReqEvent& >(currEvent);
    289:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    305:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    78:    virtual Rc ProcessEvent
    89:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    90:    virtual EventHandler::Rc ProcessInitAck
    92:    virtual EventHandler::Rc ProcessInitNack
    94:    virtual EventHandler::Rc ProcessSip
    96:    virtual EventHandler::Rc ProcessSnp
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCcwService.h
  W020 Using statement in header
    28: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.cpp
  W007 Cast down the inheritance hierarchy
    58:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    60:    auto cfbp = static_cast< PotsCfbFeatureProfile* >(prof->FindFeature(CFB));
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfbService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    52:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.cpp
  W007 Cast down the inheritance hierarchy
    58:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    60:    auto cfnp = static_cast< PotsCfnFeatureProfile* >(prof->FindFeature(CFN));
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfnService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    52:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.cpp
  W007 Cast down the inheritance hierarchy
    58:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    60:    auto cfup = static_cast< PotsCfuFeatureProfile* >(prof->FindFeature(CFU));
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfuService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    52:    virtual ServiceSM* AllocModifier() const override;
    63:    virtual ServiceSM* AllocModifier() const override;
    74:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.cpp
  W007 Cast down the inheritance hierarchy
    293:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    298:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    300:       auto& cssm = static_cast< PotsCfxSsm& >(ssm);
    321:    auto& cssm = static_cast< PotsCfxSsm& >(ssm);
    322:    auto& pssm = static_cast< PotsBcSsm& >(*cssm.Parent());
    374:       auto pssm = static_cast< PotsBcSsm* >(Parent());
    401:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    483:    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
    485:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    498:          cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
    520:          cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
    534:       cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFU));
    540:       cfxp = static_cast< DnRouteFeatureProfile* >(prof->FindFeature(CFB));
    546:       cfnp = static_cast< PotsCfnFeatureProfile* >(prof->FindFeature(CFN));
    580:    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
    583:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    638:       auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    645:    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
    660:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    668:       auto& snp = static_cast< AnalyzeSnpEvent& >(currEvent);
    686:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    120:    virtual Rc ProcessEvent
    129:    virtual Rc ProcessEvent
    138:    virtual Rc ProcessEvent
  W112 Function could be defaulted
    111:    PotsCfxEventHandler();
    112:    virtual ~PotsCfxEventHandler();
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCfxService.h
  W020 Using statement in header
    42: using namespace SessionBase;
    43: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
  W026 Unused argument
    60/1:    explicit PotsCfxSsm(ServiceId sid);
  W078 Remove virtual tag: function is an override or final
    62:    virtual void Display(std::ostream& stream,
    66:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    67:    virtual EventHandler::Rc ProcessSap
    69:    virtual EventHandler::Rc ProcessSnp
    77:    virtual EventHandler::Rc ProcessInitAck
    79:    virtual EventHandler::Rc ProcessInitNack
    81:    virtual EventHandler::Rc ProcessSip
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwmService.cpp
  W006 reinterpret_cast
    1464:          auto ring = reinterpret_cast< PotsRingInfo* >(pptr->bytes);
  W007 Cast down the inheritance hierarchy
    447:    PotsMuxSsm* Mux() const { return static_cast< PotsMuxSsm* >(Parent()); }
    1165:    auto hldNPsm = static_cast< PotsMuxPsm* >(Context::ContextPsm());
    1202:          auto bcUPsm = static_cast< PotsCallPsm* >(psm);
    1272:    auto msg = static_cast< PotsMessage* >(Context::ContextMsg());
    1299:    auto npsm = static_cast< PotsMuxPsm* >(Context::ContextPsm());
    1313:    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
    1379:    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
    1423:    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
    1972:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    1973:    auto pmsg = static_cast< Pots_NU_Message* >(ame.Msg());
    2002:    auto& mux = static_cast< PotsCwmSsm& >(ssm);
    2017:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    2019:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2026:          auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    2123:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2125:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    2126:    auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
    2127:    auto npsm = static_cast< PotsMuxPsm* >(pmsg->Psm());
    2222:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2236:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2250:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2264:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2280:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2295:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2309:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2324:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2339:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2340:    auto& are = static_cast< PotsCwmActiveReleaseEvent& >(currEvent);
    2355:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2356:    auto& ire = static_cast< PotsCwmInactiveReleaseEvent& >(currEvent);
    2370:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
    2392:    auto& cwt = static_cast< PotsCwmSsm& >(ssm);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W026 Unused argument
    434/2:    EventHandler::Rc ReleaseInactive(Cause::Ind cause, Event*& nextEvent);
  W053 Data could be const
    185:    Cause::Ind cause_;
  W078 Remove virtual tag: function is an override or final
    179:    virtual void Display(ostream& stream,
    245:    virtual Rc ProcessEvent
    254:    virtual Rc ProcessEvent
    263:    virtual Rc ProcessEvent
    272:    virtual Rc ProcessEvent
    281:    virtual Rc ProcessEvent
    290:    virtual Rc ProcessEvent
    299:    virtual Rc ProcessEvent
    308:    virtual Rc ProcessEvent
    317:    virtual Rc ProcessEvent
    326:    virtual Rc ProcessEvent
    335:    virtual Rc ProcessEvent
    344:    virtual Rc ProcessEvent
    353:    virtual Rc ProcessEvent
    362:    virtual Rc ProcessEvent
    371:    virtual Rc ProcessEvent
    380:    virtual Rc ProcessEvent
    443:    virtual void SetNextState(StateId stid) override;
    444:    virtual void Display(ostream& stream,
    457:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    458:    virtual EventHandler::Rc ProcessInitAck
    460:    virtual EventHandler::Rc ProcessInitNack
    462:    virtual EventHandler::Rc ProcessSip
  W092 Function could be free
    454:    static EventHandler::Rc SendFacilityNack(PotsMuxPsm* npsm, ServiceId sid);
  W112 Function could be defaulted
    236:    PotsCwmEventHandler();
    237:    virtual ~PotsCwmEventHandler();
  W117 Line can merge with the next line and be under the length limit
    605:    BindEventHandler
    621:    BindEventHandler
    625:    BindEventHandler
    627:    BindEventHandler
    629:    BindEventHandler
    633:    BindEventHandler
    641:    BindEventHandler
    643:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.cpp
  W007 Cast down the inheritance hierarchy
    290:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    617:    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
    622:       auto pssm = static_cast< PotsBcSsm* >(Parent());
    623:       auto ate = static_cast< BcApplyTreatmentEvent* >(sap.CurrEvent());
    640:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    648:       auto& snp = static_cast< AnalyzeSnpEvent& >(currEvent);
    686:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    716:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    811:    auto& init = static_cast< InitiationReqEvent& >(currEvent);
    813:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    908:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    930:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    961:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    963:    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
    969:          auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
    992:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    1017:    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
    1018:    auto& pssm = static_cast< PotsBcSsm& >(*ssm.Parent());
    1038:    auto& relevt = static_cast< PotsCwtReleaseEvent& >(currEvent);
    1039:    auto& cwtssm = static_cast< PotsCwbSsm& >(ssm);
    1043:       auto pssm = static_cast< PotsBcSsm* >(cwtssm.Parent());
    1062:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    1064:    auto& cwtssm = static_cast< PotsCwtSsm& >(ssm);
    1068:       auto pmsg = static_cast< Pots_UN_Message* >(ame.Msg());
    1108:    auto& cwtssm = static_cast< PotsCwtSsm& >(ssm);
    1109:    auto& relevt = static_cast< PotsCwtReleaseEvent& >(currEvent);
    1111:    auto pssm = static_cast< PotsBcSsm* >(cwtssm.Parent());
    1157:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
  W042 Member could be private
    252:    void StartTimer(TimerId tid, secs_t duration);
  W053 Data could be const
    147:    Facility::Ind ind_;
  W075 Virtual function is public
    257:    virtual void Cancel() override;
  W078 Remove virtual tag: function is an override or final
    144:    virtual void Display(ostream& stream,
    168:    virtual Rc ProcessEvent
    177:    virtual Rc ProcessEvent
    186:    virtual Rc ProcessEvent
    195:    virtual Rc ProcessEvent
    204:    virtual Rc ProcessEvent
    213:    virtual Rc ProcessEvent
    224:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    225:    virtual EventHandler::Rc ProcessSap
    227:    virtual EventHandler::Rc ProcessSnp
    237:    virtual EventHandler::Rc ProcessInitAck
    239:    virtual EventHandler::Rc ProcessInitNack
    257:    virtual void Cancel() override;
    258:    virtual void Display(ostream& stream,
    261:    virtual EventHandler::Rc ProcessInitAck
    263:    virtual EventHandler::Rc ProcessInitNack
  W112 Function could be defaulted
    159:    PotsCwtEventHandler();
    160:    virtual ~PotsCwtEventHandler();
  W117 Line can merge with the next line and be under the length limit
    442:    BindEventHandler
    483:    BindEventHandler
    485:    BindEventHandler
    499:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/sn/PotsCwtService.h
  W020 Using statement in header
    30: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    41:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    58:    virtual ServiceSM* AllocModifier() const override;
    67:    virtual ServiceSM* AllocModifier() const override;
    76:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsDiscService.cpp
  W007 Cast down the inheritance hierarchy
    131:    auto& pssm = static_cast< BcSsm& >(*Parent());
    133:    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    48:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    49:    virtual EventHandler::Rc ProcessInitAck
C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.cpp
  W007 Cast down the inheritance hierarchy
    85:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    175:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    181:       auto htlp = static_cast< PotsHtlFeatureProfile* >(prof->FindFeature(HTL));
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    58:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    59:    virtual EventHandler::Rc ProcessInitAck
    61:    virtual EventHandler::Rc ProcessInitNack
C:/Users/gregu/Documents/rsc/rsc/sn/PotsHtlService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    50:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.cpp
  W007 Cast down the inheritance hierarchy
    195:    auto& pmsg = static_cast< const PotsMessage& >(msg);
    246:    auto& pmsg = static_cast< const PotsMessage& >(msg);
    249:    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(phi->port));
    361:    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
    414:    auto& pmsg = static_cast< Pots_UN_Message& >(msg);
    747:    auto& npsm = static_cast< PotsMuxPsm& >(psm);
    750:    auto cct = static_cast< PotsCircuit* >(tsw->GetCircuit(port));
    823:    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
    891:    auto pmsg = static_cast< PotsMessage* >(Context::ContextMsg());
    998:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    999:    auto pmsg = static_cast< Pots_NU_Message* >(ame.Msg());
    1021:    auto& mux = static_cast< PotsMuxSsm& >(ssm);
    1052:    auto& mux = static_cast< PotsMuxSsm& >(ssm);
    1053:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    1076:    auto& mux = static_cast< PotsMuxSsm& >(ssm);
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    92:    virtual Rc ProcessEvent
    101:    virtual Rc ProcessEvent
    110:    virtual Rc ProcessEvent
    119:    virtual Rc ProcessEvent
    128:    virtual Rc ProcessEvent
  W112 Function could be defaulted
    83:    PotsMuxEventHandler();
    84:    virtual ~PotsMuxEventHandler();
  W117 Line can merge with the next line and be under the length limit
    658:    BindEventHandler
    674:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/sn/PotsMultiplexer.h
  W020 Using statement in header
    45: using namespace MediaBase;
    46: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W026 Unused argument
    157/1:    PotsMuxSsm(const Message& msg, ProtocolSM& psm);
  W032 Unused function
    76:    PotsMuxPsm(ProtocolLayer& adj, bool upper, Switch::PortId port);
  W042 Member could be private
    159:    void SetProfile(PotsProfile* prof) { prof_ = prof; }
  W078 Remove virtual tag: function is an override or final
    58:    virtual CliText* CreateText() const override;
    59:    virtual RootServiceSM* AllocRoot
    61:    virtual ProtocolSM* AllocIcPsm
    63:    virtual SsmContext* FindContext(const Message& msg) const override;
    64:    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
    65:    virtual Message* AllocOgMsg(SignalId sid) const override;
    66:    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
    85:    virtual void Display(std::ostream& stream,
    88:    virtual Message::Route Route() const override;
    89:    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
    90:    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
    91:    virtual void SendFinalMsg() override;
    92:    virtual void EnsureMediaMsg() override;
    168:    virtual void Display(std::ostream& stream,
    172:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    173:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
    188:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.cpp
  W007 Cast down the inheritance hierarchy
    55:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    56:    auto msg = static_cast< CipMessage* >(ame.Msg());
    58:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    91:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    108:    auto msg = static_cast< CipMessage* >(Context::ContextMsg());
    110:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    134:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    135:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    137:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    174:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    184:    auto upsm = static_cast< ProxyBcPsm* >(pssm.UPsm());
    208:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    226:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    245:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    246:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    248:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    295:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    313:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    314:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    316:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    358:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    359:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    361:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    412:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    430:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    448:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    466:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    484:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    517:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    518:    auto upsm = static_cast< MediaPsm* >(Context::ContextPsm());
    548:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    567:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    568:    auto upsm = static_cast< MediaPsm* >(Context::ContextPsm());
    598:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
    618:    auto& cte = static_cast< BcReleaseCallEvent& >(currEvent);
    619:    auto& pssm = static_cast< PotsBcSsm& >(ssm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W099 Line contains adjacent spaces
    134:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    135:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    136:    auto          sid = msg->GetSignal();
    137:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    139:    CauseInfo*    cci;
    245:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    246:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    247:    auto          sid = msg->GetSignal();
    248:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    250:    CauseInfo*    cci;
    313:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    314:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    315:    auto          sid = msg->GetSignal();
    316:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    318:    CauseInfo*    cci;
    358:    auto&         ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    359:    auto          msg = static_cast< CipMessage* >(ame.Msg());
    360:    auto          sid = msg->GetSignal();
    361:    auto&         pssm = static_cast< PotsBcSsm& >(ssm);
    363:    CauseInfo*    cci;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxyHandlers.h
  W020 Using statement in header
    28: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    38:    virtual Rc ProcessEvent
    48:    virtual Rc ProcessEvent
    60:    virtual Rc ProcessEvent
    72:    virtual Rc ProcessEvent
    82:    virtual Rc ProcessEvent
    92:    virtual Rc ProcessEvent
    102:    virtual Rc ProcessEvent
    114:    virtual Rc ProcessEvent
    124:    virtual Rc ProcessEvent
    136:    virtual Rc ProcessEvent
    148:    virtual Rc ProcessEvent
    158:    virtual Rc ProcessEvent
    168:    virtual Rc ProcessEvent
    180:    virtual Rc ProcessEvent
    192:    virtual Rc ProcessEvent
    204:    virtual Rc ProcessEvent
    214:    virtual Rc ProcessEvent
    224:    virtual Rc ProcessEvent
    234:    virtual Rc ProcessEvent
    244:    virtual Rc ProcessEvent
    254:    virtual Rc ProcessEvent
C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.cpp
  W022 Add using statement
    1: namespace CallBase
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsProxySessions.h
  W020 Using statement in header
    28: using namespace CallBase;
  W022 Add using statement
    1: namespace NodeBase
  W112 Function could be defaulted
    59:    ~PotsProxyNull();
    67:    ~PotsProxyAuthorizingOrigination();
    75:    ~PotsProxyCollectingInformation();
    83:    ~PotsProxyAnalyzingInformation();
    91:    ~PotsProxySelectingRoute();
    99:    ~PotsProxyAuthorizingCallSetup();
    107:    ~PotsProxySendingCall();
    115:    ~PotsProxyOrigAlerting();
    123:    ~PotsProxyAuthorizingTermination();
    131:    ~PotsProxySelectingFacility();
    139:    ~PotsProxyPresentingCall();
    147:    ~PotsProxyTermAlerting();
    155:    ~PotsProxyActive();
    163:    ~PotsProxyLocalSuspending();
    171:    ~PotsProxyRemoteSuspending();
    179:    ~PotsProxyException();
C:/Users/gregu/Documents/rsc/rsc/sn/PotsSessions.h
  W005 Functional cast
    59:    virtual ipport_t Port() const override { return ipport_t(port_); }
  W020 Using statement in header
    44: using namespace CallBase;
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
  W032 Unused function
    72:    virtual CliText* CreateText() const override;
  W042 Member could be private
    417:    ProtocolSM* TimerPsm(TimerId tid) const;
  W078 Remove virtual tag: function is an override or final
    58:    virtual const char* Name() const override { return "POTS Call"; }
    59:    virtual ipport_t Port() const override { return ipport_t(port_); }
    60:    virtual Faction GetFaction() const override { return PayloadFaction; }
    72:    virtual CliText* CreateText() const override;
    76:    virtual InputHandler* CreateHandler(IpPort* port) const override;
    105:    virtual void ReceiveBuff
    137:    virtual CliText* CreateText() const override;
    142:    virtual RootServiceSM* AllocRoot
    147:    virtual ProtocolSM* AllocIcPsm
    152:    virtual Message* AllocIcMsg(SbIpBufferPtr& buff) const override;
    156:    virtual Message* AllocOgMsg(SignalId sid) const override;
    160:    virtual Message* ReallocOgMsg(SbIpBufferPtr& buff) const override;
    164:    virtual void PortAllocated
    170:    virtual bool ScreenIcMsgs(Q1Way< Message >& msgq) override;
    174:    virtual Cause::Ind VerifyRoute(RouteResult::Id rid) const override;
    446:    virtual EventHandler::Rc ClearCall(Cause::Ind cause) override;
    450:    virtual void SetNextSap(TriggerId sap) override;
    454:    virtual void SetNextSnp(TriggerId snp) override;
    458:    virtual EventHandler::Rc AnalyzeNPsmTimeout
    463:    virtual void Display(std::ostream& stream,
    472:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
  W092 Function could be free
    133:    static void SendRelease(const Message& msg1);
  W110 Override of Base.Display not found
    52: class PotsCallIpService : public UdpIpService
  W112 Function could be defaulted
    204:    ~PotsBcNull();
    212:    ~PotsBcAuthorizingOrigination();
    220:    ~PotsBcCollectingInformation();
    228:    ~PotsBcAnalyzingInformation();
    236:    ~PotsBcSelectingRoute();
    244:    ~PotsBcAuthorizingCallSetup();
    252:    ~PotsBcSendingCall();
    260:    ~PotsBcOrigAlerting();
    268:    ~PotsBcAuthorizingTermination();
    276:    ~PotsBcSelectingFacility();
    284:    ~PotsBcPresentingCall();
    292:    ~PotsBcTermAlerting();
    300:    ~PotsBcActive();
    308:    ~PotsBcLocalSuspending();
    316:    ~PotsBcRemoteSuspending();
    324:    ~PotsBcException();
    341:    ~PotsAuthorizeOriginationSap();
    354:    ~PotsCollectInformationSap();
    368:    ~PotsAuthorizeTerminationSap();
    381:    ~PotsLocalBusySap();
    391:    ~PotsLocalAlertingSnp();
C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.cpp
  W022 Add using statement
    1: namespace CallBase::Cause
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsStatistics.h
  W020 Using statement in header
    30: using namespace NodeBase;
    31: using namespace CallBase;
  W042 Member could be private
    45:    typedef uint8_t Id;
  W078 Remove virtual tag: function is an override or final
    71:    virtual void DisplayStats(std::ostream& stream, id_t id) const override;
C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.cpp
  W007 Cast down the inheritance hierarchy
    83:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    57:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    58:    virtual EventHandler::Rc ProcessInitAck
    60:    virtual EventHandler::Rc ProcessInitNack
C:/Users/gregu/Documents/rsc/rsc/sn/PotsSusService.h
  W020 Using statement in header
    30: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    42:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    64:    virtual ServiceSM* AllocModifier() const override;
  W112 Function could be defaulted
    40:    virtual ~PotsSusInitiator() { }
C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.cpp
  W022 Add using statement
    1: namespace CallBase::Cause
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    119: void PotsTreatmentRegistry::SetCauseToTreatmentQ
    201: PotsTreatmentQueue* PotsTreatmentRegistry::TreatmentQ
C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatmentRegistry.h
  W020 Using statement in header
    31: using namespace NodeBase;
    32: using namespace CallBase;
  W042 Member could be private
    57:    void SetCauseToTreatmentQ(Cause::Ind cause, PotsTreatmentQueue::QId qid);
  W078 Remove virtual tag: function is an override or final
    69:    virtual void Startup(RestartLevel level) override;
    73:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.cpp
  W006 reinterpret_cast
    85:    auto fake = reinterpret_cast< const PotsTreatmentQueue* >(&local);
    206:    auto fake = reinterpret_cast< const PotsTreatment* >(&local);
  W007 Cast down the inheritance hierarchy
    255:    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
    299:    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
    329:    auto pssm = static_cast< PotsBcSsm* >(ate.Owner());
  W022 Add using statement
    1: namespace CallBase
    1: namespace MediaBase
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/sn/PotsTreatments.h
  W020 Using statement in header
    45: using namespace NodeBase;
    46: using namespace SessionBase;
    47: using namespace MediaBase;
    48: using namespace CallBase;
  W053 Data could be const
    161:    PotsTreatmentQueue::QId qid_;
    165:    Q1Link link_;
    194:    Tone::Id tone_;
    198:    secs_t duration_;
  W075 Virtual function is public
    137:    virtual EventHandler::Rc ApplyTreatment
  W078 Remove virtual tag: function is an override or final
    103:    virtual void Display(std::ostream& stream,
    146:    virtual void Display(std::ostream& stream,
    184:    virtual void Display(std::ostream& stream,
    189:    virtual EventHandler::Rc ApplyTreatment
    216:    virtual EventHandler::Rc ApplyTreatment
    236:    virtual EventHandler::Rc ApplyTreatment
C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.cpp
  W007 Cast down the inheritance hierarchy
    193:    auto& pssm = static_cast< const PotsBcSsm& >(parentSsm);
    195:    auto wmlp = static_cast< PotsWmlFeatureProfile* >(prof->FindFeature(WML));
    438:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    465:    auto& ire = static_cast< InitiationReqEvent& >(currEvent);
    467:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    472:    wmlp_ = static_cast< PotsWmlFeatureProfile* >(prof->FindFeature(WML));
    544:    auto& sap = static_cast< AnalyzeSapEvent& >(currEvent);
    547:    auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    607:       auto& pssm = static_cast< PotsBcSsm& >(*Parent());
    627:    auto pssm = static_cast< PotsBcSsm* >(Parent());
    664:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    669:       auto tmsg = static_cast< TlvMessage* >(ame.Msg());
    671:       auto& wssm = static_cast< PotsWmlSsm& >(ssm);
    692:    auto& wssm = static_cast< PotsWmlSsm& >(ssm);
    693:    auto& pssm = static_cast< PotsBcSsm& >(*wssm.Parent());
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    125:    virtual Rc ProcessEvent
    134:    virtual Rc ProcessEvent
    143:    virtual Rc ProcessEvent
    153:    virtual void Display(ostream& stream,
    157:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    158:    virtual EventHandler::Rc ProcessInitAck
    160:    virtual EventHandler::Rc ProcessInitNack
    162:    virtual EventHandler::Rc ProcessSap
    164:    virtual EventHandler::Rc ProcessSip
    166:    virtual EventHandler::Rc ProcessSnp
  W112 Function could be defaulted
    116:    PotsWmlEventHandler();
    117:    virtual ~PotsWmlEventHandler();
  W117 Line can merge with the next line and be under the length limit
    381:    BindMsgAnalyzer
    393:    BindMsgAnalyzer
    395:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/sn/PotsWmlService.h
  W020 Using statement in header
    29: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    40:    virtual EventHandler::Rc ProcessEvent(const ServiceSM& parentSsm,
    50:    virtual ServiceSM* AllocModifier() const override;
    59:    virtual ServiceSM* AllocModifier() const override;
    68:    virtual ServiceSM* AllocModifier() const override;
C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.cpp
  W022 Add using statement
    1: namespace NodeBase
  W078 Remove virtual tag: function is an override or final
    62:    virtual word ProcessCommand(CliThread& cli) const override;
    63:    virtual void DisplaySizes(CliThread& cli, bool all) const override;
    102:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/sn/SnIncrement.h
  W020 Using statement in header
    27: using namespace NodeBase;
C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/sn/SnModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.cpp
  W006 reinterpret_cast
    88:    auto fake = reinterpret_cast< const MscAddress* >(&local);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    76: bool MscAddress::ExternalFid(FactoryId& fid) const
C:/Users/gregu/Documents/rsc/rsc/st/MscAddress.h
  W020 Using statement in header
    41: using namespace NodeBase;
    42: using namespace SessionBase;
  W053 Data could be const
    128:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    96:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.cpp
  W007 Cast down the inheritance hierarchy
    151:          tt = static_cast< const TransTrace* >(rec);
    159:          auto mt = static_cast< const MsgTrace* >(rec);
    712:    auto rxnet = static_cast< const TransTrace* >(events_[index]);
    729:             trans = static_cast< const TransTrace* >(rec);
    741:             return static_cast< const MsgTrace* >(rec);
    758:    auto txmsg = static_cast< const MsgTrace* >(events_[index]);
    779:             trans = static_cast< const TransTrace* >(rec);
    786:             auto rxmsg = static_cast< const MsgTrace* >(rec);
    947:          tt = static_cast< const TransTrace* >(rec);
    983:             mt = static_cast< const MsgTrace* >(rec);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/st/MscBuilder.h
  W020 Using statement in header
    54: using namespace NodeBase;
    55: using namespace SessionBase;
  W078 Remove virtual tag: function is an override or final
    94:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/st/MscContext.cpp
  W006 reinterpret_cast
    99:    auto fake = reinterpret_cast< const MscContext* >(&local);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
  W106 Function does not invoke Debug::ft
    88: bool MscContext::IsEqualTo(const void* rcvr, uint16_t cid) const
C:/Users/gregu/Documents/rsc/rsc/st/MscContext.h
  W020 Using statement in header
    33: using namespace NodeBase;
    34: using namespace SessionBase;
  W053 Data could be const
    145:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    117:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.cpp
  W006 reinterpret_cast
    92:    auto fake = reinterpret_cast< const MscContextPair* >(&local);
  W022 Add using statement
    1: namespace NodeBase
  W106 Function does not invoke Debug::ft
    56: void MscContextPair::Contexts(MscContext*& ctx1, MscContext*& ctx2) const
C:/Users/gregu/Documents/rsc/rsc/st/MscContextPair.h
  W020 Using statement in header
    34: using namespace NodeBase;
  W053 Data could be const
    85:    Q1Link link_;
  W078 Remove virtual tag: function is an override or final
    72:    virtual void Display(std::ostream& stream,
C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.cpp
  W007 Cast down the inheritance hierarchy
    140:    auto ctx = static_cast< Context* >(pool->FirstUsed(bid));
  W022 Add using statement
    1: namespace NodeBase
    1: namespace NodeTools
  W047 Data is init-only
    455:    FunctionGuard guard(FunctionGuard::MakePreemptable, yield);
  W078 Remove virtual tag: function is an override or final
    107:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    199:    virtual word ProcessCommand(CliThread& cli) const override;
    406:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    562:    virtual word ProcessSubcommand(CliThread& cli, id_t index) const override;
    635:    virtual word ProcessCommand(CliThread& cli) const override;
C:/Users/gregu/Documents/rsc/rsc/st/StIncrement.h
  W020 Using statement in header
    29: using namespace NodeTools;
  W022 Add using statement
    1: namespace NodeBase
  W060 Base class constructor is public
    40:    StSizesCommand() = default;
  W078 Remove virtual tag: function is an override or final
    43:    virtual void DisplaySizes(CliThread& cli, bool all) const override;
    45:    virtual word ProcessCommand(CliThread& cli) const override;
    66:    virtual void Enter() override;
C:/Users/gregu/Documents/rsc/rsc/st/StModule.cpp
  W022 Add using statement
    1: namespace NodeBase
C:/Users/gregu/Documents/rsc/rsc/st/StModule.h
  W020 Using statement in header
    28: using namespace NodeBase;
  W047 Data is init-only
    62:    static bool Registered;
  W078 Remove virtual tag: function is an override or final
    50:    virtual void Startup(RestartLevel level) override;
    54:    virtual void Shutdown(RestartLevel level) override;
  W092 Function could be free
    58:    static bool Register();
C:/Users/gregu/Documents/rsc/rsc/st/StTestData.cpp
  W007 Cast down the inheritance hierarchy
    69:    return static_cast< StTestData* >(data);
  W022 Add using statement
    1: namespace NodeBase
    1: namespace SessionBase
C:/Users/gregu/Documents/rsc/rsc/st/StTestData.h
  W020 Using statement in header
    32: using namespace NodeBase;
    33: using namespace SessionBase;
  W078 Remove virtual tag: function is an override or final
    74:    virtual void EventOccurred(Event evt) override;
    78:    virtual void Display(std::ostream& stream,
  W082 Adjacent arguments have the same type
    70:    Message* NextIcMsg(FactoryId fid, SignalId sid, SkipInfo& skip);
  W092 Function could be free
    47:    static StTestData* Access(CliThread& cli);
C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.cpp
  W007 Cast down the inheritance hierarchy
    505:    auto tpsm = static_cast< TestPsm* >(Psm());
    522:    auto tssm = static_cast< TestSsm* >(RootSsm());
    576:       if(p->GetFactory() == TestFactoryId) return static_cast< TestPsm* >(p);
    854:       SetTestPsm(static_cast< TestPsm* >(&psm));
    976:    auto& ame = static_cast< AnalyzeMsgEvent& >(currEvent);
    977:    auto tmsg = static_cast< TestMessage* >(ame.Msg());
    1015:    auto tmsg = static_cast< TestMessage* >(Context::ContextMsg());
    1024:    auto apsm = static_cast< SsmFactory* >(afac)->AllocOgPsm(*amsg);
    1035:    auto& tssm = static_cast< TestSsm& >(ssm);
    1053:    auto& tssm = static_cast< TestSsm& >(ssm);
    1072:    auto tmsg = static_cast< TestMessage* >(Context::ContextMsg());
    1073:    auto& tssm = static_cast< TestSsm& >(ssm);
  W022 Add using statement
    1: namespace NetworkBase
    1: namespace NodeBase
    1: namespace SessionBase
  W078 Remove virtual tag: function is an override or final
    141:    virtual Rc ProcessEvent
    150:    virtual Rc ProcessEvent
    159:    virtual Rc ProcessEvent
    168:    virtual Rc ProcessEvent
    177:    virtual Rc ProcessEvent
    186:    virtual Rc ProcessEvent
  W117 Line can merge with the next line and be under the length limit
    759:    BindMsgAnalyzer
    763:    BindEventHandler
    765:    BindEventHandler
    777:    BindMsgAnalyzer
    781:    BindEventHandler
    783:    BindEventHandler
C:/Users/gregu/Documents/rsc/rsc/st/TestSessions.h
  W020 Using statement in header
    43: using namespace SessionBase;
  W022 Add using statement
    1: namespace NodeBase
  W042 Member could be private
    264:    void UpdateTestPsm();
    340:    TestPsm* GetTestPsm() const { return testPsm_; }
  W078 Remove virtual tag: function is an override or final
    134:    virtual void Display(std::ostream& stream,
    143:    virtual IncomingRc ProcessIcMsg(Message& msg, Event*& event) override;
    147:    virtual OutgoingRc ProcessOgMsg(Message& msg) override;
    151:    virtual Message::Route Route() const override;
    155:    virtual void SendFinalMsg() override;
    202:    virtual void GetSubtended(Base* objects[], size_t& count) const override;
    206:    virtual void Display(std::ostream& stream,
    268:    virtual void SetNextState(StateId stid) override;
    272:    virtual void Display(std::ostream& stream,
    282:    virtual ServicePortId CalcPort(const AnalyzeMsgEvent& ame) override;
    286:    virtual void PsmDeleted(ProtocolSM& exPsm) override;
    316:    virtual RootServiceSM* AllocRoot
    321:    virtual ProtocolSM* AllocIcPsm
    358:    virtual void Display(std::ostream& stream,
  W082 Adjacent arguments have the same type
    346:    Message* NextIcMsg(FactoryId fid, SignalId sid, SkipInfo& skip);
  W090 Function could be const
    264:    void UpdateTestPsm();
