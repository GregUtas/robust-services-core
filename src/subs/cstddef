//==============================================================================
//
//  cstddef
//
#ifndef CSTDDEF_INCLUDED
#define CSTDDEF_INCLUDED

#include "cstdint"

//  FILES IN THE subs/ DIRECTORY MUST NOT BE INCLUDED IN THE BUILD.
//
//  Parser.h may not be able to parse headers outside the code base.  However,
//  types in those headers must somehow be made visible, so they are declared
//  in subs/ files.  This way, only what the code base uses has to be parsed,
//  and the parser does not have to support C++ constructs that the code base
//  does not use.  The subs/ files also serve to document what the code base
//  actually uses.
//
//  Because the code base does not #include any subs/ files, they are compiled
//  through subs.cpp.  However, they will not get included in an actual build.
//
//  The declarations in subs/ files are often simplified versions of their true
//  counterparts and may also omit things that the code base does not use.
//
typedef intptr_t ptrdiff_t;

#ifdef CT_COMPILER
   //  For the >parse command.
   //
   constexpr nullptr_t NULL = nullptr;
   typedef uintmax_t size_t;
#else
#ifdef OS_LINUX
   //  GCC's definition of size_t.
   //
   typedef unsigned long size_t;
#else
#ifdef WIN32
   //  Windows' x86 definition of size_t.
   //
   typedef unsigned int size_t;
#else
#ifdef MSVC_COMPILER
   //  clang's definition of size_t, which also works on Windows x64.
   //
   typedef unsigned long long size_t;
#endif
#endif
#endif
#endif

#ifndef CT_COMPILER
#ifndef MSVC_COMPILER
   //  Bizarrely, GCC doesn't define nullptr_t as a built-in.
   //
   namespace std
   {
      typedef uintptr_t nullptr_t;
   }
#endif
#endif

#endif
